(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-vendors"],{"00ee":function(t,e,n){var l=n("b622"),i=l("toStringTag"),r={};r[i]="z",t.exports="[object z]"===String(r)},"0366":function(t,e,n){var l=n("1c0b");t.exports=function(t,e,n){if(l(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,l){return t.call(e,n,l)};case 3:return function(n,l,i){return t.call(e,n,l,i)}}return function(){return t.apply(e,arguments)}}},"0481":function(t,e,n){"use strict";var l=n("23e7"),i=n("a2bf"),r=n("7b0b"),o=n("50c4"),u=n("a691"),a=n("65f0");l({target:"Array",proto:!0},{flat:function(){var t=arguments.length?arguments[0]:void 0,e=r(this),n=o(e.length),l=a(e,0);return l.length=i(l,e,e,n,0,void 0===t?1:u(t)),l}})},"0538":function(t,e,n){"use strict";var l=n("1c0b"),i=n("861d"),r=[].slice,o={},u=function(t,e,n){if(!(e in o)){for(var l=[],i=0;i<e;i++)l[i]="a["+i+"]";o[e]=Function("C,a","return new C("+l.join(",")+")")}return o[e](t,n)};t.exports=Function.bind||function(t){var e=l(this),n=r.call(arguments,1),o=function(){var l=n.concat(r.call(arguments));return this instanceof o?u(e,l.length,l):e.apply(t,l)};return i(e.prototype)&&(o.prototype=e.prototype),o}},"057f":function(t,e,n){var l=n("fc6a"),i=n("241c").f,r={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],u=function(t){try{return i(t)}catch(e){return o.slice()}};t.exports.f=function(t){return o&&"[object Window]"==r.call(t)?u(t):i(l(t))}},"06c5":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n("a630"),n("fb6a"),n("b0c0"),n("d3b7"),n("25f0"),n("3ca3");var l=n("6b75");function i(t,e){if(t){if("string"===typeof t)return Object(l["a"])(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(l["a"])(t,e):void 0}}},"06cf":function(t,e,n){var l=n("83ab"),i=n("d1e7"),r=n("5c6c"),o=n("fc6a"),u=n("c04e"),a=n("5135"),s=n("0cfb"),c=Object.getOwnPropertyDescriptor;e.f=l?c:function(t,e){if(t=o(t),e=u(e,!0),s)try{return c(t,e)}catch(n){}if(a(t,e))return r(!i.f.call(t,e),t[e])}},"0789":function(t,e,n){"use strict";n("99af");var l=n("d9f7");function i(){for(var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length,l=new Array(n>1?n-1:0),i=1;i<n;i++)l[i-1]=arguments[i];return(t=Array()).concat.apply(t,[e].concat(l))}function r(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"top center 0",n=arguments.length>2?arguments[2]:void 0;return{name:t,functional:!0,props:{group:{type:Boolean,default:!1},hideOnLeave:{type:Boolean,default:!1},leaveAbsolute:{type:Boolean,default:!1},mode:{type:String,default:n},origin:{type:String,default:e}},render:function(e,n){var r="transition".concat(n.props.group?"-group":""),o={props:{name:t,mode:n.props.mode},on:{beforeEnter:function(t){t.style.transformOrigin=n.props.origin,t.style.webkitTransformOrigin=n.props.origin}}};return n.props.leaveAbsolute&&(o.on.leave=i(o.on.leave,(function(t){return t.style.position="absolute"}))),n.props.hideOnLeave&&(o.on.leave=i(o.on.leave,(function(t){return t.style.display="none"}))),e(r,Object(l["a"])(n.data,o),n.children)}}}function o(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"in-out";return{name:t,functional:!0,props:{mode:{type:String,default:n}},render:function(n,i){return n("transition",Object(l["a"])(i.data,{props:{name:t},on:e}),i.children)}}}var u=n("ade3"),a=n("80d2"),s=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e?"width":"height",l="offset".concat(Object(a["z"])(n));return{beforeEnter:function(t){t._parent=t.parentNode,t._initialStyle=Object(u["a"])({transition:t.style.transition,overflow:t.style.overflow},n,t.style[n])},enter:function(e){var i=e._initialStyle;e.style.setProperty("transition","none","important"),e.style.overflow="hidden";var r="".concat(e[l],"px");e.style[n]="0",e.offsetHeight,e.style.transition=i.transition,t&&e._parent&&e._parent.classList.add(t),requestAnimationFrame((function(){e.style[n]=r}))},afterEnter:r,enterCancelled:r,leave:function(t){t._initialStyle=Object(u["a"])({transition:"",overflow:t.style.overflow},n,t.style[n]),t.style.overflow="hidden",t.style[n]="".concat(t[l],"px"),t.offsetHeight,requestAnimationFrame((function(){return t.style[n]="0"}))},afterLeave:i,leaveCancelled:i};function i(e){t&&e._parent&&e._parent.classList.remove(t),r(e)}function r(t){var e=t._initialStyle[n];t.style.overflow=t._initialStyle.overflow,null!=e&&(t.style[n]=e),delete t._initialStyle}};n.d(e,"c",(function(){return c})),n.d(e,"d",(function(){return h})),n.d(e,"e",(function(){return d})),n.d(e,"f",(function(){return f})),n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return m}));r("carousel-transition"),r("carousel-reverse-transition"),r("tab-transition"),r("tab-reverse-transition"),r("menu-transition");var c=r("fab-transition","center center","out-in"),h=(r("dialog-transition"),r("dialog-bottom-transition"),r("dialog-top-transition"),r("fade-transition")),d=r("scale-transition"),f=(r("scroll-x-transition"),r("scroll-x-reverse-transition"),r("scroll-y-transition"),r("scroll-y-reverse-transition"),r("slide-x-transition")),p=(r("slide-x-reverse-transition"),r("slide-y-transition"),r("slide-y-reverse-transition"),o("expand-transition",s())),m=o("expand-x-transition",s("",!0))},"07ac":function(t,e,n){var l=n("23e7"),i=n("6f53").values;l({target:"Object",stat:!0},{values:function(t){return i(t)}})},"0b25":function(t,e,n){var l=n("a691"),i=n("50c4");t.exports=function(t){if(void 0===t)return 0;var e=l(t),n=i(e);if(e!==n)throw RangeError("Wrong length or index");return n}},"0bc6":function(t,e,n){},"0cb2":function(t,e,n){var l=n("7b0b"),i=Math.floor,r="".replace,o=/\$([$&'`]|\d\d?|<[^>]*>)/g,u=/\$([$&'`]|\d\d?)/g;t.exports=function(t,e,n,a,s,c){var h=n+t.length,d=a.length,f=u;return void 0!==s&&(s=l(s),f=o),r.call(c,f,(function(l,r){var o;switch(r.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,n);case"'":return e.slice(h);case"<":o=s[r.slice(1,-1)];break;default:var u=+r;if(0===u)return l;if(u>d){var c=i(u/10);return 0===c?l:c<=d?void 0===a[c-1]?r.charAt(1):a[c-1]+r.charAt(1):l}o=a[u-1]}return void 0===o?"":o}))}},"0cfb":function(t,e,n){var l=n("83ab"),i=n("d039"),r=n("cc12");t.exports=!l&&!i((function(){return 7!=Object.defineProperty(r("div"),"a",{get:function(){return 7}}).a}))},"0d3b":function(t,e,n){var l=n("d039"),i=n("b622"),r=n("c430"),o=i("iterator");t.exports=!l((function(){var t=new URL("b?a=1&b=2&c=3","http://a"),e=t.searchParams,n="";return t.pathname="c%20d",e.forEach((function(t,l){e["delete"]("b"),n+=l+t})),r&&!t.toJSON||!e.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==e.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!e[o]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==n||"x"!==new URL("http://x",void 0).host}))},"10d2":function(t,e,n){"use strict";var l=n("8dd9");e["a"]=l["a"]},1148:function(t,e,n){"use strict";var l=n("a691"),i=n("1d80");t.exports="".repeat||function(t){var e=String(i(this)),n="",r=l(t);if(r<0||r==1/0)throw RangeError("Wrong number of repetitions");for(;r>0;(r>>>=1)&&(e+=e))1&r&&(n+=e);return n}},1276:function(t,e,n){"use strict";var l=n("d784"),i=n("44e7"),r=n("825a"),o=n("1d80"),u=n("4840"),a=n("8aa5"),s=n("50c4"),c=n("14c3"),h=n("9263"),d=n("d039"),f=[].push,p=Math.min,m=4294967295,v=!d((function(){return!RegExp(m,"y")}));l("split",2,(function(t,e,n){var l;return l="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var l=String(o(this)),r=void 0===n?m:n>>>0;if(0===r)return[];if(void 0===t)return[l];if(!i(t))return e.call(l,t,r);var u,a,s,c=[],d=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),p=0,v=new RegExp(t.source,d+"g");while(u=h.call(v,l)){if(a=v.lastIndex,a>p&&(c.push(l.slice(p,u.index)),u.length>1&&u.index<l.length&&f.apply(c,u.slice(1)),s=u[0].length,p=a,c.length>=r))break;v.lastIndex===u.index&&v.lastIndex++}return p===l.length?!s&&v.test("")||c.push(""):c.push(l.slice(p)),c.length>r?c.slice(0,r):c}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:e.call(this,t,n)}:e,[function(e,n){var i=o(this),r=void 0==e?void 0:e[t];return void 0!==r?r.call(e,i,n):l.call(String(i),e,n)},function(t,i){var o=n(l,t,this,i,l!==e);if(o.done)return o.value;var h=r(t),d=String(this),f=u(h,RegExp),g=h.unicode,y=(h.ignoreCase?"i":"")+(h.multiline?"m":"")+(h.unicode?"u":"")+(v?"y":"g"),b=new f(v?h:"^(?:"+h.source+")",y),x=void 0===i?m:i>>>0;if(0===x)return[];if(0===d.length)return null===c(b,d)?[d]:[];var w=0,_=0,M=[];while(_<d.length){b.lastIndex=v?_:0;var S,T=c(b,v?d:d.slice(_));if(null===T||(S=p(s(b.lastIndex+(v?0:_)),d.length))===w)_=a(d,_,g);else{if(M.push(d.slice(w,_)),M.length===x)return M;for(var E=1;E<=T.length-1;E++)if(M.push(T[E]),M.length===x)return M;_=w=S}}return M.push(d.slice(w)),M}]}),!v)},"129f":function(t,e){t.exports=Object.is||function(t,e){return t===e?0!==t||1/t===1/e:t!=t&&e!=e}},"132d":function(t,e,n){"use strict";n("7db0"),n("caad"),n("c975"),n("fb6a"),n("45fc"),n("a9e3"),n("2532"),n("498a"),n("c96a");var l,i=n("5530"),r=(n("4804"),n("7e2b")),o=n("a9ad"),u=n("af2b"),a=n("7560"),s=n("80d2"),c=n("2b0e"),h=n("58df");function d(t){return["fas","far","fal","fab","fad"].some((function(e){return t.includes(e)}))}function f(t){return/^[mzlhvcsqta]\s*[-+.0-9][^mlhvzcsqta]+/i.test(t)&&/[\dz]$/i.test(t)&&t.length>4}(function(t){t["xSmall"]="12px",t["small"]="16px",t["default"]="24px",t["medium"]="28px",t["large"]="36px",t["xLarge"]="40px"})(l||(l={}));var p=Object(h["a"])(r["a"],o["a"],u["a"],a["a"]).extend({name:"v-icon",props:{dense:Boolean,disabled:Boolean,left:Boolean,right:Boolean,size:[Number,String],tag:{type:String,required:!1,default:"i"}},computed:{medium:function(){return!1},hasClickListener:function(){return Boolean(this.listeners$.click||this.listeners$["!click"])}},methods:{getIcon:function(){var t="";return this.$slots.default&&(t=this.$slots.default[0].text.trim()),Object(s["y"])(this,t)},getSize:function(){var t={xSmall:this.xSmall,small:this.small,medium:this.medium,large:this.large,xLarge:this.xLarge},e=Object(s["u"])(t).find((function(e){return t[e]}));return e&&l[e]||Object(s["f"])(this.size)},getDefaultData:function(){return{staticClass:"v-icon notranslate",class:{"v-icon--disabled":this.disabled,"v-icon--left":this.left,"v-icon--link":this.hasClickListener,"v-icon--right":this.right,"v-icon--dense":this.dense},attrs:Object(i["a"])({"aria-hidden":!this.hasClickListener,disabled:this.hasClickListener&&this.disabled,type:this.hasClickListener?"button":void 0},this.attrs$),on:this.listeners$}},getSvgWrapperData:function(){var t=this.getSize(),e=Object(i["a"])(Object(i["a"])({},this.getDefaultData()),{},{style:t?{fontSize:t,height:t,width:t}:void 0});return this.applyColors(e),e},applyColors:function(t){t.class=Object(i["a"])(Object(i["a"])({},t.class),this.themeClasses),this.setTextColor(this.color,t)},renderFontIcon:function(t,e){var n=[],l=this.getDefaultData(),i="material-icons",r=t.indexOf("-"),o=r<=-1;o?n.push(t):(i=t.slice(0,r),d(i)&&(i="")),l.class[i]=!0,l.class[t]=!o;var u=this.getSize();return u&&(l.style={fontSize:u}),this.applyColors(l),e(this.hasClickListener?"button":this.tag,l,n)},renderSvgIcon:function(t,e){var n={class:"v-icon__svg",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img","aria-hidden":!0}},l=this.getSize();return l&&(n.style={fontSize:l,height:l,width:l}),e(this.hasClickListener?"button":"span",this.getSvgWrapperData(),[e("svg",n,[e("path",{attrs:{d:t}})])])},renderSvgIconComponent:function(t,e){var n={class:{"v-icon__component":!0}},l=this.getSize();l&&(n.style={fontSize:l,height:l,width:l}),this.applyColors(n);var i=t.component;return n.props=t.props,n.nativeOn=n.on,e(this.hasClickListener?"button":"span",this.getSvgWrapperData(),[e(i,n)])}},render:function(t){var e=this.getIcon();return"string"===typeof e?f(e)?this.renderSvgIcon(e,t):this.renderFontIcon(e,t):this.renderSvgIconComponent(e,t)}});e["a"]=c["a"].extend({name:"v-icon",$_wrapperFor:p,functional:!0,render:function(t,e){var n=e.data,l=e.children,i="";return n.domProps&&(i=n.domProps.textContent||n.domProps.innerHTML||i,delete n.domProps.textContent,delete n.domProps.innerHTML),t(p,n,i?[i]:l)}})},"13d5":function(t,e,n){"use strict";var l=n("23e7"),i=n("d58f").left,r=n("a640"),o=n("ae40"),u=n("2d00"),a=n("605d"),s=r("reduce"),c=o("reduce",{1:0}),h=!a&&u>79&&u<83;l({target:"Array",proto:!0,forced:!s||!c||h},{reduce:function(t){return i(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"145e":function(t,e,n){"use strict";var l=n("7b0b"),i=n("23cb"),r=n("50c4"),o=Math.min;t.exports=[].copyWithin||function(t,e){var n=l(this),u=r(n.length),a=i(t,u),s=i(e,u),c=arguments.length>2?arguments[2]:void 0,h=o((void 0===c?u:i(c,u))-s,u-a),d=1;s<a&&a<s+h&&(d=-1,s+=h-1,a+=h-1);while(h-- >0)s in n?n[a]=n[s]:delete n[a],a+=d,s+=d;return n}},"14c3":function(t,e,n){var l=n("c6b6"),i=n("9263");t.exports=function(t,e){var n=t.exec;if("function"===typeof n){var r=n.call(t,e);if("object"!==typeof r)throw TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==l(t))throw TypeError("RegExp#exec called on incompatible receiver");return i.call(t,e)}},"159b":function(t,e,n){var l=n("da84"),i=n("fdbc"),r=n("17c2"),o=n("9112");for(var u in i){var a=l[u],s=a&&a.prototype;if(s&&s.forEach!==r)try{o(s,"forEach",r)}catch(c){s.forEach=r}}},"166a":function(t,e,n){},"169a":function(t,e,n){"use strict";n("7db0"),n("caad"),n("45fc"),n("a9e3"),n("2532"),n("498a");var l=n("5530"),i=n("2909"),r=n("ade3"),o=(n("368e"),n("480e")),u=n("4ad4"),a=n("b848"),s=n("75eb"),c=(n("3c93"),n("a9ad")),h=n("7560"),d=n("f2e7"),f=n("58df"),p=Object(f["a"])(c["a"],h["a"],d["a"]).extend({name:"v-overlay",props:{absolute:Boolean,color:{type:String,default:"#212121"},dark:{type:Boolean,default:!0},opacity:{type:[Number,String],default:.46},value:{default:!0},zIndex:{type:[Number,String],default:5}},computed:{__scrim:function(){var t=this.setBackgroundColor(this.color,{staticClass:"v-overlay__scrim",style:{opacity:this.computedOpacity}});return this.$createElement("div",t)},classes:function(){return Object(l["a"])({"v-overlay--absolute":this.absolute,"v-overlay--active":this.isActive},this.themeClasses)},computedOpacity:function(){return Number(this.isActive?this.opacity:0)},styles:function(){return{zIndex:this.zIndex}}},methods:{genContent:function(){return this.$createElement("div",{staticClass:"v-overlay__content"},this.$slots.default)}},render:function(t){var e=[this.__scrim];return this.isActive&&e.push(this.genContent()),t("div",{staticClass:"v-overlay",class:this.classes,style:this.styles},e)}}),m=p,v=n("80d2"),g=n("2b0e"),y=g["a"].extend().extend({name:"overlayable",props:{hideOverlay:Boolean,overlayColor:String,overlayOpacity:[Number,String]},data:function(){return{animationFrame:0,overlay:null}},watch:{hideOverlay:function(t){this.isActive&&(t?this.removeOverlay():this.genOverlay())}},beforeDestroy:function(){this.removeOverlay()},methods:{createOverlay:function(){var t=new m({propsData:{absolute:this.absolute,value:!1,color:this.overlayColor,opacity:this.overlayOpacity}});t.$mount();var e=this.absolute?this.$el.parentNode:document.querySelector("[data-app]");e&&e.insertBefore(t.$el,e.firstChild),this.overlay=t},genOverlay:function(){var t=this;if(this.hideScroll(),!this.hideOverlay)return this.overlay||this.createOverlay(),this.animationFrame=requestAnimationFrame((function(){t.overlay&&(void 0!==t.activeZIndex?t.overlay.zIndex=String(t.activeZIndex-1):t.$el&&(t.overlay.zIndex=Object(v["q"])(t.$el)),t.overlay.value=!0)})),!0},removeOverlay:function(){var t=this,e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.overlay&&(Object(v["a"])(this.overlay.$el,"transitionend",(function(){t.overlay&&t.overlay.$el&&t.overlay.$el.parentNode&&!t.overlay.value&&(t.overlay.$el.parentNode.removeChild(t.overlay.$el),t.overlay.$destroy(),t.overlay=null)})),cancelAnimationFrame(this.animationFrame),this.overlay.value=!1),e&&this.showScroll()},scrollListener:function(t){if("keydown"===t.type){if(["INPUT","TEXTAREA","SELECT"].includes(t.target.tagName)||t.target.isContentEditable)return;var e=[v["t"].up,v["t"].pageup],n=[v["t"].down,v["t"].pagedown];if(e.includes(t.keyCode))t.deltaY=-1;else{if(!n.includes(t.keyCode))return;t.deltaY=1}}(t.target===this.overlay||"keydown"!==t.type&&t.target===document.body||this.checkPath(t))&&t.preventDefault()},hasScrollbar:function(t){if(!t||t.nodeType!==Node.ELEMENT_NODE)return!1;var e=window.getComputedStyle(t);return["auto","scroll"].includes(e.overflowY)&&t.scrollHeight>t.clientHeight},shouldScroll:function(t,e){return 0===t.scrollTop&&e<0||t.scrollTop+t.clientHeight===t.scrollHeight&&e>0},isInside:function(t,e){return t===e||null!==t&&t!==document.body&&this.isInside(t.parentNode,e)},checkPath:function(t){var e=t.path||this.composedPath(t),n=t.deltaY;if("keydown"===t.type&&e[0]===document.body){var l=this.$refs.dialog,i=window.getSelection().anchorNode;return!(l&&this.hasScrollbar(l)&&this.isInside(i,l))||this.shouldScroll(l,n)}for(var r=0;r<e.length;r++){var o=e[r];if(o===document)return!0;if(o===document.documentElement)return!0;if(o===this.$refs.content)return!0;if(this.hasScrollbar(o))return this.shouldScroll(o,n)}return!0},composedPath:function(t){if(t.composedPath)return t.composedPath();var e=[],n=t.target;while(n){if(e.push(n),"HTML"===n.tagName)return e.push(document),e.push(window),e;n=n.parentElement}return e},hideScroll:function(){this.$vuetify.breakpoint.smAndDown?document.documentElement.classList.add("overflow-y-hidden"):(Object(v["b"])(window,"wheel",this.scrollListener,{passive:!1}),window.addEventListener("keydown",this.scrollListener))},showScroll:function(){document.documentElement.classList.remove("overflow-y-hidden"),window.removeEventListener("wheel",this.scrollListener),window.removeEventListener("keydown",this.scrollListener)}}}),b=n("e4d3"),x=n("21be"),w=n("a293"),_=n("d9bd"),M=Object(f["a"])(u["a"],a["a"],s["a"],y,b["a"],x["a"],d["a"]);e["a"]=M.extend({name:"v-dialog",directives:{ClickOutside:w["a"]},props:{dark:Boolean,disabled:Boolean,fullscreen:Boolean,light:Boolean,maxWidth:{type:[String,Number],default:"none"},noClickAnimation:Boolean,origin:{type:String,default:"center center"},persistent:Boolean,retainFocus:{type:Boolean,default:!0},scrollable:Boolean,transition:{type:[String,Boolean],default:"dialog-transition"},width:{type:[String,Number],default:"auto"}},data:function(){return{activatedBy:null,animate:!1,animateTimeout:-1,isActive:!!this.value,stackMinZIndex:200,previousActiveElement:null}},computed:{classes:function(){var t;return t={},Object(r["a"])(t,"v-dialog ".concat(this.contentClass).trim(),!0),Object(r["a"])(t,"v-dialog--active",this.isActive),Object(r["a"])(t,"v-dialog--persistent",this.persistent),Object(r["a"])(t,"v-dialog--fullscreen",this.fullscreen),Object(r["a"])(t,"v-dialog--scrollable",this.scrollable),Object(r["a"])(t,"v-dialog--animated",this.animate),t},contentClasses:function(){return{"v-dialog__content":!0,"v-dialog__content--active":this.isActive}},hasActivator:function(){return Boolean(!!this.$slots.activator||!!this.$scopedSlots.activator)}},watch:{isActive:function(t){var e;t?(this.show(),this.hideScroll()):(this.removeOverlay(),this.unbind(),null==(e=this.previousActiveElement)||e.focus())},fullscreen:function(t){this.isActive&&(t?(this.hideScroll(),this.removeOverlay(!1)):(this.showScroll(),this.genOverlay()))}},created:function(){this.$attrs.hasOwnProperty("full-width")&&Object(_["e"])("full-width",this)},beforeMount:function(){var t=this;this.$nextTick((function(){t.isBooted=t.isActive,t.isActive&&t.show()}))},beforeDestroy:function(){"undefined"!==typeof window&&this.unbind()},methods:{animateClick:function(){var t=this;this.animate=!1,this.$nextTick((function(){t.animate=!0,window.clearTimeout(t.animateTimeout),t.animateTimeout=window.setTimeout((function(){return t.animate=!1}),150)}))},closeConditional:function(t){var e=t.target;return!(this._isDestroyed||!this.isActive||this.$refs.content.contains(e)||this.overlay&&e&&!this.overlay.$el.contains(e))&&this.activeZIndex>=this.getMaxZIndex()},hideScroll:function(){this.fullscreen?document.documentElement.classList.add("overflow-y-hidden"):y.options.methods.hideScroll.call(this)},show:function(){var t=this;!this.fullscreen&&!this.hideOverlay&&this.genOverlay(),this.$nextTick((function(){t.$nextTick((function(){t.previousActiveElement=document.activeElement,t.$refs.content.focus(),t.bind()}))}))},bind:function(){window.addEventListener("focusin",this.onFocusin)},unbind:function(){window.removeEventListener("focusin",this.onFocusin)},onClickOutside:function(t){this.$emit("click:outside",t),this.persistent?this.noClickAnimation||this.animateClick():this.isActive=!1},onKeydown:function(t){if(t.keyCode===v["t"].esc&&!this.getOpenDependents().length)if(this.persistent)this.noClickAnimation||this.animateClick();else{this.isActive=!1;var e=this.getActivator();this.$nextTick((function(){return e&&e.focus()}))}this.$emit("keydown",t)},onFocusin:function(t){if(t&&this.retainFocus){var e=t.target;if(e&&![document,this.$refs.content].includes(e)&&!this.$refs.content.contains(e)&&this.activeZIndex>=this.getMaxZIndex()&&!this.getOpenDependentElements().some((function(t){return t.contains(e)}))){var n=this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'),l=Object(i["a"])(n).find((function(t){return!t.hasAttribute("disabled")}));l&&l.focus()}}},genContent:function(){var t=this;return this.showLazyContent((function(){return[t.$createElement(o["a"],{props:{root:!0,light:t.light,dark:t.dark}},[t.$createElement("div",{class:t.contentClasses,attrs:Object(l["a"])({role:"document",tabindex:t.isActive?0:void 0},t.getScopeIdAttrs()),on:{keydown:t.onKeydown},style:{zIndex:t.activeZIndex},ref:"content"},[t.genTransition()])])]}))},genTransition:function(){var t=this.genInnerContent();return this.transition?this.$createElement("transition",{props:{name:this.transition,origin:this.origin,appear:!0}},[t]):t},genInnerContent:function(){var t={class:this.classes,ref:"dialog",directives:[{name:"click-outside",value:{handler:this.onClickOutside,closeConditional:this.closeConditional,include:this.getOpenDependentElements}},{name:"show",value:this.isActive}],style:{transformOrigin:this.origin}};return this.fullscreen||(t.style=Object(l["a"])(Object(l["a"])({},t.style),{},{maxWidth:"none"===this.maxWidth?void 0:Object(v["f"])(this.maxWidth),width:"auto"===this.width?void 0:Object(v["f"])(this.width)})),this.$createElement("div",t,this.getContentSlot())}},render:function(t){return t("div",{staticClass:"v-dialog__container",class:{"v-dialog__container--attached":""===this.attach||!0===this.attach||"attach"===this.attach},attrs:{role:"dialog"}},[this.genActivator(),this.genContent()])}})},"16b7":function(t,e,n){"use strict";n("a9e3");var l=n("2b0e");e["a"]=l["a"].extend().extend({name:"delayable",props:{openDelay:{type:[Number,String],default:0},closeDelay:{type:[Number,String],default:0}},data:function(){return{openTimeout:void 0,closeTimeout:void 0}},methods:{clearDelay:function(){clearTimeout(this.openTimeout),clearTimeout(this.closeTimeout)},runDelay:function(t,e){var n=this;this.clearDelay();var l=parseInt(this["".concat(t,"Delay")],10);this["".concat(t,"Timeout")]=setTimeout(e||function(){n.isActive={open:!0,close:!1}[t]},l)}}})},"170b":function(t,e,n){"use strict";var l=n("ebb5"),i=n("50c4"),r=n("23cb"),o=n("4840"),u=l.aTypedArray,a=l.exportTypedArrayMethod;a("subarray",(function(t,e){var n=u(this),l=n.length,a=r(t,l);return new(o(n,n.constructor))(n.buffer,n.byteOffset+a*n.BYTES_PER_ELEMENT,i((void 0===e?l:r(e,l))-a))}))},"17c2":function(t,e,n){"use strict";var l=n("b727").forEach,i=n("a640"),r=n("ae40"),o=i("forEach"),u=r("forEach");t.exports=o&&u?[].forEach:function(t){return l(this,t,arguments.length>1?arguments[1]:void 0)}},1800:function(t,e,n){"use strict";n("4de4");var l=n("2b0e");e["a"]=l["a"].extend({name:"v-list-item-action",functional:!0,render:function(t,e){var n=e.data,l=e.children,i=void 0===l?[]:l;n.staticClass=n.staticClass?"v-list-item__action ".concat(n.staticClass):"v-list-item__action";var r=i.filter((function(t){return!1===t.isComment&&" "!==t.text}));return r.length>1&&(n.staticClass+=" v-list-item__action--stack"),t("div",n,i)}})},"182d":function(t,e,n){var l=n("f8cd");t.exports=function(t,e){var n=l(t);if(n%e)throw RangeError("Wrong offset");return n}},"18a5":function(t,e,n){"use strict";var l=n("23e7"),i=n("857a"),r=n("af03");l({target:"String",proto:!0,forced:r("anchor")},{anchor:function(t){return i(this,"a","name",t)}})},"19aa":function(t,e){t.exports=function(t,e,n){if(!(t instanceof e))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return t}},"1b2c":function(t,e,n){},"1be4":function(t,e,n){var l=n("d066");t.exports=l("document","documentElement")},"1c0b":function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},"1c7e":function(t,e,n){var l=n("b622"),i=l("iterator"),r=!1;try{var o=0,u={next:function(){return{done:!!o++}},return:function(){r=!0}};u[i]=function(){return this},Array.from(u,(function(){throw 2}))}catch(a){}t.exports=function(t,e){if(!e&&!r)return!1;var n=!1;try{var l={};l[i]=function(){return{next:function(){return{done:n=!0}}}},t(l)}catch(a){}return n}},"1c87":function(t,e,n){"use strict";n("99af"),n("ac1f"),n("5319"),n("498a"),n("9911");var l=n("ade3"),i=n("5530"),r=n("2b0e"),o=n("5607"),u=n("80d2");e["a"]=r["a"].extend({name:"routable",directives:{Ripple:o["a"]},props:{activeClass:String,append:Boolean,disabled:Boolean,exact:{type:Boolean,default:void 0},exactActiveClass:String,link:Boolean,href:[String,Object],to:[String,Object],nuxt:Boolean,replace:Boolean,ripple:{type:[Boolean,Object],default:null},tag:String,target:String},data:function(){return{isActive:!1,proxyClass:""}},computed:{classes:function(){var t={};return this.to||(this.activeClass&&(t[this.activeClass]=this.isActive),this.proxyClass&&(t[this.proxyClass]=this.isActive)),t},computedRipple:function(){var t;return null!=(t=this.ripple)?t:!this.disabled&&this.isClickable},isClickable:function(){return!this.disabled&&Boolean(this.isLink||this.$listeners.click||this.$listeners["!click"]||this.$attrs.tabindex)},isLink:function(){return this.to||this.href||this.link},styles:function(){return{}}},watch:{$route:"onRouteChange"},methods:{click:function(t){this.$emit("click",t)},generateRouteLink:function(){var t,e,n=this.exact,r=(t={attrs:{tabindex:"tabindex"in this.$attrs?this.$attrs.tabindex:void 0},class:this.classes,style:this.styles,props:{},directives:[{name:"ripple",value:this.computedRipple}]},Object(l["a"])(t,this.to?"nativeOn":"on",Object(i["a"])(Object(i["a"])({},this.$listeners),{},{click:this.click})),Object(l["a"])(t,"ref","link"),t);if("undefined"===typeof this.exact&&(n="/"===this.to||this.to===Object(this.to)&&"/"===this.to.path),this.to){var o=this.activeClass,u=this.exactActiveClass||o;this.proxyClass&&(o="".concat(o," ").concat(this.proxyClass).trim(),u="".concat(u," ").concat(this.proxyClass).trim()),e=this.nuxt?"nuxt-link":"router-link",Object.assign(r.props,{to:this.to,exact:n,activeClass:o,exactActiveClass:u,append:this.append,replace:this.replace})}else e=(this.href?"a":this.tag)||"div","a"===e&&this.href&&(r.attrs.href=this.href);return this.target&&(r.attrs.target=this.target),{tag:e,data:r}},onRouteChange:function(){var t=this;if(this.to&&this.$refs.link&&this.$route){var e="".concat(this.activeClass," ").concat(this.proxyClass||"").trim(),n="_vnode.data.class.".concat(e);this.$nextTick((function(){Object(u["m"])(t.$refs.link,n)&&t.toggle()}))}},toggle:function(){}}})},"1cdc":function(t,e,n){var l=n("342f");t.exports=/(iphone|ipod|ipad).*applewebkit/i.test(l)},"1d80":function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on "+t);return t}},"1da1":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n("d3b7");function l(t,e,n,l,i,r,o){try{var u=t[r](o),a=u.value}catch(s){return void n(s)}u.done?e(a):Promise.resolve(a).then(l,i)}function i(t){return function(){var e=this,n=arguments;return new Promise((function(i,r){var o=t.apply(e,n);function u(t){l(o,i,r,u,a,"next",t)}function a(t){l(o,i,r,u,a,"throw",t)}u(void 0)}))}}},"1dde":function(t,e,n){var l=n("d039"),i=n("b622"),r=n("2d00"),o=i("species");t.exports=function(t){return r>=51||!l((function(){var e=[],n=e.constructor={};return n[o]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},"20bf":function(t,e,n){"use strict";var l=n("8aa7"),i=n("ebb5").exportTypedArrayStaticMethod,r=n("a078");i("from",r,l)},"219c":function(t,e,n){"use strict";var l=n("ebb5"),i=l.aTypedArray,r=l.exportTypedArrayMethod,o=[].sort;r("sort",(function(t){return o.call(i(this),t)}))},"21be":function(t,e,n){"use strict";n("99af"),n("caad"),n("2532");var l=n("2909"),i=n("2b0e"),r=n("80d2");e["a"]=i["a"].extend().extend({name:"stackable",data:function(){return{stackElement:null,stackExclude:null,stackMinZIndex:0,isActive:!1}},computed:{activeZIndex:function(){if("undefined"===typeof window)return 0;var t=this.stackElement||this.$refs.content,e=this.isActive?this.getMaxZIndex(this.stackExclude||[t])+2:Object(r["q"])(t);return null==e?e:parseInt(e)}},methods:{getMaxZIndex:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=this.$el,n=[this.stackMinZIndex,Object(r["q"])(e)],i=[].concat(Object(l["a"])(document.getElementsByClassName("v-menu__content--active")),Object(l["a"])(document.getElementsByClassName("v-dialog__content--active"))),o=0;o<i.length;o++)t.includes(i[o])||n.push(Object(r["q"])(i[o]));return Math.max.apply(Math,n)}}})},2266:function(t,e,n){var l=n("825a"),i=n("e95a"),r=n("50c4"),o=n("0366"),u=n("35a1"),a=n("2a62"),s=function(t,e){this.stopped=t,this.result=e};t.exports=function(t,e,n){var c,h,d,f,p,m,v,g=n&&n.that,y=!(!n||!n.AS_ENTRIES),b=!(!n||!n.IS_ITERATOR),x=!(!n||!n.INTERRUPTED),w=o(e,g,1+y+x),_=function(t){return c&&a(c),new s(!0,t)},M=function(t){return y?(l(t),x?w(t[0],t[1],_):w(t[0],t[1])):x?w(t,_):w(t)};if(b)c=t;else{if(h=u(t),"function"!=typeof h)throw TypeError("Target is not iterable");if(i(h)){for(d=0,f=r(t.length);f>d;d++)if(p=M(t[d]),p&&p instanceof s)return p;return new s(!1)}c=h.call(t)}m=c.next;while(!(v=m.call(c)).done){try{p=M(v.value)}catch(S){throw a(c),S}if("object"==typeof p&&p&&p instanceof s)return p}return new s(!1)}},"23a7":function(t,e,n){"use strict";n("99af"),n("a623"),n("4160"),n("caad"),n("d81d"),n("13d5"),n("fb6a"),n("a434"),n("b0c0"),n("a9e3"),n("159b");var l=n("2909"),i=n("5530"),r=n("53ca"),o=(n("5803"),n("2677")),u=n("cc20"),a=n("80d2"),s=n("d9bd"),c=n("d9f7");e["a"]=o["a"].extend({name:"v-file-input",model:{prop:"value",event:"change"},props:{chips:Boolean,clearable:{type:Boolean,default:!0},counterSizeString:{type:String,default:"$vuetify.fileInput.counterSize"},counterString:{type:String,default:"$vuetify.fileInput.counter"},hideInput:Boolean,placeholder:String,prependIcon:{type:String,default:"$file"},readonly:{type:Boolean,default:!1},showSize:{type:[Boolean,Number],default:!1,validator:function(t){return"boolean"===typeof t||[1e3,1024].includes(t)}},smallChips:Boolean,truncateLength:{type:[Number,String],default:22},type:{type:String,default:"file"},value:{default:void 0,validator:function(t){return Object(a["A"])(t).every((function(t){return null!=t&&"object"===Object(r["a"])(t)}))}}},computed:{classes:function(){return Object(i["a"])(Object(i["a"])({},o["a"].options.computed.classes.call(this)),{},{"v-file-input":!0})},computedCounterValue:function(){var t=this.isMultiple&&this.lazyValue?this.lazyValue.length:this.lazyValue instanceof File?1:0;if(!this.showSize)return this.$vuetify.lang.t(this.counterString,t);var e=this.internalArrayValue.reduce((function(t,e){var n=e.size,l=void 0===n?0:n;return t+l}),0);return this.$vuetify.lang.t(this.counterSizeString,t,Object(a["r"])(e,1024===this.base))},internalArrayValue:function(){return Object(a["A"])(this.internalValue)},internalValue:{get:function(){return this.lazyValue},set:function(t){this.lazyValue=t,this.$emit("change",this.lazyValue)}},isDirty:function(){return this.internalArrayValue.length>0},isLabelActive:function(){return this.isDirty},isMultiple:function(){return this.$attrs.hasOwnProperty("multiple")},text:function(){var t=this;return this.isDirty?this.internalArrayValue.map((function(e){var n=e.name,l=void 0===n?"":n,i=e.size,r=void 0===i?0:i,o=t.truncateText(l);return t.showSize?"".concat(o," (").concat(Object(a["r"])(r,1024===t.base),")"):o})):[this.placeholder]},base:function(){return"boolean"!==typeof this.showSize?this.showSize:void 0},hasChips:function(){return this.chips||this.smallChips}},watch:{readonly:{handler:function(t){!0===t&&Object(s["b"])("readonly is not supported on <v-file-input>",this)},immediate:!0},value:function(t){var e=this.isMultiple?t:t?[t]:[];Object(a["i"])(e,this.$refs.input.files)||(this.$refs.input.value="")}},methods:{clearableCallback:function(){this.internalValue=this.isMultiple?[]:null,this.$refs.input.value=""},genChips:function(){var t=this;return this.isDirty?this.text.map((function(e,n){return t.$createElement(u["a"],{props:{small:t.smallChips},on:{"click:close":function(){var e=t.internalValue;e.splice(n,1),t.internalValue=e}}},[e])})):[]},genControl:function(){var t=o["a"].options.methods.genControl.call(this);return this.hideInput&&(t.data.style=Object(c["c"])(t.data.style,{display:"none"})),t},genInput:function(){var t=o["a"].options.methods.genInput.call(this);return delete t.data.domProps.value,delete t.data.on.input,t.data.on.change=this.onInput,[this.genSelections(),t]},genPrependSlot:function(){var t=this;if(!this.prependIcon)return null;var e=this.genIcon("prepend",(function(){t.$refs.input.click()}));return this.genSlot("prepend","outer",[e])},genSelectionText:function(){var t=this.text.length;return t<2?this.text:this.showSize&&!this.counter?[this.computedCounterValue]:[this.$vuetify.lang.t(this.counterString,t)]},genSelections:function(){var t=this,e=[];return this.isDirty&&this.$scopedSlots.selection?this.internalArrayValue.forEach((function(n,l){t.$scopedSlots.selection&&e.push(t.$scopedSlots.selection({text:t.text[l],file:n,index:l}))})):e.push(this.hasChips&&this.isDirty?this.genChips():this.genSelectionText()),this.$createElement("div",{staticClass:"v-file-input__text",class:{"v-file-input__text--placeholder":this.placeholder&&!this.isDirty,"v-file-input__text--chips":this.hasChips&&!this.$scopedSlots.selection}},e)},genTextFieldSlot:function(){var t=this,e=o["a"].options.methods.genTextFieldSlot.call(this);return e.data.on=Object(i["a"])(Object(i["a"])({},e.data.on||{}),{},{click:function(){return t.$refs.input.click()}}),e},onInput:function(t){var e=Object(l["a"])(t.target.files||[]);this.internalValue=this.isMultiple?e:e[0],this.initialValue=this.internalValue},onKeyDown:function(t){this.$emit("keydown",t)},truncateText:function(t){if(t.length<Number(this.truncateLength))return t;var e=Math.floor((Number(this.truncateLength)-1)/2);return"".concat(t.slice(0,e),"…").concat(t.slice(t.length-e))}}})},"23cb":function(t,e,n){var l=n("a691"),i=Math.max,r=Math.min;t.exports=function(t,e){var n=l(t);return n<0?i(n+e,0):r(n,e)}},"23e7":function(t,e,n){var l=n("da84"),i=n("06cf").f,r=n("9112"),o=n("6eeb"),u=n("ce4e"),a=n("e893"),s=n("94ca");t.exports=function(t,e){var n,c,h,d,f,p,m=t.target,v=t.global,g=t.stat;if(c=v?l:g?l[m]||u(m,{}):(l[m]||{}).prototype,c)for(h in e){if(f=e[h],t.noTargetGet?(p=i(c,h),d=p&&p.value):d=c[h],n=s(v?h:m+(g?".":"#")+h,t.forced),!n&&void 0!==d){if(typeof f===typeof d)continue;a(f,d)}(t.sham||d&&d.sham)&&r(f,"sham",!0),o(c,h,f,t)}}},"241c":function(t,e,n){var l=n("ca84"),i=n("7839"),r=i.concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return l(t,r)}},"24b2":function(t,e,n){"use strict";n("a9e3");var l=n("80d2"),i=n("2b0e");e["a"]=i["a"].extend({name:"measurable",props:{height:[Number,String],maxHeight:[Number,String],maxWidth:[Number,String],minHeight:[Number,String],minWidth:[Number,String],width:[Number,String]},computed:{measurableStyles:function(){var t={},e=Object(l["f"])(this.height),n=Object(l["f"])(this.minHeight),i=Object(l["f"])(this.minWidth),r=Object(l["f"])(this.maxHeight),o=Object(l["f"])(this.maxWidth),u=Object(l["f"])(this.width);return e&&(t.height=e),n&&(t.minHeight=n),i&&(t.minWidth=i),r&&(t.maxHeight=r),o&&(t.maxWidth=o),u&&(t.width=u),t}}})},"24e2":function(t,e,n){"use strict";var l=n("e0c7");e["a"]=l["a"]},2532:function(t,e,n){"use strict";var l=n("23e7"),i=n("5a34"),r=n("1d80"),o=n("ab13");l({target:"String",proto:!0,forced:!o("includes")},{includes:function(t){return!!~String(r(this)).indexOf(i(t),arguments.length>1?arguments[1]:void 0)}})},"25a1":function(t,e,n){"use strict";var l=n("ebb5"),i=n("d58f").right,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("reduceRight",(function(t){return i(r(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)}))},"25a8":function(t,e,n){},"25f0":function(t,e,n){"use strict";var l=n("6eeb"),i=n("825a"),r=n("d039"),o=n("ad6d"),u="toString",a=RegExp.prototype,s=a[u],c=r((function(){return"/a/b"!=s.call({source:"a",flags:"b"})})),h=s.name!=u;(c||h)&&l(RegExp.prototype,u,(function(){var t=i(this),e=String(t.source),n=t.flags,l=String(void 0===n&&t instanceof RegExp&&!("flags"in a)?o.call(t):n);return"/"+e+"/"+l}),{unsafe:!0})},2626:function(t,e,n){"use strict";var l=n("d066"),i=n("9bf2"),r=n("b622"),o=n("83ab"),u=r("species");t.exports=function(t){var e=l(t),n=i.f;o&&e&&!e[u]&&n(e,u,{configurable:!0,get:function(){return this}})}},2677:function(t,e,n){"use strict";var l=n("8654");e["a"]=l["a"]},2877:function(t,e,n){"use strict";function l(t,e,n,l,i,r,o,u){var a,s="function"===typeof t?t.options:t;if(e&&(s.render=e,s.staticRenderFns=n,s._compiled=!0),l&&(s.functional=!0),r&&(s._scopeId="data-v-"+r),o?(a=function(t){t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,t||"undefined"===typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},s._ssrRegister=a):i&&(a=u?function(){i.call(this,(s.functional?this.parent:this).$root.$options.shadowRoot)}:i),a)if(s.functional){s._injectStyles=a;var c=s.render;s.render=function(t,e){return a.call(e),c(t,e)}}else{var h=s.beforeCreate;s.beforeCreate=h?[].concat(h,a):[a]}return{exports:t,options:s}}n.d(e,"a",(function(){return l}))},2909:function(t,e,n){"use strict";var l=n("6b75");function i(t){if(Array.isArray(t))return Object(l["a"])(t)}n("a4d3"),n("e01a"),n("d28b"),n("a630"),n("d3b7"),n("3ca3"),n("ddb0");function r(t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}var o=n("06c5");function u(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function a(t){return i(t)||r(t)||Object(o["a"])(t)||u()}n.d(e,"a",(function(){return a}))},2954:function(t,e,n){"use strict";var l=n("ebb5"),i=n("4840"),r=n("d039"),o=l.aTypedArray,u=l.aTypedArrayConstructor,a=l.exportTypedArrayMethod,s=[].slice,c=r((function(){new Int8Array(1).slice()}));a("slice",(function(t,e){var n=s.call(o(this),t,e),l=i(this,this.constructor),r=0,a=n.length,c=new(u(l))(a);while(a>r)c[r]=n[r++];return c}),c)},"297c":function(t,e,n){"use strict";n("a9e3");var l=n("2b0e"),i=(n("c7cd"),n("5530")),r=n("ade3"),o=(n("6ece"),n("0789")),u=n("a9ad"),a=n("fe6c"),s=n("a452"),c=n("7560"),h=n("80d2"),d=n("58df"),f=Object(d["a"])(u["a"],Object(a["b"])(["absolute","fixed","top","bottom"]),s["a"],c["a"]),p=f.extend({name:"v-progress-linear",props:{active:{type:Boolean,default:!0},backgroundColor:{type:String,default:null},backgroundOpacity:{type:[Number,String],default:null},bufferValue:{type:[Number,String],default:100},color:{type:String,default:"primary"},height:{type:[Number,String],default:4},indeterminate:Boolean,query:Boolean,reverse:Boolean,rounded:Boolean,stream:Boolean,striped:Boolean,value:{type:[Number,String],default:0}},data:function(){return{internalLazyValue:this.value||0}},computed:{__cachedBackground:function(){return this.$createElement("div",this.setBackgroundColor(this.backgroundColor||this.color,{staticClass:"v-progress-linear__background",style:this.backgroundStyle}))},__cachedBar:function(){return this.$createElement(this.computedTransition,[this.__cachedBarType])},__cachedBarType:function(){return this.indeterminate?this.__cachedIndeterminate:this.__cachedDeterminate},__cachedBuffer:function(){return this.$createElement("div",{staticClass:"v-progress-linear__buffer",style:this.styles})},__cachedDeterminate:function(){return this.$createElement("div",this.setBackgroundColor(this.color,{staticClass:"v-progress-linear__determinate",style:{width:Object(h["f"])(this.normalizedValue,"%")}}))},__cachedIndeterminate:function(){return this.$createElement("div",{staticClass:"v-progress-linear__indeterminate",class:{"v-progress-linear__indeterminate--active":this.active}},[this.genProgressBar("long"),this.genProgressBar("short")])},__cachedStream:function(){return this.stream?this.$createElement("div",this.setTextColor(this.color,{staticClass:"v-progress-linear__stream",style:{width:Object(h["f"])(100-this.normalizedBuffer,"%")}})):null},backgroundStyle:function(){var t,e=null==this.backgroundOpacity?this.backgroundColor?1:.3:parseFloat(this.backgroundOpacity);return t={opacity:e},Object(r["a"])(t,this.isReversed?"right":"left",Object(h["f"])(this.normalizedValue,"%")),Object(r["a"])(t,"width",Object(h["f"])(this.normalizedBuffer-this.normalizedValue,"%")),t},classes:function(){return Object(i["a"])({"v-progress-linear--absolute":this.absolute,"v-progress-linear--fixed":this.fixed,"v-progress-linear--query":this.query,"v-progress-linear--reactive":this.reactive,"v-progress-linear--reverse":this.isReversed,"v-progress-linear--rounded":this.rounded,"v-progress-linear--striped":this.striped},this.themeClasses)},computedTransition:function(){return this.indeterminate?o["d"]:o["f"]},isReversed:function(){return this.$vuetify.rtl!==this.reverse},normalizedBuffer:function(){return this.normalize(this.bufferValue)},normalizedValue:function(){return this.normalize(this.internalLazyValue)},reactive:function(){return Boolean(this.$listeners.change)},styles:function(){var t={};return this.active||(t.height=0),this.indeterminate||100===parseFloat(this.normalizedBuffer)||(t.width=Object(h["f"])(this.normalizedBuffer,"%")),t}},methods:{genContent:function(){var t=Object(h["o"])(this,"default",{value:this.internalLazyValue});return t?this.$createElement("div",{staticClass:"v-progress-linear__content"},t):null},genListeners:function(){var t=this.$listeners;return this.reactive&&(t.click=this.onClick),t},genProgressBar:function(t){return this.$createElement("div",this.setBackgroundColor(this.color,{staticClass:"v-progress-linear__indeterminate",class:Object(r["a"])({},t,!0)}))},onClick:function(t){if(this.reactive){var e=this.$el.getBoundingClientRect(),n=e.width;this.internalValue=t.offsetX/n*100}},normalize:function(t){return t<0?0:t>100?100:parseFloat(t)}},render:function(t){var e={staticClass:"v-progress-linear",attrs:{role:"progressbar","aria-valuemin":0,"aria-valuemax":this.normalizedBuffer,"aria-valuenow":this.indeterminate?void 0:this.normalizedValue},class:this.classes,style:{bottom:this.bottom?0:void 0,height:this.active?Object(h["f"])(this.height):0,top:this.top?0:void 0},on:this.genListeners()};return t("div",e,[this.__cachedStream,this.__cachedBackground,this.__cachedBuffer,this.__cachedBar,this.genContent()])}}),m=p;e["a"]=l["a"].extend().extend({name:"loadable",props:{loading:{type:[Boolean,String],default:!1},loaderHeight:{type:[Number,String],default:2}},methods:{genProgress:function(){return!1===this.loading?null:this.$slots.progress||this.$createElement(m,{props:{absolute:!0,color:!0===this.loading||""===this.loading?this.color||"primary":this.loading,height:this.loaderHeight,indeterminate:!0}})}}})},"2a62":function(t,e,n){var l=n("825a");t.exports=function(t){var e=t["return"];if(void 0!==e)return l(e.call(t)).value}},"2b0e":function(t,e,n){"use strict";(function(t){
/*!
 * Vue.js v2.6.12
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
var n=Object.freeze({});function l(t){return void 0===t||null===t}function i(t){return void 0!==t&&null!==t}function r(t){return!0===t}function o(t){return!1===t}function u(t){return"string"===typeof t||"number"===typeof t||"symbol"===typeof t||"boolean"===typeof t}function a(t){return null!==t&&"object"===typeof t}var s=Object.prototype.toString;function c(t){return"[object Object]"===s.call(t)}function h(t){return"[object RegExp]"===s.call(t)}function d(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function f(t){return i(t)&&"function"===typeof t.then&&"function"===typeof t.catch}function p(t){return null==t?"":Array.isArray(t)||c(t)&&t.toString===s?JSON.stringify(t,null,2):String(t)}function m(t){var e=parseFloat(t);return isNaN(e)?t:e}function v(t,e){for(var n=Object.create(null),l=t.split(","),i=0;i<l.length;i++)n[l[i]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}v("slot,component",!0);var g=v("key,ref,slot,slot-scope,is");function y(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}var b=Object.prototype.hasOwnProperty;function x(t,e){return b.call(t,e)}function w(t){var e=Object.create(null);return function(n){var l=e[n];return l||(e[n]=t(n))}}var _=/-(\w)/g,M=w((function(t){return t.replace(_,(function(t,e){return e?e.toUpperCase():""}))})),S=w((function(t){return t.charAt(0).toUpperCase()+t.slice(1)})),T=/\B([A-Z])/g,E=w((function(t){return t.replace(T,"-$1").toLowerCase()}));function A(t,e){function n(n){var l=arguments.length;return l?l>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n}function C(t,e){return t.bind(e)}var O=Function.prototype.bind?C:A;function L(t,e){e=e||0;var n=t.length-e,l=new Array(n);while(n--)l[n]=t[n+e];return l}function P(t,e){for(var n in e)t[n]=e[n];return t}function R(t){for(var e={},n=0;n<t.length;n++)t[n]&&P(e,t[n]);return e}function k(t,e,n){}var I=function(t,e,n){return!1},D=function(t){return t};function N(t,e){if(t===e)return!0;var n=a(t),l=a(e);if(!n||!l)return!n&&!l&&String(t)===String(e);try{var i=Array.isArray(t),r=Array.isArray(e);if(i&&r)return t.length===e.length&&t.every((function(t,n){return N(t,e[n])}));if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(i||r)return!1;var o=Object.keys(t),u=Object.keys(e);return o.length===u.length&&o.every((function(n){return N(t[n],e[n])}))}catch(s){return!1}}function j(t,e){for(var n=0;n<t.length;n++)if(N(t[n],e))return n;return-1}function B(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}var z="data-server-rendered",F=["component","directive","filter"],U=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],V={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:I,isReservedAttr:I,isUnknownElement:I,getTagNamespace:k,parsePlatformTagName:D,mustUseProp:I,async:!0,_lifecycleHooks:U},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(t){var e=(t+"").charCodeAt(0);return 36===e||95===e}function W(t,e,n,l){Object.defineProperty(t,e,{value:n,enumerable:!!l,writable:!0,configurable:!0})}var $=new RegExp("[^"+H.source+".$_\\d]");function q(t){if(!$.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}var X,Y="__proto__"in{},Z="undefined"!==typeof window,J="undefined"!==typeof WXEnvironment&&!!WXEnvironment.platform,K=J&&WXEnvironment.platform.toLowerCase(),Q=Z&&window.navigator.userAgent.toLowerCase(),tt=Q&&/msie|trident/.test(Q),et=Q&&Q.indexOf("msie 9.0")>0,nt=Q&&Q.indexOf("edge/")>0,lt=(Q&&Q.indexOf("android"),Q&&/iphone|ipad|ipod|ios/.test(Q)||"ios"===K),it=(Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q),Q&&Q.match(/firefox\/(\d+)/)),rt={}.watch,ot=!1;if(Z)try{var ut={};Object.defineProperty(ut,"passive",{get:function(){ot=!0}}),window.addEventListener("test-passive",null,ut)}catch(Mo){}var at=function(){return void 0===X&&(X=!Z&&!J&&"undefined"!==typeof t&&(t["process"]&&"server"===t["process"].env.VUE_ENV)),X},st=Z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ct(t){return"function"===typeof t&&/native code/.test(t.toString())}var ht,dt="undefined"!==typeof Symbol&&ct(Symbol)&&"undefined"!==typeof Reflect&&ct(Reflect.ownKeys);ht="undefined"!==typeof Set&&ct(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var ft=k,pt=0,mt=function(){this.id=pt++,this.subs=[]};mt.prototype.addSub=function(t){this.subs.push(t)},mt.prototype.removeSub=function(t){y(this.subs,t)},mt.prototype.depend=function(){mt.target&&mt.target.addDep(this)},mt.prototype.notify=function(){var t=this.subs.slice();for(var e=0,n=t.length;e<n;e++)t[e].update()},mt.target=null;var vt=[];function gt(t){vt.push(t),mt.target=t}function yt(){vt.pop(),mt.target=vt[vt.length-1]}var bt=function(t,e,n,l,i,r,o,u){this.tag=t,this.data=e,this.children=n,this.text=l,this.elm=i,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=u,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},xt={child:{configurable:!0}};xt.child.get=function(){return this.componentInstance},Object.defineProperties(bt.prototype,xt);var wt=function(t){void 0===t&&(t="");var e=new bt;return e.text=t,e.isComment=!0,e};function _t(t){return new bt(void 0,void 0,void 0,String(t))}function Mt(t){var e=new bt(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return e.ns=t.ns,e.isStatic=t.isStatic,e.key=t.key,e.isComment=t.isComment,e.fnContext=t.fnContext,e.fnOptions=t.fnOptions,e.fnScopeId=t.fnScopeId,e.asyncMeta=t.asyncMeta,e.isCloned=!0,e}var St=Array.prototype,Tt=Object.create(St),Et=["push","pop","shift","unshift","splice","sort","reverse"];Et.forEach((function(t){var e=St[t];W(Tt,t,(function(){var n=[],l=arguments.length;while(l--)n[l]=arguments[l];var i,r=e.apply(this,n),o=this.__ob__;switch(t){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2);break}return i&&o.observeArray(i),o.dep.notify(),r}))}));var At=Object.getOwnPropertyNames(Tt),Ct=!0;function Ot(t){Ct=t}var Lt=function(t){this.value=t,this.dep=new mt,this.vmCount=0,W(t,"__ob__",this),Array.isArray(t)?(Y?Pt(t,Tt):Rt(t,Tt,At),this.observeArray(t)):this.walk(t)};function Pt(t,e){t.__proto__=e}function Rt(t,e,n){for(var l=0,i=n.length;l<i;l++){var r=n[l];W(t,r,e[r])}}function kt(t,e){var n;if(a(t)&&!(t instanceof bt))return x(t,"__ob__")&&t.__ob__ instanceof Lt?n=t.__ob__:Ct&&!at()&&(Array.isArray(t)||c(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new Lt(t)),e&&n&&n.vmCount++,n}function It(t,e,n,l,i){var r=new mt,o=Object.getOwnPropertyDescriptor(t,e);if(!o||!1!==o.configurable){var u=o&&o.get,a=o&&o.set;u&&!a||2!==arguments.length||(n=t[e]);var s=!i&&kt(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=u?u.call(t):n;return mt.target&&(r.depend(),s&&(s.dep.depend(),Array.isArray(e)&&jt(e))),e},set:function(e){var l=u?u.call(t):n;e===l||e!==e&&l!==l||u&&!a||(a?a.call(t,e):n=e,s=!i&&kt(e),r.notify())}})}}function Dt(t,e,n){if(Array.isArray(t)&&d(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var l=t.__ob__;return t._isVue||l&&l.vmCount?n:l?(It(l.value,e,n),l.dep.notify(),n):(t[e]=n,n)}function Nt(t,e){if(Array.isArray(t)&&d(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||x(t,e)&&(delete t[e],n&&n.dep.notify())}}function jt(t){for(var e=void 0,n=0,l=t.length;n<l;n++)e=t[n],e&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&jt(e)}Lt.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)It(t,e[n])},Lt.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)kt(t[e])};var Bt=V.optionMergeStrategies;function zt(t,e){if(!e)return t;for(var n,l,i,r=dt?Reflect.ownKeys(e):Object.keys(e),o=0;o<r.length;o++)n=r[o],"__ob__"!==n&&(l=t[n],i=e[n],x(t,n)?l!==i&&c(l)&&c(i)&&zt(l,i):Dt(t,n,i));return t}function Ft(t,e,n){return n?function(){var l="function"===typeof e?e.call(n,n):e,i="function"===typeof t?t.call(n,n):t;return l?zt(l,i):i}:e?t?function(){return zt("function"===typeof e?e.call(this,this):e,"function"===typeof t?t.call(this,this):t)}:e:t}function Ut(t,e){var n=e?t?t.concat(e):Array.isArray(e)?e:[e]:t;return n?Vt(n):n}function Vt(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}function Ht(t,e,n,l){var i=Object.create(t||null);return e?P(i,e):i}Bt.data=function(t,e,n){return n?Ft(t,e,n):e&&"function"!==typeof e?t:Ft(t,e)},U.forEach((function(t){Bt[t]=Ut})),F.forEach((function(t){Bt[t+"s"]=Ht})),Bt.watch=function(t,e,n,l){if(t===rt&&(t=void 0),e===rt&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var i={};for(var r in P(i,t),e){var o=i[r],u=e[r];o&&!Array.isArray(o)&&(o=[o]),i[r]=o?o.concat(u):Array.isArray(u)?u:[u]}return i},Bt.props=Bt.methods=Bt.inject=Bt.computed=function(t,e,n,l){if(!t)return e;var i=Object.create(null);return P(i,t),e&&P(i,e),i},Bt.provide=Ft;var Gt=function(t,e){return void 0===e?t:e};function Wt(t,e){var n=t.props;if(n){var l,i,r,o={};if(Array.isArray(n)){l=n.length;while(l--)i=n[l],"string"===typeof i&&(r=M(i),o[r]={type:null})}else if(c(n))for(var u in n)i=n[u],r=M(u),o[r]=c(i)?i:{type:i};else 0;t.props=o}}function $t(t,e){var n=t.inject;if(n){var l=t.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)l[n[i]]={from:n[i]};else if(c(n))for(var r in n){var o=n[r];l[r]=c(o)?P({from:r},o):{from:o}}else 0}}function qt(t){var e=t.directives;if(e)for(var n in e){var l=e[n];"function"===typeof l&&(e[n]={bind:l,update:l})}}function Xt(t,e,n){if("function"===typeof e&&(e=e.options),Wt(e,n),$t(e,n),qt(e),!e._base&&(e.extends&&(t=Xt(t,e.extends,n)),e.mixins))for(var l=0,i=e.mixins.length;l<i;l++)t=Xt(t,e.mixins[l],n);var r,o={};for(r in t)u(r);for(r in e)x(t,r)||u(r);function u(l){var i=Bt[l]||Gt;o[l]=i(t[l],e[l],n,l)}return o}function Yt(t,e,n,l){if("string"===typeof n){var i=t[e];if(x(i,n))return i[n];var r=M(n);if(x(i,r))return i[r];var o=S(r);if(x(i,o))return i[o];var u=i[n]||i[r]||i[o];return u}}function Zt(t,e,n,l){var i=e[t],r=!x(n,t),o=n[t],u=te(Boolean,i.type);if(u>-1)if(r&&!x(i,"default"))o=!1;else if(""===o||o===E(t)){var a=te(String,i.type);(a<0||u<a)&&(o=!0)}if(void 0===o){o=Jt(l,i,t);var s=Ct;Ot(!0),kt(o),Ot(s)}return o}function Jt(t,e,n){if(x(e,"default")){var l=e.default;return t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n]?t._props[n]:"function"===typeof l&&"Function"!==Kt(e.type)?l.call(t):l}}function Kt(t){var e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function Qt(t,e){return Kt(t)===Kt(e)}function te(t,e){if(!Array.isArray(e))return Qt(e,t)?0:-1;for(var n=0,l=e.length;n<l;n++)if(Qt(e[n],t))return n;return-1}function ee(t,e,n){gt();try{if(e){var l=e;while(l=l.$parent){var i=l.$options.errorCaptured;if(i)for(var r=0;r<i.length;r++)try{var o=!1===i[r].call(l,t,e,n);if(o)return}catch(Mo){le(Mo,l,"errorCaptured hook")}}}le(t,e,n)}finally{yt()}}function ne(t,e,n,l,i){var r;try{r=n?t.apply(e,n):t.call(e),r&&!r._isVue&&f(r)&&!r._handled&&(r.catch((function(t){return ee(t,l,i+" (Promise/async)")})),r._handled=!0)}catch(Mo){ee(Mo,l,i)}return r}function le(t,e,n){if(V.errorHandler)try{return V.errorHandler.call(null,t,e,n)}catch(Mo){Mo!==t&&ie(Mo,null,"config.errorHandler")}ie(t,e,n)}function ie(t,e,n){if(!Z&&!J||"undefined"===typeof console)throw t;console.error(t)}var re,oe=!1,ue=[],ae=!1;function se(){ae=!1;var t=ue.slice(0);ue.length=0;for(var e=0;e<t.length;e++)t[e]()}if("undefined"!==typeof Promise&&ct(Promise)){var ce=Promise.resolve();re=function(){ce.then(se),lt&&setTimeout(k)},oe=!0}else if(tt||"undefined"===typeof MutationObserver||!ct(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())re="undefined"!==typeof setImmediate&&ct(setImmediate)?function(){setImmediate(se)}:function(){setTimeout(se,0)};else{var he=1,de=new MutationObserver(se),fe=document.createTextNode(String(he));de.observe(fe,{characterData:!0}),re=function(){he=(he+1)%2,fe.data=String(he)},oe=!0}function pe(t,e){var n;if(ue.push((function(){if(t)try{t.call(e)}catch(Mo){ee(Mo,e,"nextTick")}else n&&n(e)})),ae||(ae=!0,re()),!t&&"undefined"!==typeof Promise)return new Promise((function(t){n=t}))}var me=new ht;function ve(t){ge(t,me),me.clear()}function ge(t,e){var n,l,i=Array.isArray(t);if(!(!i&&!a(t)||Object.isFrozen(t)||t instanceof bt)){if(t.__ob__){var r=t.__ob__.dep.id;if(e.has(r))return;e.add(r)}if(i){n=t.length;while(n--)ge(t[n],e)}else{l=Object.keys(t),n=l.length;while(n--)ge(t[l[n]],e)}}}var ye=w((function(t){var e="&"===t.charAt(0);t=e?t.slice(1):t;var n="~"===t.charAt(0);t=n?t.slice(1):t;var l="!"===t.charAt(0);return t=l?t.slice(1):t,{name:t,once:n,capture:l,passive:e}}));function be(t,e){function n(){var t=arguments,l=n.fns;if(!Array.isArray(l))return ne(l,null,arguments,e,"v-on handler");for(var i=l.slice(),r=0;r<i.length;r++)ne(i[r],null,t,e,"v-on handler")}return n.fns=t,n}function xe(t,e,n,i,o,u){var a,s,c,h;for(a in t)s=t[a],c=e[a],h=ye(a),l(s)||(l(c)?(l(s.fns)&&(s=t[a]=be(s,u)),r(h.once)&&(s=t[a]=o(h.name,s,h.capture)),n(h.name,s,h.capture,h.passive,h.params)):s!==c&&(c.fns=s,t[a]=c));for(a in e)l(t[a])&&(h=ye(a),i(h.name,e[a],h.capture))}function we(t,e,n){var o;t instanceof bt&&(t=t.data.hook||(t.data.hook={}));var u=t[e];function a(){n.apply(this,arguments),y(o.fns,a)}l(u)?o=be([a]):i(u.fns)&&r(u.merged)?(o=u,o.fns.push(a)):o=be([u,a]),o.merged=!0,t[e]=o}function _e(t,e,n){var r=e.options.props;if(!l(r)){var o={},u=t.attrs,a=t.props;if(i(u)||i(a))for(var s in r){var c=E(s);Me(o,a,s,c,!0)||Me(o,u,s,c,!1)}return o}}function Me(t,e,n,l,r){if(i(e)){if(x(e,n))return t[n]=e[n],r||delete e[n],!0;if(x(e,l))return t[n]=e[l],r||delete e[l],!0}return!1}function Se(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}function Te(t){return u(t)?[_t(t)]:Array.isArray(t)?Ae(t):void 0}function Ee(t){return i(t)&&i(t.text)&&o(t.isComment)}function Ae(t,e){var n,o,a,s,c=[];for(n=0;n<t.length;n++)o=t[n],l(o)||"boolean"===typeof o||(a=c.length-1,s=c[a],Array.isArray(o)?o.length>0&&(o=Ae(o,(e||"")+"_"+n),Ee(o[0])&&Ee(s)&&(c[a]=_t(s.text+o[0].text),o.shift()),c.push.apply(c,o)):u(o)?Ee(s)?c[a]=_t(s.text+o):""!==o&&c.push(_t(o)):Ee(o)&&Ee(s)?c[a]=_t(s.text+o.text):(r(t._isVList)&&i(o.tag)&&l(o.key)&&i(e)&&(o.key="__vlist"+e+"_"+n+"__"),c.push(o)));return c}function Ce(t){var e=t.$options.provide;e&&(t._provided="function"===typeof e?e.call(t):e)}function Oe(t){var e=Le(t.$options.inject,t);e&&(Ot(!1),Object.keys(e).forEach((function(n){It(t,n,e[n])})),Ot(!0))}function Le(t,e){if(t){for(var n=Object.create(null),l=dt?Reflect.ownKeys(t):Object.keys(t),i=0;i<l.length;i++){var r=l[i];if("__ob__"!==r){var o=t[r].from,u=e;while(u){if(u._provided&&x(u._provided,o)){n[r]=u._provided[o];break}u=u.$parent}if(!u)if("default"in t[r]){var a=t[r].default;n[r]="function"===typeof a?a.call(e):a}else 0}}return n}}function Pe(t,e){if(!t||!t.length)return{};for(var n={},l=0,i=t.length;l<i;l++){var r=t[l],o=r.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,r.context!==e&&r.fnContext!==e||!o||null==o.slot)(n.default||(n.default=[])).push(r);else{var u=o.slot,a=n[u]||(n[u]=[]);"template"===r.tag?a.push.apply(a,r.children||[]):a.push(r)}}for(var s in n)n[s].every(Re)&&delete n[s];return n}function Re(t){return t.isComment&&!t.asyncFactory||" "===t.text}function ke(t,e,l){var i,r=Object.keys(e).length>0,o=t?!!t.$stable:!r,u=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(o&&l&&l!==n&&u===l.$key&&!r&&!l.$hasNormal)return l;for(var a in i={},t)t[a]&&"$"!==a[0]&&(i[a]=Ie(e,a,t[a]))}else i={};for(var s in e)s in i||(i[s]=De(e,s));return t&&Object.isExtensible(t)&&(t._normalized=i),W(i,"$stable",o),W(i,"$key",u),W(i,"$hasNormal",r),i}function Ie(t,e,n){var l=function(){var t=arguments.length?n.apply(null,arguments):n({});return t=t&&"object"===typeof t&&!Array.isArray(t)?[t]:Te(t),t&&(0===t.length||1===t.length&&t[0].isComment)?void 0:t};return n.proxy&&Object.defineProperty(t,e,{get:l,enumerable:!0,configurable:!0}),l}function De(t,e){return function(){return t[e]}}function Ne(t,e){var n,l,r,o,u;if(Array.isArray(t)||"string"===typeof t)for(n=new Array(t.length),l=0,r=t.length;l<r;l++)n[l]=e(t[l],l);else if("number"===typeof t)for(n=new Array(t),l=0;l<t;l++)n[l]=e(l+1,l);else if(a(t))if(dt&&t[Symbol.iterator]){n=[];var s=t[Symbol.iterator](),c=s.next();while(!c.done)n.push(e(c.value,n.length)),c=s.next()}else for(o=Object.keys(t),n=new Array(o.length),l=0,r=o.length;l<r;l++)u=o[l],n[l]=e(t[u],u,l);return i(n)||(n=[]),n._isVList=!0,n}function je(t,e,n,l){var i,r=this.$scopedSlots[t];r?(n=n||{},l&&(n=P(P({},l),n)),i=r(n)||e):i=this.$slots[t]||e;var o=n&&n.slot;return o?this.$createElement("template",{slot:o},i):i}function Be(t){return Yt(this.$options,"filters",t,!0)||D}function ze(t,e){return Array.isArray(t)?-1===t.indexOf(e):t!==e}function Fe(t,e,n,l,i){var r=V.keyCodes[e]||n;return i&&l&&!V.keyCodes[e]?ze(i,l):r?ze(r,t):l?E(l)!==e:void 0}function Ue(t,e,n,l,i){if(n)if(a(n)){var r;Array.isArray(n)&&(n=R(n));var o=function(o){if("class"===o||"style"===o||g(o))r=t;else{var u=t.attrs&&t.attrs.type;r=l||V.mustUseProp(e,u,o)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var a=M(o),s=E(o);if(!(a in r)&&!(s in r)&&(r[o]=n[o],i)){var c=t.on||(t.on={});c["update:"+o]=function(t){n[o]=t}}};for(var u in n)o(u)}else;return t}function Ve(t,e){var n=this._staticTrees||(this._staticTrees=[]),l=n[t];return l&&!e||(l=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),Ge(l,"__static__"+t,!1)),l}function He(t,e,n){return Ge(t,"__once__"+e+(n?"_"+n:""),!0),t}function Ge(t,e,n){if(Array.isArray(t))for(var l=0;l<t.length;l++)t[l]&&"string"!==typeof t[l]&&We(t[l],e+"_"+l,n);else We(t,e,n)}function We(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function $e(t,e){if(e)if(c(e)){var n=t.on=t.on?P({},t.on):{};for(var l in e){var i=n[l],r=e[l];n[l]=i?[].concat(i,r):r}}else;return t}function qe(t,e,n,l){e=e||{$stable:!n};for(var i=0;i<t.length;i++){var r=t[i];Array.isArray(r)?qe(r,e,n):r&&(r.proxy&&(r.fn.proxy=!0),e[r.key]=r.fn)}return l&&(e.$key=l),e}function Xe(t,e){for(var n=0;n<e.length;n+=2){var l=e[n];"string"===typeof l&&l&&(t[e[n]]=e[n+1])}return t}function Ye(t,e){return"string"===typeof t?e+t:t}function Ze(t){t._o=He,t._n=m,t._s=p,t._l=Ne,t._t=je,t._q=N,t._i=j,t._m=Ve,t._f=Be,t._k=Fe,t._b=Ue,t._v=_t,t._e=wt,t._u=qe,t._g=$e,t._d=Xe,t._p=Ye}function Je(t,e,l,i,o){var u,a=this,s=o.options;x(i,"_uid")?(u=Object.create(i),u._original=i):(u=i,i=i._original);var c=r(s._compiled),h=!c;this.data=t,this.props=e,this.children=l,this.parent=i,this.listeners=t.on||n,this.injections=Le(s.inject,i),this.slots=function(){return a.$slots||ke(t.scopedSlots,a.$slots=Pe(l,i)),a.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ke(t.scopedSlots,this.slots())}}),c&&(this.$options=s,this.$slots=this.slots(),this.$scopedSlots=ke(t.scopedSlots,this.$slots)),s._scopeId?this._c=function(t,e,n,l){var r=hn(u,t,e,n,l,h);return r&&!Array.isArray(r)&&(r.fnScopeId=s._scopeId,r.fnContext=i),r}:this._c=function(t,e,n,l){return hn(u,t,e,n,l,h)}}function Ke(t,e,l,r,o){var u=t.options,a={},s=u.props;if(i(s))for(var c in s)a[c]=Zt(c,s,e||n);else i(l.attrs)&&tn(a,l.attrs),i(l.props)&&tn(a,l.props);var h=new Je(l,a,o,r,t),d=u.render.call(null,h._c,h);if(d instanceof bt)return Qe(d,l,h.parent,u,h);if(Array.isArray(d)){for(var f=Te(d)||[],p=new Array(f.length),m=0;m<f.length;m++)p[m]=Qe(f[m],l,h.parent,u,h);return p}}function Qe(t,e,n,l,i){var r=Mt(t);return r.fnContext=n,r.fnOptions=l,e.slot&&((r.data||(r.data={})).slot=e.slot),r}function tn(t,e){for(var n in e)t[M(n)]=e[n]}Ze(Je.prototype);var en={init:function(t,e){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var n=t;en.prepatch(n,n)}else{var l=t.componentInstance=rn(t,Ln);l.$mount(e?t.elm:void 0,e)}},prepatch:function(t,e){var n=e.componentOptions,l=e.componentInstance=t.componentInstance;Dn(l,n.propsData,n.listeners,e,n.children)},insert:function(t){var e=t.context,n=t.componentInstance;n._isMounted||(n._isMounted=!0,zn(n,"mounted")),t.data.keepAlive&&(e._isMounted?Kn(n):jn(n,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?Bn(e,!0):e.$destroy())}},nn=Object.keys(en);function ln(t,e,n,o,u){if(!l(t)){var s=n.$options._base;if(a(t)&&(t=s.extend(t)),"function"===typeof t){var c;if(l(t.cid)&&(c=t,t=wn(c,s),void 0===t))return xn(c,e,n,o,u);e=e||{},wl(t),i(e.model)&&an(t.options,e);var h=_e(e,t,u);if(r(t.options.functional))return Ke(t,h,e,n,o);var d=e.on;if(e.on=e.nativeOn,r(t.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}on(e);var p=t.options.name||u,m=new bt("vue-component-"+t.cid+(p?"-"+p:""),e,void 0,void 0,void 0,n,{Ctor:t,propsData:h,listeners:d,tag:u,children:o},c);return m}}}function rn(t,e){var n={_isComponent:!0,_parentVnode:t,parent:e},l=t.data.inlineTemplate;return i(l)&&(n.render=l.render,n.staticRenderFns=l.staticRenderFns),new t.componentOptions.Ctor(n)}function on(t){for(var e=t.hook||(t.hook={}),n=0;n<nn.length;n++){var l=nn[n],i=e[l],r=en[l];i===r||i&&i._merged||(e[l]=i?un(r,i):r)}}function un(t,e){var n=function(n,l){t(n,l),e(n,l)};return n._merged=!0,n}function an(t,e){var n=t.model&&t.model.prop||"value",l=t.model&&t.model.event||"input";(e.attrs||(e.attrs={}))[n]=e.model.value;var r=e.on||(e.on={}),o=r[l],u=e.model.callback;i(o)?(Array.isArray(o)?-1===o.indexOf(u):o!==u)&&(r[l]=[u].concat(o)):r[l]=u}var sn=1,cn=2;function hn(t,e,n,l,i,o){return(Array.isArray(n)||u(n))&&(i=l,l=n,n=void 0),r(o)&&(i=cn),dn(t,e,n,l,i)}function dn(t,e,n,l,r){if(i(n)&&i(n.__ob__))return wt();if(i(n)&&i(n.is)&&(e=n.is),!e)return wt();var o,u,a;(Array.isArray(l)&&"function"===typeof l[0]&&(n=n||{},n.scopedSlots={default:l[0]},l.length=0),r===cn?l=Te(l):r===sn&&(l=Se(l)),"string"===typeof e)?(u=t.$vnode&&t.$vnode.ns||V.getTagNamespace(e),o=V.isReservedTag(e)?new bt(V.parsePlatformTagName(e),n,l,void 0,void 0,t):n&&n.pre||!i(a=Yt(t.$options,"components",e))?new bt(e,n,l,void 0,void 0,t):ln(a,n,t,l,e)):o=ln(e,n,t,l);return Array.isArray(o)?o:i(o)?(i(u)&&fn(o,u),i(n)&&pn(n),o):wt()}function fn(t,e,n){if(t.ns=e,"foreignObject"===t.tag&&(e=void 0,n=!0),i(t.children))for(var o=0,u=t.children.length;o<u;o++){var a=t.children[o];i(a.tag)&&(l(a.ns)||r(n)&&"svg"!==a.tag)&&fn(a,e,n)}}function pn(t){a(t.style)&&ve(t.style),a(t.class)&&ve(t.class)}function mn(t){t._vnode=null,t._staticTrees=null;var e=t.$options,l=t.$vnode=e._parentVnode,i=l&&l.context;t.$slots=Pe(e._renderChildren,i),t.$scopedSlots=n,t._c=function(e,n,l,i){return hn(t,e,n,l,i,!1)},t.$createElement=function(e,n,l,i){return hn(t,e,n,l,i,!0)};var r=l&&l.data;It(t,"$attrs",r&&r.attrs||n,null,!0),It(t,"$listeners",e._parentListeners||n,null,!0)}var vn,gn=null;function yn(t){Ze(t.prototype),t.prototype.$nextTick=function(t){return pe(t,this)},t.prototype._render=function(){var t,e=this,n=e.$options,l=n.render,i=n._parentVnode;i&&(e.$scopedSlots=ke(i.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=i;try{gn=e,t=l.call(e._renderProxy,e.$createElement)}catch(Mo){ee(Mo,e,"render"),t=e._vnode}finally{gn=null}return Array.isArray(t)&&1===t.length&&(t=t[0]),t instanceof bt||(t=wt()),t.parent=i,t}}function bn(t,e){return(t.__esModule||dt&&"Module"===t[Symbol.toStringTag])&&(t=t.default),a(t)?e.extend(t):t}function xn(t,e,n,l,i){var r=wt();return r.asyncFactory=t,r.asyncMeta={data:e,context:n,children:l,tag:i},r}function wn(t,e){if(r(t.error)&&i(t.errorComp))return t.errorComp;if(i(t.resolved))return t.resolved;var n=gn;if(n&&i(t.owners)&&-1===t.owners.indexOf(n)&&t.owners.push(n),r(t.loading)&&i(t.loadingComp))return t.loadingComp;if(n&&!i(t.owners)){var o=t.owners=[n],u=!0,s=null,c=null;n.$on("hook:destroyed",(function(){return y(o,n)}));var h=function(t){for(var e=0,n=o.length;e<n;e++)o[e].$forceUpdate();t&&(o.length=0,null!==s&&(clearTimeout(s),s=null),null!==c&&(clearTimeout(c),c=null))},d=B((function(n){t.resolved=bn(n,e),u?o.length=0:h(!0)})),p=B((function(e){i(t.errorComp)&&(t.error=!0,h(!0))})),m=t(d,p);return a(m)&&(f(m)?l(t.resolved)&&m.then(d,p):f(m.component)&&(m.component.then(d,p),i(m.error)&&(t.errorComp=bn(m.error,e)),i(m.loading)&&(t.loadingComp=bn(m.loading,e),0===m.delay?t.loading=!0:s=setTimeout((function(){s=null,l(t.resolved)&&l(t.error)&&(t.loading=!0,h(!1))}),m.delay||200)),i(m.timeout)&&(c=setTimeout((function(){c=null,l(t.resolved)&&p(null)}),m.timeout)))),u=!1,t.loading?t.loadingComp:t.resolved}}function _n(t){return t.isComment&&t.asyncFactory}function Mn(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var n=t[e];if(i(n)&&(i(n.componentOptions)||_n(n)))return n}}function Sn(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&Cn(t,e)}function Tn(t,e){vn.$on(t,e)}function En(t,e){vn.$off(t,e)}function An(t,e){var n=vn;return function l(){var i=e.apply(null,arguments);null!==i&&n.$off(t,l)}}function Cn(t,e,n){vn=t,xe(e,n||{},Tn,En,An,t),vn=void 0}function On(t){var e=/^hook:/;t.prototype.$on=function(t,n){var l=this;if(Array.isArray(t))for(var i=0,r=t.length;i<r;i++)l.$on(t[i],n);else(l._events[t]||(l._events[t]=[])).push(n),e.test(t)&&(l._hasHookEvent=!0);return l},t.prototype.$once=function(t,e){var n=this;function l(){n.$off(t,l),e.apply(n,arguments)}return l.fn=e,n.$on(t,l),n},t.prototype.$off=function(t,e){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(t)){for(var l=0,i=t.length;l<i;l++)n.$off(t[l],e);return n}var r,o=n._events[t];if(!o)return n;if(!e)return n._events[t]=null,n;var u=o.length;while(u--)if(r=o[u],r===e||r.fn===e){o.splice(u,1);break}return n},t.prototype.$emit=function(t){var e=this,n=e._events[t];if(n){n=n.length>1?L(n):n;for(var l=L(arguments,1),i='event handler for "'+t+'"',r=0,o=n.length;r<o;r++)ne(n[r],e,l,e,i)}return e}}var Ln=null;function Pn(t){var e=Ln;return Ln=t,function(){Ln=e}}function Rn(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){while(n.$options.abstract&&n.$parent)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}function kn(t){t.prototype._update=function(t,e){var n=this,l=n.$el,i=n._vnode,r=Pn(n);n._vnode=t,n.$el=i?n.__patch__(i,t):n.__patch__(n.$el,t,e,!1),r(),l&&(l.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},t.prototype.$forceUpdate=function(){var t=this;t._watcher&&t._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){zn(t,"beforeDestroy"),t._isBeingDestroyed=!0;var e=t.$parent;!e||e._isBeingDestroyed||t.$options.abstract||y(e.$children,t),t._watcher&&t._watcher.teardown();var n=t._watchers.length;while(n--)t._watchers[n].teardown();t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),zn(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}function In(t,e,n){var l;return t.$el=e,t.$options.render||(t.$options.render=wt),zn(t,"beforeMount"),l=function(){t._update(t._render(),n)},new nl(t,l,k,{before:function(){t._isMounted&&!t._isDestroyed&&zn(t,"beforeUpdate")}},!0),n=!1,null==t.$vnode&&(t._isMounted=!0,zn(t,"mounted")),t}function Dn(t,e,l,i,r){var o=i.data.scopedSlots,u=t.$scopedSlots,a=!!(o&&!o.$stable||u!==n&&!u.$stable||o&&t.$scopedSlots.$key!==o.$key),s=!!(r||t.$options._renderChildren||a);if(t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i),t.$options._renderChildren=r,t.$attrs=i.data.attrs||n,t.$listeners=l||n,e&&t.$options.props){Ot(!1);for(var c=t._props,h=t.$options._propKeys||[],d=0;d<h.length;d++){var f=h[d],p=t.$options.props;c[f]=Zt(f,p,e,t)}Ot(!0),t.$options.propsData=e}l=l||n;var m=t.$options._parentListeners;t.$options._parentListeners=l,Cn(t,l,m),s&&(t.$slots=Pe(r,i.context),t.$forceUpdate())}function Nn(t){while(t&&(t=t.$parent))if(t._inactive)return!0;return!1}function jn(t,e){if(e){if(t._directInactive=!1,Nn(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)jn(t.$children[n]);zn(t,"activated")}}function Bn(t,e){if((!e||(t._directInactive=!0,!Nn(t)))&&!t._inactive){t._inactive=!0;for(var n=0;n<t.$children.length;n++)Bn(t.$children[n]);zn(t,"deactivated")}}function zn(t,e){gt();var n=t.$options[e],l=e+" hook";if(n)for(var i=0,r=n.length;i<r;i++)ne(n[i],t,null,t,l);t._hasHookEvent&&t.$emit("hook:"+e),yt()}var Fn=[],Un=[],Vn={},Hn=!1,Gn=!1,Wn=0;function $n(){Wn=Fn.length=Un.length=0,Vn={},Hn=Gn=!1}var qn=0,Xn=Date.now;if(Z&&!tt){var Yn=window.performance;Yn&&"function"===typeof Yn.now&&Xn()>document.createEvent("Event").timeStamp&&(Xn=function(){return Yn.now()})}function Zn(){var t,e;for(qn=Xn(),Gn=!0,Fn.sort((function(t,e){return t.id-e.id})),Wn=0;Wn<Fn.length;Wn++)t=Fn[Wn],t.before&&t.before(),e=t.id,Vn[e]=null,t.run();var n=Un.slice(),l=Fn.slice();$n(),Qn(n),Jn(l),st&&V.devtools&&st.emit("flush")}function Jn(t){var e=t.length;while(e--){var n=t[e],l=n.vm;l._watcher===n&&l._isMounted&&!l._isDestroyed&&zn(l,"updated")}}function Kn(t){t._inactive=!1,Un.push(t)}function Qn(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,jn(t[e],!0)}function tl(t){var e=t.id;if(null==Vn[e]){if(Vn[e]=!0,Gn){var n=Fn.length-1;while(n>Wn&&Fn[n].id>t.id)n--;Fn.splice(n+1,0,t)}else Fn.push(t);Hn||(Hn=!0,pe(Zn))}}var el=0,nl=function(t,e,n,l,i){this.vm=t,i&&(t._watcher=this),t._watchers.push(this),l?(this.deep=!!l.deep,this.user=!!l.user,this.lazy=!!l.lazy,this.sync=!!l.sync,this.before=l.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++el,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ht,this.newDepIds=new ht,this.expression="","function"===typeof e?this.getter=e:(this.getter=q(e),this.getter||(this.getter=k)),this.value=this.lazy?void 0:this.get()};nl.prototype.get=function(){var t;gt(this);var e=this.vm;try{t=this.getter.call(e,e)}catch(Mo){if(!this.user)throw Mo;ee(Mo,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ve(t),yt(),this.cleanupDeps()}return t},nl.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},nl.prototype.cleanupDeps=function(){var t=this.deps.length;while(t--){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},nl.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():tl(this)},nl.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||a(t)||this.deep){var e=this.value;if(this.value=t,this.user)try{this.cb.call(this.vm,t,e)}catch(Mo){ee(Mo,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,t,e)}}},nl.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},nl.prototype.depend=function(){var t=this.deps.length;while(t--)this.deps[t].depend()},nl.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);var t=this.deps.length;while(t--)this.deps[t].removeSub(this);this.active=!1}};var ll={enumerable:!0,configurable:!0,get:k,set:k};function il(t,e,n){ll.get=function(){return this[e][n]},ll.set=function(t){this[e][n]=t},Object.defineProperty(t,n,ll)}function rl(t){t._watchers=[];var e=t.$options;e.props&&ol(t,e.props),e.methods&&pl(t,e.methods),e.data?ul(t):kt(t._data={},!0),e.computed&&cl(t,e.computed),e.watch&&e.watch!==rt&&ml(t,e.watch)}function ol(t,e){var n=t.$options.propsData||{},l=t._props={},i=t.$options._propKeys=[],r=!t.$parent;r||Ot(!1);var o=function(r){i.push(r);var o=Zt(r,e,n,t);It(l,r,o),r in t||il(t,"_props",r)};for(var u in e)o(u);Ot(!0)}function ul(t){var e=t.$options.data;e=t._data="function"===typeof e?al(e,t):e||{},c(e)||(e={});var n=Object.keys(e),l=t.$options.props,i=(t.$options.methods,n.length);while(i--){var r=n[i];0,l&&x(l,r)||G(r)||il(t,"_data",r)}kt(e,!0)}function al(t,e){gt();try{return t.call(e,e)}catch(Mo){return ee(Mo,e,"data()"),{}}finally{yt()}}var sl={lazy:!0};function cl(t,e){var n=t._computedWatchers=Object.create(null),l=at();for(var i in e){var r=e[i],o="function"===typeof r?r:r.get;0,l||(n[i]=new nl(t,o||k,k,sl)),i in t||hl(t,i,r)}}function hl(t,e,n){var l=!at();"function"===typeof n?(ll.get=l?dl(e):fl(n),ll.set=k):(ll.get=n.get?l&&!1!==n.cache?dl(e):fl(n.get):k,ll.set=n.set||k),Object.defineProperty(t,e,ll)}function dl(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),mt.target&&e.depend(),e.value}}function fl(t){return function(){return t.call(this,this)}}function pl(t,e){t.$options.props;for(var n in e)t[n]="function"!==typeof e[n]?k:O(e[n],t)}function ml(t,e){for(var n in e){var l=e[n];if(Array.isArray(l))for(var i=0;i<l.length;i++)vl(t,n,l[i]);else vl(t,n,l)}}function vl(t,e,n,l){return c(n)&&(l=n,n=n.handler),"string"===typeof n&&(n=t[n]),t.$watch(e,n,l)}function gl(t){var e={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=Dt,t.prototype.$delete=Nt,t.prototype.$watch=function(t,e,n){var l=this;if(c(e))return vl(l,t,e,n);n=n||{},n.user=!0;var i=new nl(l,t,e,n);if(n.immediate)try{e.call(l,i.value)}catch(r){ee(r,l,'callback for immediate watcher "'+i.expression+'"')}return function(){i.teardown()}}}var yl=0;function bl(t){t.prototype._init=function(t){var e=this;e._uid=yl++,e._isVue=!0,t&&t._isComponent?xl(e,t):e.$options=Xt(wl(e.constructor),t||{},e),e._renderProxy=e,e._self=e,Rn(e),Sn(e),mn(e),zn(e,"beforeCreate"),Oe(e),rl(e),Ce(e),zn(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}function xl(t,e){var n=t.$options=Object.create(t.constructor.options),l=e._parentVnode;n.parent=e.parent,n._parentVnode=l;var i=l.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}function wl(t){var e=t.options;if(t.super){var n=wl(t.super),l=t.superOptions;if(n!==l){t.superOptions=n;var i=_l(t);i&&P(t.extendOptions,i),e=t.options=Xt(n,t.extendOptions),e.name&&(e.components[e.name]=t)}}return e}function _l(t){var e,n=t.options,l=t.sealedOptions;for(var i in n)n[i]!==l[i]&&(e||(e={}),e[i]=n[i]);return e}function Ml(t){this._init(t)}function Sl(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=L(arguments,1);return n.unshift(this),"function"===typeof t.install?t.install.apply(t,n):"function"===typeof t&&t.apply(null,n),e.push(t),this}}function Tl(t){t.mixin=function(t){return this.options=Xt(this.options,t),this}}function El(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,l=n.cid,i=t._Ctor||(t._Ctor={});if(i[l])return i[l];var r=t.name||n.options.name;var o=function(t){this._init(t)};return o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.cid=e++,o.options=Xt(n.options,t),o["super"]=n,o.options.props&&Al(o),o.options.computed&&Cl(o),o.extend=n.extend,o.mixin=n.mixin,o.use=n.use,F.forEach((function(t){o[t]=n[t]})),r&&(o.options.components[r]=o),o.superOptions=n.options,o.extendOptions=t,o.sealedOptions=P({},o.options),i[l]=o,o}}function Al(t){var e=t.options.props;for(var n in e)il(t.prototype,"_props",n)}function Cl(t){var e=t.options.computed;for(var n in e)hl(t.prototype,n,e[n])}function Ol(t){F.forEach((function(e){t[e]=function(t,n){return n?("component"===e&&c(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"===typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}}))}function Ll(t){return t&&(t.Ctor.options.name||t.tag)}function Pl(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"===typeof t?t.split(",").indexOf(e)>-1:!!h(t)&&t.test(e)}function Rl(t,e){var n=t.cache,l=t.keys,i=t._vnode;for(var r in n){var o=n[r];if(o){var u=Ll(o.componentOptions);u&&!e(u)&&kl(n,r,l,i)}}}function kl(t,e,n,l){var i=t[e];!i||l&&i.tag===l.tag||i.componentInstance.$destroy(),t[e]=null,y(n,e)}bl(Ml),gl(Ml),On(Ml),kn(Ml),yn(Ml);var Il=[String,RegExp,Array],Dl={name:"keep-alive",abstract:!0,props:{include:Il,exclude:Il,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)kl(this.cache,t,this.keys)},mounted:function(){var t=this;this.$watch("include",(function(e){Rl(t,(function(t){return Pl(e,t)}))})),this.$watch("exclude",(function(e){Rl(t,(function(t){return!Pl(e,t)}))}))},render:function(){var t=this.$slots.default,e=Mn(t),n=e&&e.componentOptions;if(n){var l=Ll(n),i=this,r=i.include,o=i.exclude;if(r&&(!l||!Pl(r,l))||o&&l&&Pl(o,l))return e;var u=this,a=u.cache,s=u.keys,c=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;a[c]?(e.componentInstance=a[c].componentInstance,y(s,c),s.push(c)):(a[c]=e,s.push(c),this.max&&s.length>parseInt(this.max)&&kl(a,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||t&&t[0]}},Nl={KeepAlive:Dl};function jl(t){var e={get:function(){return V}};Object.defineProperty(t,"config",e),t.util={warn:ft,extend:P,mergeOptions:Xt,defineReactive:It},t.set=Dt,t.delete=Nt,t.nextTick=pe,t.observable=function(t){return kt(t),t},t.options=Object.create(null),F.forEach((function(e){t.options[e+"s"]=Object.create(null)})),t.options._base=t,P(t.options.components,Nl),Sl(t),Tl(t),El(t),Ol(t)}jl(Ml),Object.defineProperty(Ml.prototype,"$isServer",{get:at}),Object.defineProperty(Ml.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Ml,"FunctionalRenderContext",{value:Je}),Ml.version="2.6.12";var Bl=v("style,class"),zl=v("input,textarea,option,select,progress"),Fl=function(t,e,n){return"value"===n&&zl(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},Ul=v("contenteditable,draggable,spellcheck"),Vl=v("events,caret,typing,plaintext-only"),Hl=function(t,e){return Xl(e)||"false"===e?"false":"contenteditable"===t&&Vl(e)?e:"true"},Gl=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Wl="http://www.w3.org/1999/xlink",$l=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},ql=function(t){return $l(t)?t.slice(6,t.length):""},Xl=function(t){return null==t||!1===t};function Yl(t){var e=t.data,n=t,l=t;while(i(l.componentInstance))l=l.componentInstance._vnode,l&&l.data&&(e=Zl(l.data,e));while(i(n=n.parent))n&&n.data&&(e=Zl(e,n.data));return Jl(e.staticClass,e.class)}function Zl(t,e){return{staticClass:Kl(t.staticClass,e.staticClass),class:i(t.class)?[t.class,e.class]:e.class}}function Jl(t,e){return i(t)||i(e)?Kl(t,Ql(e)):""}function Kl(t,e){return t?e?t+" "+e:t:e||""}function Ql(t){return Array.isArray(t)?ti(t):a(t)?ei(t):"string"===typeof t?t:""}function ti(t){for(var e,n="",l=0,r=t.length;l<r;l++)i(e=Ql(t[l]))&&""!==e&&(n&&(n+=" "),n+=e);return n}function ei(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}var ni={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},li=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ii=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ri=function(t){return li(t)||ii(t)};function oi(t){return ii(t)?"svg":"math"===t?"math":void 0}var ui=Object.create(null);function ai(t){if(!Z)return!0;if(ri(t))return!1;if(t=t.toLowerCase(),null!=ui[t])return ui[t];var e=document.createElement(t);return t.indexOf("-")>-1?ui[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:ui[t]=/HTMLUnknownElement/.test(e.toString())}var si=v("text,number,password,search,email,tel,url");function ci(t){if("string"===typeof t){var e=document.querySelector(t);return e||document.createElement("div")}return t}function hi(t,e){var n=document.createElement(t);return"select"!==t||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n}function di(t,e){return document.createElementNS(ni[t],e)}function fi(t){return document.createTextNode(t)}function pi(t){return document.createComment(t)}function mi(t,e,n){t.insertBefore(e,n)}function vi(t,e){t.removeChild(e)}function gi(t,e){t.appendChild(e)}function yi(t){return t.parentNode}function bi(t){return t.nextSibling}function xi(t){return t.tagName}function wi(t,e){t.textContent=e}function _i(t,e){t.setAttribute(e,"")}var Mi=Object.freeze({createElement:hi,createElementNS:di,createTextNode:fi,createComment:pi,insertBefore:mi,removeChild:vi,appendChild:gi,parentNode:yi,nextSibling:bi,tagName:xi,setTextContent:wi,setStyleScope:_i}),Si={create:function(t,e){Ti(e)},update:function(t,e){t.data.ref!==e.data.ref&&(Ti(t,!0),Ti(e))},destroy:function(t){Ti(t,!0)}};function Ti(t,e){var n=t.data.ref;if(i(n)){var l=t.context,r=t.componentInstance||t.elm,o=l.$refs;e?Array.isArray(o[n])?y(o[n],r):o[n]===r&&(o[n]=void 0):t.data.refInFor?Array.isArray(o[n])?o[n].indexOf(r)<0&&o[n].push(r):o[n]=[r]:o[n]=r}}var Ei=new bt("",{},[]),Ai=["create","activate","update","remove","destroy"];function Ci(t,e){return t.key===e.key&&(t.tag===e.tag&&t.isComment===e.isComment&&i(t.data)===i(e.data)&&Oi(t,e)||r(t.isAsyncPlaceholder)&&t.asyncFactory===e.asyncFactory&&l(e.asyncFactory.error))}function Oi(t,e){if("input"!==t.tag)return!0;var n,l=i(n=t.data)&&i(n=n.attrs)&&n.type,r=i(n=e.data)&&i(n=n.attrs)&&n.type;return l===r||si(l)&&si(r)}function Li(t,e,n){var l,r,o={};for(l=e;l<=n;++l)r=t[l].key,i(r)&&(o[r]=l);return o}function Pi(t){var e,n,o={},a=t.modules,s=t.nodeOps;for(e=0;e<Ai.length;++e)for(o[Ai[e]]=[],n=0;n<a.length;++n)i(a[n][Ai[e]])&&o[Ai[e]].push(a[n][Ai[e]]);function c(t){return new bt(s.tagName(t).toLowerCase(),{},[],void 0,t)}function h(t,e){function n(){0===--n.listeners&&d(t)}return n.listeners=e,n}function d(t){var e=s.parentNode(t);i(e)&&s.removeChild(e,t)}function f(t,e,n,l,o,u,a){if(i(t.elm)&&i(u)&&(t=u[a]=Mt(t)),t.isRootInsert=!o,!p(t,e,n,l)){var c=t.data,h=t.children,d=t.tag;i(d)?(t.elm=t.ns?s.createElementNS(t.ns,d):s.createElement(d,t),_(t),b(t,h,e),i(c)&&w(t,e),y(n,t.elm,l)):r(t.isComment)?(t.elm=s.createComment(t.text),y(n,t.elm,l)):(t.elm=s.createTextNode(t.text),y(n,t.elm,l))}}function p(t,e,n,l){var o=t.data;if(i(o)){var u=i(t.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(t,!1),i(t.componentInstance))return m(t,e),y(n,t.elm,l),r(u)&&g(t,e,n,l),!0}}function m(t,e){i(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,x(t)?(w(t,e),_(t)):(Ti(t),e.push(t))}function g(t,e,n,l){var r,u=t;while(u.componentInstance)if(u=u.componentInstance._vnode,i(r=u.data)&&i(r=r.transition)){for(r=0;r<o.activate.length;++r)o.activate[r](Ei,u);e.push(u);break}y(n,t.elm,l)}function y(t,e,n){i(t)&&(i(n)?s.parentNode(n)===t&&s.insertBefore(t,e,n):s.appendChild(t,e))}function b(t,e,n){if(Array.isArray(e)){0;for(var l=0;l<e.length;++l)f(e[l],n,t.elm,null,!0,e,l)}else u(t.text)&&s.appendChild(t.elm,s.createTextNode(String(t.text)))}function x(t){while(t.componentInstance)t=t.componentInstance._vnode;return i(t.tag)}function w(t,n){for(var l=0;l<o.create.length;++l)o.create[l](Ei,t);e=t.data.hook,i(e)&&(i(e.create)&&e.create(Ei,t),i(e.insert)&&n.push(t))}function _(t){var e;if(i(e=t.fnScopeId))s.setStyleScope(t.elm,e);else{var n=t;while(n)i(e=n.context)&&i(e=e.$options._scopeId)&&s.setStyleScope(t.elm,e),n=n.parent}i(e=Ln)&&e!==t.context&&e!==t.fnContext&&i(e=e.$options._scopeId)&&s.setStyleScope(t.elm,e)}function M(t,e,n,l,i,r){for(;l<=i;++l)f(n[l],r,t,e,!1,n,l)}function S(t){var e,n,l=t.data;if(i(l))for(i(e=l.hook)&&i(e=e.destroy)&&e(t),e=0;e<o.destroy.length;++e)o.destroy[e](t);if(i(e=t.children))for(n=0;n<t.children.length;++n)S(t.children[n])}function T(t,e,n){for(;e<=n;++e){var l=t[e];i(l)&&(i(l.tag)?(E(l),S(l)):d(l.elm))}}function E(t,e){if(i(e)||i(t.data)){var n,l=o.remove.length+1;for(i(e)?e.listeners+=l:e=h(t.elm,l),i(n=t.componentInstance)&&i(n=n._vnode)&&i(n.data)&&E(n,e),n=0;n<o.remove.length;++n)o.remove[n](t,e);i(n=t.data.hook)&&i(n=n.remove)?n(t,e):e()}else d(t.elm)}function A(t,e,n,r,o){var u,a,c,h,d=0,p=0,m=e.length-1,v=e[0],g=e[m],y=n.length-1,b=n[0],x=n[y],w=!o;while(d<=m&&p<=y)l(v)?v=e[++d]:l(g)?g=e[--m]:Ci(v,b)?(O(v,b,r,n,p),v=e[++d],b=n[++p]):Ci(g,x)?(O(g,x,r,n,y),g=e[--m],x=n[--y]):Ci(v,x)?(O(v,x,r,n,y),w&&s.insertBefore(t,v.elm,s.nextSibling(g.elm)),v=e[++d],x=n[--y]):Ci(g,b)?(O(g,b,r,n,p),w&&s.insertBefore(t,g.elm,v.elm),g=e[--m],b=n[++p]):(l(u)&&(u=Li(e,d,m)),a=i(b.key)?u[b.key]:C(b,e,d,m),l(a)?f(b,r,t,v.elm,!1,n,p):(c=e[a],Ci(c,b)?(O(c,b,r,n,p),e[a]=void 0,w&&s.insertBefore(t,c.elm,v.elm)):f(b,r,t,v.elm,!1,n,p)),b=n[++p]);d>m?(h=l(n[y+1])?null:n[y+1].elm,M(t,h,n,p,y,r)):p>y&&T(e,d,m)}function C(t,e,n,l){for(var r=n;r<l;r++){var o=e[r];if(i(o)&&Ci(t,o))return r}}function O(t,e,n,u,a,c){if(t!==e){i(e.elm)&&i(u)&&(e=u[a]=Mt(e));var h=e.elm=t.elm;if(r(t.isAsyncPlaceholder))i(e.asyncFactory.resolved)?R(t.elm,e,n):e.isAsyncPlaceholder=!0;else if(r(e.isStatic)&&r(t.isStatic)&&e.key===t.key&&(r(e.isCloned)||r(e.isOnce)))e.componentInstance=t.componentInstance;else{var d,f=e.data;i(f)&&i(d=f.hook)&&i(d=d.prepatch)&&d(t,e);var p=t.children,m=e.children;if(i(f)&&x(e)){for(d=0;d<o.update.length;++d)o.update[d](t,e);i(d=f.hook)&&i(d=d.update)&&d(t,e)}l(e.text)?i(p)&&i(m)?p!==m&&A(h,p,m,n,c):i(m)?(i(t.text)&&s.setTextContent(h,""),M(h,null,m,0,m.length-1,n)):i(p)?T(p,0,p.length-1):i(t.text)&&s.setTextContent(h,""):t.text!==e.text&&s.setTextContent(h,e.text),i(f)&&i(d=f.hook)&&i(d=d.postpatch)&&d(t,e)}}}function L(t,e,n){if(r(n)&&i(t.parent))t.parent.data.pendingInsert=e;else for(var l=0;l<e.length;++l)e[l].data.hook.insert(e[l])}var P=v("attrs,class,staticClass,staticStyle,key");function R(t,e,n,l){var o,u=e.tag,a=e.data,s=e.children;if(l=l||a&&a.pre,e.elm=t,r(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(a)&&(i(o=a.hook)&&i(o=o.init)&&o(e,!0),i(o=e.componentInstance)))return m(e,n),!0;if(i(u)){if(i(s))if(t.hasChildNodes())if(i(o=a)&&i(o=o.domProps)&&i(o=o.innerHTML)){if(o!==t.innerHTML)return!1}else{for(var c=!0,h=t.firstChild,d=0;d<s.length;d++){if(!h||!R(h,s[d],n,l)){c=!1;break}h=h.nextSibling}if(!c||h)return!1}else b(e,s,n);if(i(a)){var f=!1;for(var p in a)if(!P(p)){f=!0,w(e,n);break}!f&&a["class"]&&ve(a["class"])}}else t.data!==e.text&&(t.data=e.text);return!0}return function(t,e,n,u){if(!l(e)){var a=!1,h=[];if(l(t))a=!0,f(e,h);else{var d=i(t.nodeType);if(!d&&Ci(t,e))O(t,e,h,null,null,u);else{if(d){if(1===t.nodeType&&t.hasAttribute(z)&&(t.removeAttribute(z),n=!0),r(n)&&R(t,e,h))return L(e,h,!0),t;t=c(t)}var p=t.elm,m=s.parentNode(p);if(f(e,h,p._leaveCb?null:m,s.nextSibling(p)),i(e.parent)){var v=e.parent,g=x(e);while(v){for(var y=0;y<o.destroy.length;++y)o.destroy[y](v);if(v.elm=e.elm,g){for(var b=0;b<o.create.length;++b)o.create[b](Ei,v);var w=v.data.hook.insert;if(w.merged)for(var _=1;_<w.fns.length;_++)w.fns[_]()}else Ti(v);v=v.parent}}i(m)?T([t],0,0):i(t.tag)&&S(t)}}return L(e,h,a),e.elm}i(t)&&S(t)}}var Ri={create:ki,update:ki,destroy:function(t){ki(t,Ei)}};function ki(t,e){(t.data.directives||e.data.directives)&&Ii(t,e)}function Ii(t,e){var n,l,i,r=t===Ei,o=e===Ei,u=Ni(t.data.directives,t.context),a=Ni(e.data.directives,e.context),s=[],c=[];for(n in a)l=u[n],i=a[n],l?(i.oldValue=l.value,i.oldArg=l.arg,Bi(i,"update",e,t),i.def&&i.def.componentUpdated&&c.push(i)):(Bi(i,"bind",e,t),i.def&&i.def.inserted&&s.push(i));if(s.length){var h=function(){for(var n=0;n<s.length;n++)Bi(s[n],"inserted",e,t)};r?we(e,"insert",h):h()}if(c.length&&we(e,"postpatch",(function(){for(var n=0;n<c.length;n++)Bi(c[n],"componentUpdated",e,t)})),!r)for(n in u)a[n]||Bi(u[n],"unbind",t,t,o)}var Di=Object.create(null);function Ni(t,e){var n,l,i=Object.create(null);if(!t)return i;for(n=0;n<t.length;n++)l=t[n],l.modifiers||(l.modifiers=Di),i[ji(l)]=l,l.def=Yt(e.$options,"directives",l.name,!0);return i}function ji(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}function Bi(t,e,n,l,i){var r=t.def&&t.def[e];if(r)try{r(n.elm,t,n,l,i)}catch(Mo){ee(Mo,n.context,"directive "+t.name+" "+e+" hook")}}var zi=[Si,Ri];function Fi(t,e){var n=e.componentOptions;if((!i(n)||!1!==n.Ctor.options.inheritAttrs)&&(!l(t.data.attrs)||!l(e.data.attrs))){var r,o,u,a=e.elm,s=t.data.attrs||{},c=e.data.attrs||{};for(r in i(c.__ob__)&&(c=e.data.attrs=P({},c)),c)o=c[r],u=s[r],u!==o&&Ui(a,r,o);for(r in(tt||nt)&&c.value!==s.value&&Ui(a,"value",c.value),s)l(c[r])&&($l(r)?a.removeAttributeNS(Wl,ql(r)):Ul(r)||a.removeAttribute(r))}}function Ui(t,e,n){t.tagName.indexOf("-")>-1?Vi(t,e,n):Gl(e)?Xl(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n)):Ul(e)?t.setAttribute(e,Hl(e,n)):$l(e)?Xl(n)?t.removeAttributeNS(Wl,ql(e)):t.setAttributeNS(Wl,e,n):Vi(t,e,n)}function Vi(t,e,n){if(Xl(n))t.removeAttribute(e);else{if(tt&&!et&&"TEXTAREA"===t.tagName&&"placeholder"===e&&""!==n&&!t.__ieph){var l=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",l)};t.addEventListener("input",l),t.__ieph=!0}t.setAttribute(e,n)}}var Hi={create:Fi,update:Fi};function Gi(t,e){var n=e.elm,r=e.data,o=t.data;if(!(l(r.staticClass)&&l(r.class)&&(l(o)||l(o.staticClass)&&l(o.class)))){var u=Yl(e),a=n._transitionClasses;i(a)&&(u=Kl(u,Ql(a))),u!==n._prevClass&&(n.setAttribute("class",u),n._prevClass=u)}}var Wi,$i={create:Gi,update:Gi},qi="__r",Xi="__c";function Yi(t){if(i(t[qi])){var e=tt?"change":"input";t[e]=[].concat(t[qi],t[e]||[]),delete t[qi]}i(t[Xi])&&(t.change=[].concat(t[Xi],t.change||[]),delete t[Xi])}function Zi(t,e,n){var l=Wi;return function i(){var r=e.apply(null,arguments);null!==r&&Qi(t,i,n,l)}}var Ji=oe&&!(it&&Number(it[1])<=53);function Ki(t,e,n,l){if(Ji){var i=qn,r=e;e=r._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=i||t.timeStamp<=0||t.target.ownerDocument!==document)return r.apply(this,arguments)}}Wi.addEventListener(t,e,ot?{capture:n,passive:l}:n)}function Qi(t,e,n,l){(l||Wi).removeEventListener(t,e._wrapper||e,n)}function tr(t,e){if(!l(t.data.on)||!l(e.data.on)){var n=e.data.on||{},i=t.data.on||{};Wi=e.elm,Yi(n),xe(n,i,Ki,Qi,Zi,e.context),Wi=void 0}}var er,nr={create:tr,update:tr};function lr(t,e){if(!l(t.data.domProps)||!l(e.data.domProps)){var n,r,o=e.elm,u=t.data.domProps||{},a=e.data.domProps||{};for(n in i(a.__ob__)&&(a=e.data.domProps=P({},a)),u)n in a||(o[n]="");for(n in a){if(r=a[n],"textContent"===n||"innerHTML"===n){if(e.children&&(e.children.length=0),r===u[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=r;var s=l(r)?"":String(r);ir(o,s)&&(o.value=s)}else if("innerHTML"===n&&ii(o.tagName)&&l(o.innerHTML)){er=er||document.createElement("div"),er.innerHTML="<svg>"+r+"</svg>";var c=er.firstChild;while(o.firstChild)o.removeChild(o.firstChild);while(c.firstChild)o.appendChild(c.firstChild)}else if(r!==u[n])try{o[n]=r}catch(Mo){}}}}function ir(t,e){return!t.composing&&("OPTION"===t.tagName||rr(t,e)||or(t,e))}function rr(t,e){var n=!0;try{n=document.activeElement!==t}catch(Mo){}return n&&t.value!==e}function or(t,e){var n=t.value,l=t._vModifiers;if(i(l)){if(l.number)return m(n)!==m(e);if(l.trim)return n.trim()!==e.trim()}return n!==e}var ur={create:lr,update:lr},ar=w((function(t){var e={},n=/;(?![^(]*\))/g,l=/:(.+)/;return t.split(n).forEach((function(t){if(t){var n=t.split(l);n.length>1&&(e[n[0].trim()]=n[1].trim())}})),e}));function sr(t){var e=cr(t.style);return t.staticStyle?P(t.staticStyle,e):e}function cr(t){return Array.isArray(t)?R(t):"string"===typeof t?ar(t):t}function hr(t,e){var n,l={};if(e){var i=t;while(i.componentInstance)i=i.componentInstance._vnode,i&&i.data&&(n=sr(i.data))&&P(l,n)}(n=sr(t.data))&&P(l,n);var r=t;while(r=r.parent)r.data&&(n=sr(r.data))&&P(l,n);return l}var dr,fr=/^--/,pr=/\s*!important$/,mr=function(t,e,n){if(fr.test(e))t.style.setProperty(e,n);else if(pr.test(n))t.style.setProperty(E(e),n.replace(pr,""),"important");else{var l=gr(e);if(Array.isArray(n))for(var i=0,r=n.length;i<r;i++)t.style[l]=n[i];else t.style[l]=n}},vr=["Webkit","Moz","ms"],gr=w((function(t){if(dr=dr||document.createElement("div").style,t=M(t),"filter"!==t&&t in dr)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<vr.length;n++){var l=vr[n]+e;if(l in dr)return l}}));function yr(t,e){var n=e.data,r=t.data;if(!(l(n.staticStyle)&&l(n.style)&&l(r.staticStyle)&&l(r.style))){var o,u,a=e.elm,s=r.staticStyle,c=r.normalizedStyle||r.style||{},h=s||c,d=cr(e.data.style)||{};e.data.normalizedStyle=i(d.__ob__)?P({},d):d;var f=hr(e,!0);for(u in h)l(f[u])&&mr(a,u,"");for(u in f)o=f[u],o!==h[u]&&mr(a,u,null==o?"":o)}}var br={create:yr,update:yr},xr=/\s+/;function wr(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(xr).forEach((function(e){return t.classList.add(e)})):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function _r(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(xr).forEach((function(e){return t.classList.remove(e)})):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{var n=" "+(t.getAttribute("class")||"")+" ",l=" "+e+" ";while(n.indexOf(l)>=0)n=n.replace(l," ");n=n.trim(),n?t.setAttribute("class",n):t.removeAttribute("class")}}function Mr(t){if(t){if("object"===typeof t){var e={};return!1!==t.css&&P(e,Sr(t.name||"v")),P(e,t),e}return"string"===typeof t?Sr(t):void 0}}var Sr=w((function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}})),Tr=Z&&!et,Er="transition",Ar="animation",Cr="transition",Or="transitionend",Lr="animation",Pr="animationend";Tr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Cr="WebkitTransition",Or="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Lr="WebkitAnimation",Pr="webkitAnimationEnd"));var Rr=Z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function kr(t){Rr((function(){Rr(t)}))}function Ir(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),wr(t,e))}function Dr(t,e){t._transitionClasses&&y(t._transitionClasses,e),_r(t,e)}function Nr(t,e,n){var l=Br(t,e),i=l.type,r=l.timeout,o=l.propCount;if(!i)return n();var u=i===Er?Or:Pr,a=0,s=function(){t.removeEventListener(u,c),n()},c=function(e){e.target===t&&++a>=o&&s()};setTimeout((function(){a<o&&s()}),r+1),t.addEventListener(u,c)}var jr=/\b(transform|all)(,|$)/;function Br(t,e){var n,l=window.getComputedStyle(t),i=(l[Cr+"Delay"]||"").split(", "),r=(l[Cr+"Duration"]||"").split(", "),o=zr(i,r),u=(l[Lr+"Delay"]||"").split(", "),a=(l[Lr+"Duration"]||"").split(", "),s=zr(u,a),c=0,h=0;e===Er?o>0&&(n=Er,c=o,h=r.length):e===Ar?s>0&&(n=Ar,c=s,h=a.length):(c=Math.max(o,s),n=c>0?o>s?Er:Ar:null,h=n?n===Er?r.length:a.length:0);var d=n===Er&&jr.test(l[Cr+"Property"]);return{type:n,timeout:c,propCount:h,hasTransform:d}}function zr(t,e){while(t.length<e.length)t=t.concat(t);return Math.max.apply(null,e.map((function(e,n){return Fr(e)+Fr(t[n])})))}function Fr(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function Ur(t,e){var n=t.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Mr(t.data.transition);if(!l(r)&&!i(n._enterCb)&&1===n.nodeType){var o=r.css,u=r.type,s=r.enterClass,c=r.enterToClass,h=r.enterActiveClass,d=r.appearClass,f=r.appearToClass,p=r.appearActiveClass,v=r.beforeEnter,g=r.enter,y=r.afterEnter,b=r.enterCancelled,x=r.beforeAppear,w=r.appear,_=r.afterAppear,M=r.appearCancelled,S=r.duration,T=Ln,E=Ln.$vnode;while(E&&E.parent)T=E.context,E=E.parent;var A=!T._isMounted||!t.isRootInsert;if(!A||w||""===w){var C=A&&d?d:s,O=A&&p?p:h,L=A&&f?f:c,P=A&&x||v,R=A&&"function"===typeof w?w:g,k=A&&_||y,I=A&&M||b,D=m(a(S)?S.enter:S);0;var N=!1!==o&&!et,j=Gr(R),z=n._enterCb=B((function(){N&&(Dr(n,L),Dr(n,O)),z.cancelled?(N&&Dr(n,C),I&&I(n)):k&&k(n),n._enterCb=null}));t.data.show||we(t,"insert",(function(){var e=n.parentNode,l=e&&e._pending&&e._pending[t.key];l&&l.tag===t.tag&&l.elm._leaveCb&&l.elm._leaveCb(),R&&R(n,z)})),P&&P(n),N&&(Ir(n,C),Ir(n,O),kr((function(){Dr(n,C),z.cancelled||(Ir(n,L),j||(Hr(D)?setTimeout(z,D):Nr(n,u,z)))}))),t.data.show&&(e&&e(),R&&R(n,z)),N||j||z()}}}function Vr(t,e){var n=t.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Mr(t.data.transition);if(l(r)||1!==n.nodeType)return e();if(!i(n._leaveCb)){var o=r.css,u=r.type,s=r.leaveClass,c=r.leaveToClass,h=r.leaveActiveClass,d=r.beforeLeave,f=r.leave,p=r.afterLeave,v=r.leaveCancelled,g=r.delayLeave,y=r.duration,b=!1!==o&&!et,x=Gr(f),w=m(a(y)?y.leave:y);0;var _=n._leaveCb=B((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[t.key]=null),b&&(Dr(n,c),Dr(n,h)),_.cancelled?(b&&Dr(n,s),v&&v(n)):(e(),p&&p(n)),n._leaveCb=null}));g?g(M):M()}function M(){_.cancelled||(!t.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[t.key]=t),d&&d(n),b&&(Ir(n,s),Ir(n,h),kr((function(){Dr(n,s),_.cancelled||(Ir(n,c),x||(Hr(w)?setTimeout(_,w):Nr(n,u,_)))}))),f&&f(n,_),b||x||_())}}function Hr(t){return"number"===typeof t&&!isNaN(t)}function Gr(t){if(l(t))return!1;var e=t.fns;return i(e)?Gr(Array.isArray(e)?e[0]:e):(t._length||t.length)>1}function Wr(t,e){!0!==e.data.show&&Ur(e)}var $r=Z?{create:Wr,activate:Wr,remove:function(t,e){!0!==t.data.show?Vr(t,e):e()}}:{},qr=[Hi,$i,nr,ur,br,$r],Xr=qr.concat(zi),Yr=Pi({nodeOps:Mi,modules:Xr});et&&document.addEventListener("selectionchange",(function(){var t=document.activeElement;t&&t.vmodel&&lo(t,"input")}));var Zr={inserted:function(t,e,n,l){"select"===n.tag?(l.elm&&!l.elm._vOptions?we(n,"postpatch",(function(){Zr.componentUpdated(t,e,n)})):Jr(t,e,n.context),t._vOptions=[].map.call(t.options,to)):("textarea"===n.tag||si(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("compositionstart",eo),t.addEventListener("compositionend",no),t.addEventListener("change",no),et&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){Jr(t,e,n.context);var l=t._vOptions,i=t._vOptions=[].map.call(t.options,to);if(i.some((function(t,e){return!N(t,l[e])}))){var r=t.multiple?e.value.some((function(t){return Qr(t,i)})):e.value!==e.oldValue&&Qr(e.value,i);r&&lo(t,"change")}}}};function Jr(t,e,n){Kr(t,e,n),(tt||nt)&&setTimeout((function(){Kr(t,e,n)}),0)}function Kr(t,e,n){var l=e.value,i=t.multiple;if(!i||Array.isArray(l)){for(var r,o,u=0,a=t.options.length;u<a;u++)if(o=t.options[u],i)r=j(l,to(o))>-1,o.selected!==r&&(o.selected=r);else if(N(to(o),l))return void(t.selectedIndex!==u&&(t.selectedIndex=u));i||(t.selectedIndex=-1)}}function Qr(t,e){return e.every((function(e){return!N(e,t)}))}function to(t){return"_value"in t?t._value:t.value}function eo(t){t.target.composing=!0}function no(t){t.target.composing&&(t.target.composing=!1,lo(t.target,"input"))}function lo(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function io(t){return!t.componentInstance||t.data&&t.data.transition?t:io(t.componentInstance._vnode)}var ro={bind:function(t,e,n){var l=e.value;n=io(n);var i=n.data&&n.data.transition,r=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;l&&i?(n.data.show=!0,Ur(n,(function(){t.style.display=r}))):t.style.display=l?r:"none"},update:function(t,e,n){var l=e.value,i=e.oldValue;if(!l!==!i){n=io(n);var r=n.data&&n.data.transition;r?(n.data.show=!0,l?Ur(n,(function(){t.style.display=t.__vOriginalDisplay})):Vr(n,(function(){t.style.display="none"}))):t.style.display=l?t.__vOriginalDisplay:"none"}},unbind:function(t,e,n,l,i){i||(t.style.display=t.__vOriginalDisplay)}},oo={model:Zr,show:ro},uo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ao(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?ao(Mn(e.children)):t}function so(t){var e={},n=t.$options;for(var l in n.propsData)e[l]=t[l];var i=n._parentListeners;for(var r in i)e[M(r)]=i[r];return e}function co(t,e){if(/\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}function ho(t){while(t=t.parent)if(t.data.transition)return!0}function fo(t,e){return e.key===t.key&&e.tag===t.tag}var po=function(t){return t.tag||_n(t)},mo=function(t){return"show"===t.name},vo={name:"transition",props:uo,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(po),n.length)){0;var l=this.mode;0;var i=n[0];if(ho(this.$vnode))return i;var r=ao(i);if(!r)return i;if(this._leaving)return co(t,i);var o="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?o+"comment":o+r.tag:u(r.key)?0===String(r.key).indexOf(o)?r.key:o+r.key:r.key;var a=(r.data||(r.data={})).transition=so(this),s=this._vnode,c=ao(s);if(r.data.directives&&r.data.directives.some(mo)&&(r.data.show=!0),c&&c.data&&!fo(r,c)&&!_n(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var h=c.data.transition=P({},a);if("out-in"===l)return this._leaving=!0,we(h,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),co(t,i);if("in-out"===l){if(_n(r))return s;var d,f=function(){d()};we(a,"afterEnter",f),we(a,"enterCancelled",f),we(h,"delayLeave",(function(t){d=t}))}}return i}}},go=P({tag:String,moveClass:String},uo);delete go.mode;var yo={props:go,beforeMount:function(){var t=this,e=this._update;this._update=function(n,l){var i=Pn(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,i(),e.call(t,n,l)}},render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),l=this.prevChildren=this.children,i=this.$slots.default||[],r=this.children=[],o=so(this),u=0;u<i.length;u++){var a=i[u];if(a.tag)if(null!=a.key&&0!==String(a.key).indexOf("__vlist"))r.push(a),n[a.key]=a,(a.data||(a.data={})).transition=o;else;}if(l){for(var s=[],c=[],h=0;h<l.length;h++){var d=l[h];d.data.transition=o,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?s.push(d):c.push(d)}this.kept=t(e,null,s),this.removed=c}return t(e,null,r)},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(bo),t.forEach(xo),t.forEach(wo),this._reflow=document.body.offsetHeight,t.forEach((function(t){if(t.data.moved){var n=t.elm,l=n.style;Ir(n,e),l.transform=l.WebkitTransform=l.transitionDuration="",n.addEventListener(Or,n._moveCb=function t(l){l&&l.target!==n||l&&!/transform$/.test(l.propertyName)||(n.removeEventListener(Or,t),n._moveCb=null,Dr(n,e))})}})))},methods:{hasMove:function(t,e){if(!Tr)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach((function(t){_r(n,t)})),wr(n,e),n.style.display="none",this.$el.appendChild(n);var l=Br(n);return this.$el.removeChild(n),this._hasMove=l.hasTransform}}};function bo(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function xo(t){t.data.newPos=t.elm.getBoundingClientRect()}function wo(t){var e=t.data.pos,n=t.data.newPos,l=e.left-n.left,i=e.top-n.top;if(l||i){t.data.moved=!0;var r=t.elm.style;r.transform=r.WebkitTransform="translate("+l+"px,"+i+"px)",r.transitionDuration="0s"}}var _o={Transition:vo,TransitionGroup:yo};Ml.config.mustUseProp=Fl,Ml.config.isReservedTag=ri,Ml.config.isReservedAttr=Bl,Ml.config.getTagNamespace=oi,Ml.config.isUnknownElement=ai,P(Ml.options.directives,oo),P(Ml.options.components,_o),Ml.prototype.__patch__=Z?Yr:k,Ml.prototype.$mount=function(t,e){return t=t&&Z?ci(t):void 0,In(this,t,e)},Z&&setTimeout((function(){V.devtools&&st&&st.emit("init",Ml)}),0),e["a"]=Ml}).call(this,n("c8ba"))},"2b19":function(t,e,n){var l=n("23e7"),i=n("129f");l({target:"Object",stat:!0},{is:i})},"2b3d":function(t,e,n){"use strict";n("3ca3");var l,i=n("23e7"),r=n("83ab"),o=n("0d3b"),u=n("da84"),a=n("37e8"),s=n("6eeb"),c=n("19aa"),h=n("5135"),d=n("60da"),f=n("4df4"),p=n("6547").codeAt,m=n("5fb2"),v=n("d44e"),g=n("9861"),y=n("69f3"),b=u.URL,x=g.URLSearchParams,w=g.getState,_=y.set,M=y.getterFor("URL"),S=Math.floor,T=Math.pow,E="Invalid authority",A="Invalid scheme",C="Invalid host",O="Invalid port",L=/[A-Za-z]/,P=/[\d+-.A-Za-z]/,R=/\d/,k=/^(0x|0X)/,I=/^[0-7]+$/,D=/^\d+$/,N=/^[\dA-Fa-f]+$/,j=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,B=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,z=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,F=/[\u0009\u000A\u000D]/g,U=function(t,e){var n,l,i;if("["==e.charAt(0)){if("]"!=e.charAt(e.length-1))return C;if(n=H(e.slice(1,-1)),!n)return C;t.host=n}else if(K(t)){if(e=m(e),j.test(e))return C;if(n=V(e),null===n)return C;t.host=n}else{if(B.test(e))return C;for(n="",l=f(e),i=0;i<l.length;i++)n+=Z(l[i],$);t.host=n}},V=function(t){var e,n,l,i,r,o,u,a=t.split(".");if(a.length&&""==a[a.length-1]&&a.pop(),e=a.length,e>4)return t;for(n=[],l=0;l<e;l++){if(i=a[l],""==i)return t;if(r=10,i.length>1&&"0"==i.charAt(0)&&(r=k.test(i)?16:8,i=i.slice(8==r?1:2)),""===i)o=0;else{if(!(10==r?D:8==r?I:N).test(i))return t;o=parseInt(i,r)}n.push(o)}for(l=0;l<e;l++)if(o=n[l],l==e-1){if(o>=T(256,5-e))return null}else if(o>255)return null;for(u=n.pop(),l=0;l<n.length;l++)u+=n[l]*T(256,3-l);return u},H=function(t){var e,n,l,i,r,o,u,a=[0,0,0,0,0,0,0,0],s=0,c=null,h=0,d=function(){return t.charAt(h)};if(":"==d()){if(":"!=t.charAt(1))return;h+=2,s++,c=s}while(d()){if(8==s)return;if(":"!=d()){e=n=0;while(n<4&&N.test(d()))e=16*e+parseInt(d(),16),h++,n++;if("."==d()){if(0==n)return;if(h-=n,s>6)return;l=0;while(d()){if(i=null,l>0){if(!("."==d()&&l<4))return;h++}if(!R.test(d()))return;while(R.test(d())){if(r=parseInt(d(),10),null===i)i=r;else{if(0==i)return;i=10*i+r}if(i>255)return;h++}a[s]=256*a[s]+i,l++,2!=l&&4!=l||s++}if(4!=l)return;break}if(":"==d()){if(h++,!d())return}else if(d())return;a[s++]=e}else{if(null!==c)return;h++,s++,c=s}}if(null!==c){o=s-c,s=7;while(0!=s&&o>0)u=a[s],a[s--]=a[c+o-1],a[c+--o]=u}else if(8!=s)return;return a},G=function(t){for(var e=null,n=1,l=null,i=0,r=0;r<8;r++)0!==t[r]?(i>n&&(e=l,n=i),l=null,i=0):(null===l&&(l=r),++i);return i>n&&(e=l,n=i),e},W=function(t){var e,n,l,i;if("number"==typeof t){for(e=[],n=0;n<4;n++)e.unshift(t%256),t=S(t/256);return e.join(".")}if("object"==typeof t){for(e="",l=G(t),n=0;n<8;n++)i&&0===t[n]||(i&&(i=!1),l===n?(e+=n?":":"::",i=!0):(e+=t[n].toString(16),n<7&&(e+=":")));return"["+e+"]"}return t},$={},q=d({},$,{" ":1,'"':1,"<":1,">":1,"`":1}),X=d({},q,{"#":1,"?":1,"{":1,"}":1}),Y=d({},X,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),Z=function(t,e){var n=p(t,0);return n>32&&n<127&&!h(e,t)?t:encodeURIComponent(t)},J={ftp:21,file:null,http:80,https:443,ws:80,wss:443},K=function(t){return h(J,t.scheme)},Q=function(t){return""!=t.username||""!=t.password},tt=function(t){return!t.host||t.cannotBeABaseURL||"file"==t.scheme},et=function(t,e){var n;return 2==t.length&&L.test(t.charAt(0))&&(":"==(n=t.charAt(1))||!e&&"|"==n)},nt=function(t){var e;return t.length>1&&et(t.slice(0,2))&&(2==t.length||"/"===(e=t.charAt(2))||"\\"===e||"?"===e||"#"===e)},lt=function(t){var e=t.path,n=e.length;!n||"file"==t.scheme&&1==n&&et(e[0],!0)||e.pop()},it=function(t){return"."===t||"%2e"===t.toLowerCase()},rt=function(t){return t=t.toLowerCase(),".."===t||"%2e."===t||".%2e"===t||"%2e%2e"===t},ot={},ut={},at={},st={},ct={},ht={},dt={},ft={},pt={},mt={},vt={},gt={},yt={},bt={},xt={},wt={},_t={},Mt={},St={},Tt={},Et={},At=function(t,e,n,i){var r,o,u,a,s=n||ot,c=0,d="",p=!1,m=!1,v=!1;n||(t.scheme="",t.username="",t.password="",t.host=null,t.port=null,t.path=[],t.query=null,t.fragment=null,t.cannotBeABaseURL=!1,e=e.replace(z,"")),e=e.replace(F,""),r=f(e);while(c<=r.length){switch(o=r[c],s){case ot:if(!o||!L.test(o)){if(n)return A;s=at;continue}d+=o.toLowerCase(),s=ut;break;case ut:if(o&&(P.test(o)||"+"==o||"-"==o||"."==o))d+=o.toLowerCase();else{if(":"!=o){if(n)return A;d="",s=at,c=0;continue}if(n&&(K(t)!=h(J,d)||"file"==d&&(Q(t)||null!==t.port)||"file"==t.scheme&&!t.host))return;if(t.scheme=d,n)return void(K(t)&&J[t.scheme]==t.port&&(t.port=null));d="","file"==t.scheme?s=bt:K(t)&&i&&i.scheme==t.scheme?s=st:K(t)?s=ft:"/"==r[c+1]?(s=ct,c++):(t.cannotBeABaseURL=!0,t.path.push(""),s=St)}break;case at:if(!i||i.cannotBeABaseURL&&"#"!=o)return A;if(i.cannotBeABaseURL&&"#"==o){t.scheme=i.scheme,t.path=i.path.slice(),t.query=i.query,t.fragment="",t.cannotBeABaseURL=!0,s=Et;break}s="file"==i.scheme?bt:ht;continue;case st:if("/"!=o||"/"!=r[c+1]){s=ht;continue}s=pt,c++;break;case ct:if("/"==o){s=mt;break}s=Mt;continue;case ht:if(t.scheme=i.scheme,o==l)t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.query=i.query;else if("/"==o||"\\"==o&&K(t))s=dt;else if("?"==o)t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.query="",s=Tt;else{if("#"!=o){t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.path.pop(),s=Mt;continue}t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.query=i.query,t.fragment="",s=Et}break;case dt:if(!K(t)||"/"!=o&&"\\"!=o){if("/"!=o){t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,s=Mt;continue}s=mt}else s=pt;break;case ft:if(s=pt,"/"!=o||"/"!=d.charAt(c+1))continue;c++;break;case pt:if("/"!=o&&"\\"!=o){s=mt;continue}break;case mt:if("@"==o){p&&(d="%40"+d),p=!0,u=f(d);for(var g=0;g<u.length;g++){var y=u[g];if(":"!=y||v){var b=Z(y,Y);v?t.password+=b:t.username+=b}else v=!0}d=""}else if(o==l||"/"==o||"?"==o||"#"==o||"\\"==o&&K(t)){if(p&&""==d)return E;c-=f(d).length+1,d="",s=vt}else d+=o;break;case vt:case gt:if(n&&"file"==t.scheme){s=wt;continue}if(":"!=o||m){if(o==l||"/"==o||"?"==o||"#"==o||"\\"==o&&K(t)){if(K(t)&&""==d)return C;if(n&&""==d&&(Q(t)||null!==t.port))return;if(a=U(t,d),a)return a;if(d="",s=_t,n)return;continue}"["==o?m=!0:"]"==o&&(m=!1),d+=o}else{if(""==d)return C;if(a=U(t,d),a)return a;if(d="",s=yt,n==gt)return}break;case yt:if(!R.test(o)){if(o==l||"/"==o||"?"==o||"#"==o||"\\"==o&&K(t)||n){if(""!=d){var x=parseInt(d,10);if(x>65535)return O;t.port=K(t)&&x===J[t.scheme]?null:x,d=""}if(n)return;s=_t;continue}return O}d+=o;break;case bt:if(t.scheme="file","/"==o||"\\"==o)s=xt;else{if(!i||"file"!=i.scheme){s=Mt;continue}if(o==l)t.host=i.host,t.path=i.path.slice(),t.query=i.query;else if("?"==o)t.host=i.host,t.path=i.path.slice(),t.query="",s=Tt;else{if("#"!=o){nt(r.slice(c).join(""))||(t.host=i.host,t.path=i.path.slice(),lt(t)),s=Mt;continue}t.host=i.host,t.path=i.path.slice(),t.query=i.query,t.fragment="",s=Et}}break;case xt:if("/"==o||"\\"==o){s=wt;break}i&&"file"==i.scheme&&!nt(r.slice(c).join(""))&&(et(i.path[0],!0)?t.path.push(i.path[0]):t.host=i.host),s=Mt;continue;case wt:if(o==l||"/"==o||"\\"==o||"?"==o||"#"==o){if(!n&&et(d))s=Mt;else if(""==d){if(t.host="",n)return;s=_t}else{if(a=U(t,d),a)return a;if("localhost"==t.host&&(t.host=""),n)return;d="",s=_t}continue}d+=o;break;case _t:if(K(t)){if(s=Mt,"/"!=o&&"\\"!=o)continue}else if(n||"?"!=o)if(n||"#"!=o){if(o!=l&&(s=Mt,"/"!=o))continue}else t.fragment="",s=Et;else t.query="",s=Tt;break;case Mt:if(o==l||"/"==o||"\\"==o&&K(t)||!n&&("?"==o||"#"==o)){if(rt(d)?(lt(t),"/"==o||"\\"==o&&K(t)||t.path.push("")):it(d)?"/"==o||"\\"==o&&K(t)||t.path.push(""):("file"==t.scheme&&!t.path.length&&et(d)&&(t.host&&(t.host=""),d=d.charAt(0)+":"),t.path.push(d)),d="","file"==t.scheme&&(o==l||"?"==o||"#"==o))while(t.path.length>1&&""===t.path[0])t.path.shift();"?"==o?(t.query="",s=Tt):"#"==o&&(t.fragment="",s=Et)}else d+=Z(o,X);break;case St:"?"==o?(t.query="",s=Tt):"#"==o?(t.fragment="",s=Et):o!=l&&(t.path[0]+=Z(o,$));break;case Tt:n||"#"!=o?o!=l&&("'"==o&&K(t)?t.query+="%27":t.query+="#"==o?"%23":Z(o,$)):(t.fragment="",s=Et);break;case Et:o!=l&&(t.fragment+=Z(o,q));break}c++}},Ct=function(t){var e,n,l=c(this,Ct,"URL"),i=arguments.length>1?arguments[1]:void 0,o=String(t),u=_(l,{type:"URL"});if(void 0!==i)if(i instanceof Ct)e=M(i);else if(n=At(e={},String(i)),n)throw TypeError(n);if(n=At(u,o,null,e),n)throw TypeError(n);var a=u.searchParams=new x,s=w(a);s.updateSearchParams(u.query),s.updateURL=function(){u.query=String(a)||null},r||(l.href=Lt.call(l),l.origin=Pt.call(l),l.protocol=Rt.call(l),l.username=kt.call(l),l.password=It.call(l),l.host=Dt.call(l),l.hostname=Nt.call(l),l.port=jt.call(l),l.pathname=Bt.call(l),l.search=zt.call(l),l.searchParams=Ft.call(l),l.hash=Ut.call(l))},Ot=Ct.prototype,Lt=function(){var t=M(this),e=t.scheme,n=t.username,l=t.password,i=t.host,r=t.port,o=t.path,u=t.query,a=t.fragment,s=e+":";return null!==i?(s+="//",Q(t)&&(s+=n+(l?":"+l:"")+"@"),s+=W(i),null!==r&&(s+=":"+r)):"file"==e&&(s+="//"),s+=t.cannotBeABaseURL?o[0]:o.length?"/"+o.join("/"):"",null!==u&&(s+="?"+u),null!==a&&(s+="#"+a),s},Pt=function(){var t=M(this),e=t.scheme,n=t.port;if("blob"==e)try{return new URL(e.path[0]).origin}catch(l){return"null"}return"file"!=e&&K(t)?e+"://"+W(t.host)+(null!==n?":"+n:""):"null"},Rt=function(){return M(this).scheme+":"},kt=function(){return M(this).username},It=function(){return M(this).password},Dt=function(){var t=M(this),e=t.host,n=t.port;return null===e?"":null===n?W(e):W(e)+":"+n},Nt=function(){var t=M(this).host;return null===t?"":W(t)},jt=function(){var t=M(this).port;return null===t?"":String(t)},Bt=function(){var t=M(this),e=t.path;return t.cannotBeABaseURL?e[0]:e.length?"/"+e.join("/"):""},zt=function(){var t=M(this).query;return t?"?"+t:""},Ft=function(){return M(this).searchParams},Ut=function(){var t=M(this).fragment;return t?"#"+t:""},Vt=function(t,e){return{get:t,set:e,configurable:!0,enumerable:!0}};if(r&&a(Ot,{href:Vt(Lt,(function(t){var e=M(this),n=String(t),l=At(e,n);if(l)throw TypeError(l);w(e.searchParams).updateSearchParams(e.query)})),origin:Vt(Pt),protocol:Vt(Rt,(function(t){var e=M(this);At(e,String(t)+":",ot)})),username:Vt(kt,(function(t){var e=M(this),n=f(String(t));if(!tt(e)){e.username="";for(var l=0;l<n.length;l++)e.username+=Z(n[l],Y)}})),password:Vt(It,(function(t){var e=M(this),n=f(String(t));if(!tt(e)){e.password="";for(var l=0;l<n.length;l++)e.password+=Z(n[l],Y)}})),host:Vt(Dt,(function(t){var e=M(this);e.cannotBeABaseURL||At(e,String(t),vt)})),hostname:Vt(Nt,(function(t){var e=M(this);e.cannotBeABaseURL||At(e,String(t),gt)})),port:Vt(jt,(function(t){var e=M(this);tt(e)||(t=String(t),""==t?e.port=null:At(e,t,yt))})),pathname:Vt(Bt,(function(t){var e=M(this);e.cannotBeABaseURL||(e.path=[],At(e,t+"",_t))})),search:Vt(zt,(function(t){var e=M(this);t=String(t),""==t?e.query=null:("?"==t.charAt(0)&&(t=t.slice(1)),e.query="",At(e,t,Tt)),w(e.searchParams).updateSearchParams(e.query)})),searchParams:Vt(Ft),hash:Vt(Ut,(function(t){var e=M(this);t=String(t),""!=t?("#"==t.charAt(0)&&(t=t.slice(1)),e.fragment="",At(e,t,Et)):e.fragment=null}))}),s(Ot,"toJSON",(function(){return Lt.call(this)}),{enumerable:!0}),s(Ot,"toString",(function(){return Lt.call(this)}),{enumerable:!0}),b){var Ht=b.createObjectURL,Gt=b.revokeObjectURL;Ht&&s(Ct,"createObjectURL",(function(t){return Ht.apply(b,arguments)})),Gt&&s(Ct,"revokeObjectURL",(function(t){return Gt.apply(b,arguments)}))}v(Ct,"URL"),i({global:!0,forced:!o,sham:!r},{URL:Ct})},"2c64":function(t,e,n){},"2ca0":function(t,e,n){"use strict";var l=n("23e7"),i=n("06cf").f,r=n("50c4"),o=n("5a34"),u=n("1d80"),a=n("ab13"),s=n("c430"),c="".startsWith,h=Math.min,d=a("startsWith"),f=!s&&!d&&!!function(){var t=i(String.prototype,"startsWith");return t&&!t.writable}();l({target:"String",proto:!0,forced:!f&&!d},{startsWith:function(t){var e=String(u(this));o(t);var n=r(h(arguments.length>1?arguments[1]:void 0,e.length)),l=String(t);return c?c.call(e,l,n):e.slice(n,n+l.length)===l}})},"2cf4":function(t,e,n){var l,i,r,o=n("da84"),u=n("d039"),a=n("0366"),s=n("1be4"),c=n("cc12"),h=n("1cdc"),d=n("605d"),f=o.location,p=o.setImmediate,m=o.clearImmediate,v=o.process,g=o.MessageChannel,y=o.Dispatch,b=0,x={},w="onreadystatechange",_=function(t){if(x.hasOwnProperty(t)){var e=x[t];delete x[t],e()}},M=function(t){return function(){_(t)}},S=function(t){_(t.data)},T=function(t){o.postMessage(t+"",f.protocol+"//"+f.host)};p&&m||(p=function(t){var e=[],n=1;while(arguments.length>n)e.push(arguments[n++]);return x[++b]=function(){("function"==typeof t?t:Function(t)).apply(void 0,e)},l(b),b},m=function(t){delete x[t]},d?l=function(t){v.nextTick(M(t))}:y&&y.now?l=function(t){y.now(M(t))}:g&&!h?(i=new g,r=i.port2,i.port1.onmessage=S,l=a(r.postMessage,r,1)):o.addEventListener&&"function"==typeof postMessage&&!o.importScripts&&f&&"file:"!==f.protocol&&!u(T)?(l=T,o.addEventListener("message",S,!1)):l=w in c("script")?function(t){s.appendChild(c("script"))[w]=function(){s.removeChild(this),_(t)}}:function(t){setTimeout(M(t),0)}),t.exports={set:p,clear:m}},"2d00":function(t,e,n){var l,i,r=n("da84"),o=n("342f"),u=r.process,a=u&&u.versions,s=a&&a.v8;s?(l=s.split("."),i=l[0]+l[1]):o&&(l=o.match(/Edge\/(\d+)/),(!l||l[1]>=74)&&(l=o.match(/Chrome\/(\d+)/),l&&(i=l[1]))),t.exports=i&&+i},"2db4":function(t,e,n){"use strict";n("caad"),n("a9e3");var l=n("ade3"),i=(n("ca71"),n("8dd9")),r=n("a9ad"),o=n("7560"),u=n("f2e7"),a=n("fe6c"),s=n("58df"),c=n("80d2"),h=n("d9bd");e["a"]=Object(s["a"])(i["a"],r["a"],u["a"],Object(a["b"])(["absolute","bottom","left","right","top"])).extend({name:"v-snackbar",props:{app:Boolean,centered:Boolean,contentClass:{type:String,default:""},multiLine:Boolean,text:Boolean,timeout:{type:[Number,String],default:5e3},transition:{type:[Boolean,String],default:"v-snack-transition",validator:function(t){return"string"===typeof t||!1===t}},vertical:Boolean},data:function(){return{activeTimeout:-1}},computed:{classes:function(){return{"v-snack--absolute":this.absolute,"v-snack--active":this.isActive,"v-snack--bottom":this.bottom||!this.top,"v-snack--centered":this.centered,"v-snack--has-background":this.hasBackground,"v-snack--left":this.left,"v-snack--multi-line":this.multiLine&&!this.vertical,"v-snack--right":this.right,"v-snack--text":this.text,"v-snack--top":this.top,"v-snack--vertical":this.vertical}},hasBackground:function(){return!this.text&&!this.outlined},isDark:function(){return this.hasBackground?!this.light:o["a"].options.computed.isDark.call(this)},styles:function(){if(this.absolute)return{};var t=this.$vuetify.application,e=t.bar,n=t.bottom,l=t.footer,i=t.insetFooter,r=t.left,o=t.right,u=t.top;return{paddingBottom:Object(c["f"])(n+l+i),paddingLeft:this.app?Object(c["f"])(r):void 0,paddingRight:this.app?Object(c["f"])(o):void 0,paddingTop:Object(c["f"])(e+u)}}},watch:{isActive:"setTimeout",timeout:"setTimeout"},mounted:function(){this.isActive&&this.setTimeout()},created:function(){this.$attrs.hasOwnProperty("auto-height")&&Object(h["e"])("auto-height",this),0==this.timeout&&Object(h["d"])('timeout="0"',"-1",this)},methods:{genActions:function(){return this.$createElement("div",{staticClass:"v-snack__action "},[Object(c["o"])(this,"action",{attrs:{class:"v-snack__btn"}})])},genContent:function(){return this.$createElement("div",{staticClass:"v-snack__content",class:Object(l["a"])({},this.contentClass,!0),attrs:{role:"status","aria-live":"polite"}},[Object(c["o"])(this)])},genWrapper:function(){var t=this,e=this.hasBackground?this.setBackgroundColor:this.setTextColor,n=e(this.color,{staticClass:"v-snack__wrapper",class:i["a"].options.computed.classes.call(this),directives:[{name:"show",value:this.isActive}],on:{mouseenter:function(){return window.clearTimeout(t.activeTimeout)},mouseleave:this.setTimeout}});return this.$createElement("div",n,[this.genContent(),this.genActions()])},genTransition:function(){return this.$createElement("transition",{props:{name:this.transition}},[this.genWrapper()])},setTimeout:function(){var t=this;window.clearTimeout(this.activeTimeout);var e=Number(this.timeout);this.isActive&&![0,-1].includes(e)&&(this.activeTimeout=window.setTimeout((function(){t.isActive=!1}),e))}},render:function(t){return t("div",{staticClass:"v-snack",class:this.classes,style:this.styles},[!1!==this.transition?this.genTransition():this.genWrapper()])}})},"30fa":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var l=n("5a89"),i=function(t,e){e=e||{},this.enabled=!0;var n=void 0!==e.defaultThickness?e.defaultThickness:.003,i=(new l["e"]).fromArray(void 0!==e.defaultColor?e.defaultColor:[0,0,0]),r=void 0!==e.defaultAlpha?e.defaultAlpha:1,o=void 0!==e.defaultKeepAlive&&e.defaultKeepAlive,u={},a=60,s={},c={},h={outlineThickness:{value:n},outlineColor:{value:i},outlineAlpha:{value:r}},d=["#include <common>","#include <uv_pars_vertex>","#include <displacementmap_pars_vertex>","#include <fog_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>","uniform float outlineThickness;","vec4 calculateOutline( vec4 pos, vec3 normal, vec4 skinned ) {","\tfloat thickness = outlineThickness;","\tconst float ratio = 1.0;","\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + normal, 1.0 );","\tvec4 norm = normalize( pos - pos2 );","\treturn pos + norm * thickness * pos.w * ratio;","}","void main() {","\t#include <uv_vertex>","\t#include <beginnormal_vertex>","\t#include <morphnormal_vertex>","\t#include <skinbase_vertex>","\t#include <skinnormal_vertex>","\t#include <begin_vertex>","\t#include <morphtarget_vertex>","\t#include <skinning_vertex>","\t#include <displacementmap_vertex>","\t#include <project_vertex>","\tvec3 outlineNormal = - objectNormal;","\tgl_Position = calculateOutline( gl_Position, outlineNormal, vec4( transformed, 1.0 ) );","\t#include <logdepthbuf_vertex>","\t#include <clipping_planes_vertex>","\t#include <fog_vertex>","}"].join("\n"),f=["#include <common>","#include <fog_pars_fragment>","#include <logdepthbuf_pars_fragment>","#include <clipping_planes_pars_fragment>","uniform vec3 outlineColor;","uniform float outlineAlpha;","void main() {","\t#include <clipping_planes_fragment>","\t#include <logdepthbuf_fragment>","\tgl_FragColor = vec4( outlineColor, outlineAlpha );","\t#include <tonemapping_fragment>","\t#include <encodings_fragment>","\t#include <fog_fragment>","\t#include <premultiplied_alpha_fragment>","}"].join("\n");function p(){return new l["r"]({type:"OutlineEffect",uniforms:l["w"].merge([l["v"]["fog"],l["v"]["displacementmap"],h]),vertexShader:d,fragmentShader:f,side:l["c"]})}function m(t){var e=u[t.uuid];return void 0===e&&(e={material:p(),used:!0,keepAlive:o,count:0},u[t.uuid]=e),e.used=!0,e.material}function v(t){var e=m(t);return s[e.uuid]=t,_(e,t),e}function g(t){var e=t.geometry,n=!1;return void 0!==t.geometry&&(n=!e.isBufferGeometry||void 0!==e.attributes.normal),!0===t.isMesh&&void 0!==t.material&&!0===n}function y(t){if(!1!==g(t)){if(Array.isArray(t.material))for(var e=0,n=t.material.length;e<n;e++)t.material[e]=v(t.material[e]);else t.material=v(t.material);c[t.uuid]=t.onBeforeRender,t.onBeforeRender=x}}function b(t){if(!1!==g(t)){if(Array.isArray(t.material))for(var e=0,n=t.material.length;e<n;e++)t.material[e]=s[t.material[e].uuid];else t.material=s[t.material.uuid];t.onBeforeRender=c[t.uuid]}}function x(t,e,n,l,i){var r=s[i.uuid];void 0!==r&&w(i,r)}function w(t,e){var n=e.userData.outlineParameters;t.uniforms.outlineAlpha.value=e.opacity,void 0!==n&&(void 0!==n.thickness&&(t.uniforms.outlineThickness.value=n.thickness),void 0!==n.color&&t.uniforms.outlineColor.value.fromArray(n.color),void 0!==n.alpha&&(t.uniforms.outlineAlpha.value=n.alpha)),e.displacementMap&&(t.uniforms.displacementMap.value=e.displacementMap,t.uniforms.displacementScale.value=e.displacementScale,t.uniforms.displacementBias.value=e.displacementBias)}function _(t,e){if("invisible"!==t.name){var n=e.userData.outlineParameters;t.skinning=e.skinning,t.morphTargets=e.morphTargets,t.morphNormals=e.morphNormals,t.fog=e.fog,t.toneMapped=e.toneMapped,t.premultipliedAlpha=e.premultipliedAlpha,t.displacementMap=e.displacementMap,void 0!==n?(!1===e.visible?t.visible=!1:t.visible=void 0===n.visible||n.visible,t.transparent=void 0!==n.alpha&&n.alpha<1||e.transparent,void 0!==n.keepAlive&&(u[e.uuid].keepAlive=n.keepAlive)):(t.transparent=e.transparent,t.visible=e.visible),!0!==e.wireframe&&!1!==e.depthTest||(t.visible=!1),e.clippingPlanes&&(t.clipping=!0,t.clippingPlanes=e.clippingPlanes,t.clipIntersection=e.clipIntersection,t.clipShadows=e.clipShadows),t.version=e.version}}function M(){var t;t=Object.keys(s);for(var e=0,n=t.length;e<n;e++)s[t[e]]=void 0;t=Object.keys(c);for(e=0,n=t.length;e<n;e++)c[t[e]]=void 0;t=Object.keys(u);for(e=0,n=t.length;e<n;e++){var l=t[e];!1===u[l].used?(u[l].count++,!1===u[l].keepAlive&&u[l].count>a&&delete u[l]):(u[l].used=!1,u[l].count=0)}}this.render=function(e,n){var l,i=!1;if(void 0!==arguments[2]&&(console.warn("THREE.OutlineEffect.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),l=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.OutlineEffect.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==l&&t.setRenderTarget(l),i&&t.clear(),!1!==this.enabled){var r=t.autoClear;t.autoClear=this.autoClear,t.render(e,n),t.autoClear=r,this.renderOutline(e,n)}else t.render(e,n)},this.renderOutline=function(e,n){var l=t.autoClear,i=e.autoUpdate,r=e.background,o=t.shadowMap.enabled;e.autoUpdate=!1,e.background=null,t.autoClear=!1,t.shadowMap.enabled=!1,e.traverse(y),t.render(e,n),e.traverse(b),M(),e.autoUpdate=i,e.background=r,t.autoClear=l,t.shadowMap.enabled=o},this.autoClear=t.autoClear,this.domElement=t.domElement,this.shadowMap=t.shadowMap,this.clear=function(e,n,l){t.clear(e,n,l)},this.getPixelRatio=function(){return t.getPixelRatio()},this.setPixelRatio=function(e){t.setPixelRatio(e)},this.getSize=function(e){return t.getSize(e)},this.setSize=function(e,n,l){t.setSize(e,n,l)},this.setViewport=function(e,n,l,i){t.setViewport(e,n,l,i)},this.setScissor=function(e,n,l,i){t.setScissor(e,n,l,i)},this.setScissorTest=function(e){t.setScissorTest(e)},this.setRenderTarget=function(e){t.setRenderTarget(e)}}},3206:function(t,e,n){"use strict";n.d(e,"a",(function(){return u})),n.d(e,"b",(function(){return a}));n("99af");var l=n("ade3"),i=n("2b0e"),r=n("d9bd");function o(t,e){return function(){return Object(r["c"])("The ".concat(t," component must be used inside a ").concat(e))}}function u(t,e,n){var r=e&&n?{register:o(e,n),unregister:o(e,n)}:null;return i["a"].extend({name:"registrable-inject",inject:Object(l["a"])({},t,{default:r})})}function a(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return i["a"].extend({name:"registrable-provide",provide:function(){return Object(l["a"])({},t,e?this:{register:this.register,unregister:this.unregister})}})}},"326d":function(t,e,n){"use strict";var l=n("e449");e["a"]=l["a"]},3280:function(t,e,n){"use strict";var l=n("ebb5"),i=n("e58c"),r=l.aTypedArray,o=l.exportTypedArrayMethod;o("lastIndexOf",(function(t){return i.apply(r(this),arguments)}))},"33e9":function(t,e,n){},3408:function(t,e,n){},3410:function(t,e,n){var l=n("23e7"),i=n("d039"),r=n("7b0b"),o=n("e163"),u=n("e177"),a=i((function(){o(1)}));l({target:"Object",stat:!0,forced:a,sham:!u},{getPrototypeOf:function(t){return o(r(t))}})},"342f":function(t,e,n){var l=n("d066");t.exports=l("navigator","userAgent")||""},"34ef":function(t,e,n){"use strict";var l=n("cc20");e["a"]=l["a"]},"35a1":function(t,e,n){var l=n("f5df"),i=n("3f8c"),r=n("b622"),o=r("iterator");t.exports=function(t){if(void 0!=t)return t[o]||t["@@iterator"]||i[l(t)]}},"368e":function(t,e,n){},"369c":function(t,e,n){(function(e){"use strict";t.exports&&(t.exports=e),e["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}})(this||{})},"36a7":function(t,e,n){},"37e8":function(t,e,n){var l=n("83ab"),i=n("9bf2"),r=n("825a"),o=n("df75");t.exports=l?Object.defineProperties:function(t,e){r(t);var n,l=o(e),u=l.length,a=0;while(u>a)i.f(t,n=l[a++],e[n]);return t}},3835:function(t,e,n){"use strict";function l(t){if(Array.isArray(t))return t}n("a4d3"),n("e01a"),n("d28b"),n("d3b7"),n("3ca3"),n("ddb0");function i(t,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t)){var n=[],l=!0,i=!1,r=void 0;try{for(var o,u=t[Symbol.iterator]();!(l=(o=u.next()).done);l=!0)if(n.push(o.value),e&&n.length===e)break}catch(a){i=!0,r=a}finally{try{l||null==u["return"]||u["return"]()}finally{if(i)throw r}}return n}}var r=n("06c5");function o(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(t,e){return l(t)||i(t,e)||Object(r["a"])(t,e)||o()}n.d(e,"a",(function(){return u}))},"38cb":function(t,e,n){"use strict";n("fb6a"),n("a9e3");var l=n("53ca"),i=n("a9ad"),r=n("7560"),o=n("3206"),u=n("80d2"),a=n("d9bd"),s=n("58df"),c=Object(s["a"])(i["a"],Object(o["a"])("form"),r["a"]);e["a"]=c.extend({name:"validatable",props:{disabled:Boolean,error:Boolean,errorCount:{type:[Number,String],default:1},errorMessages:{type:[String,Array],default:function(){return[]}},messages:{type:[String,Array],default:function(){return[]}},readonly:Boolean,rules:{type:Array,default:function(){return[]}},success:Boolean,successMessages:{type:[String,Array],default:function(){return[]}},validateOnBlur:Boolean,value:{required:!1}},data:function(){return{errorBucket:[],hasColor:!1,hasFocused:!1,hasInput:!1,isFocused:!1,isResetting:!1,lazyValue:this.value,valid:!1}},computed:{computedColor:function(){if(!this.isDisabled)return this.color?this.color:this.isDark&&!this.appIsDark?"white":"primary"},hasError:function(){return this.internalErrorMessages.length>0||this.errorBucket.length>0||this.error},hasSuccess:function(){return this.internalSuccessMessages.length>0||this.success},externalError:function(){return this.internalErrorMessages.length>0||this.error},hasMessages:function(){return this.validationTarget.length>0},hasState:function(){return!this.isDisabled&&(this.hasSuccess||this.shouldValidate&&this.hasError)},internalErrorMessages:function(){return this.genInternalMessages(this.errorMessages)},internalMessages:function(){return this.genInternalMessages(this.messages)},internalSuccessMessages:function(){return this.genInternalMessages(this.successMessages)},internalValue:{get:function(){return this.lazyValue},set:function(t){this.lazyValue=t,this.$emit("input",t)}},isDisabled:function(){return this.disabled||!!this.form&&this.form.disabled},isInteractive:function(){return!this.isDisabled&&!this.isReadonly},isReadonly:function(){return this.readonly||!!this.form&&this.form.readonly},shouldValidate:function(){return!!this.externalError||!this.isResetting&&(this.validateOnBlur?this.hasFocused&&!this.isFocused:this.hasInput||this.hasFocused)},validations:function(){return this.validationTarget.slice(0,Number(this.errorCount))},validationState:function(){if(!this.isDisabled)return this.hasError&&this.shouldValidate?"error":this.hasSuccess?"success":this.hasColor?this.computedColor:void 0},validationTarget:function(){return this.internalErrorMessages.length>0?this.internalErrorMessages:this.successMessages&&this.successMessages.length>0?this.internalSuccessMessages:this.messages&&this.messages.length>0?this.internalMessages:this.shouldValidate?this.errorBucket:[]}},watch:{rules:{handler:function(t,e){Object(u["i"])(t,e)||this.validate()},deep:!0},internalValue:function(){this.hasInput=!0,this.validateOnBlur||this.$nextTick(this.validate)},isFocused:function(t){t||this.isDisabled||(this.hasFocused=!0,this.validateOnBlur&&this.$nextTick(this.validate))},isResetting:function(){var t=this;setTimeout((function(){t.hasInput=!1,t.hasFocused=!1,t.isResetting=!1,t.validate()}),0)},hasError:function(t){this.shouldValidate&&this.$emit("update:error",t)},value:function(t){this.lazyValue=t}},beforeMount:function(){this.validate()},created:function(){this.form&&this.form.register(this)},beforeDestroy:function(){this.form&&this.form.unregister(this)},methods:{genInternalMessages:function(t){return t?Array.isArray(t)?t:[t]:[]},reset:function(){this.isResetting=!0,this.internalValue=Array.isArray(this.internalValue)?[]:null},resetValidation:function(){this.isResetting=!0},validate:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=arguments.length>1?arguments[1]:void 0,n=[];e=e||this.internalValue,t&&(this.hasInput=this.hasFocused=!0);for(var i=0;i<this.rules.length;i++){var r=this.rules[i],o="function"===typeof r?r(e):r;!1===o||"string"===typeof o?n.push(o||""):"boolean"!==typeof o&&Object(a["b"])("Rules should return a string or boolean, received '".concat(Object(l["a"])(o),"' instead"),this)}return this.errorBucket=n,this.valid=0===n.length,this.valid}}})},"38cf":function(t,e,n){var l=n("23e7"),i=n("1148");l({target:"String",proto:!0},{repeat:i})},"3a2f":function(t,e,n){"use strict";n("a9e3");var l=n("ade3"),i=(n("9734"),n("4ad4")),r=n("a9ad"),o=n("16b7"),u=n("b848"),a=n("75eb"),s=n("f573"),c=n("f2e7"),h=n("80d2"),d=n("d9bd"),f=n("58df");e["a"]=Object(f["a"])(r["a"],o["a"],u["a"],a["a"],s["a"],c["a"]).extend({name:"v-tooltip",props:{closeDelay:{type:[Number,String],default:0},disabled:Boolean,fixed:{type:Boolean,default:!0},openDelay:{type:[Number,String],default:0},openOnHover:{type:Boolean,default:!0},tag:{type:String,default:"span"},transition:String},data:function(){return{calculatedMinWidth:0,closeDependents:!1}},computed:{calculatedLeft:function(){var t=this.dimensions,e=t.activator,n=t.content,l=!this.bottom&&!this.left&&!this.top&&!this.right,i=!1!==this.attach?e.offsetLeft:e.left,r=0;return this.top||this.bottom||l?r=i+e.width/2-n.width/2:(this.left||this.right)&&(r=i+(this.right?e.width:-n.width)+(this.right?10:-10)),this.nudgeLeft&&(r-=parseInt(this.nudgeLeft)),this.nudgeRight&&(r+=parseInt(this.nudgeRight)),"".concat(this.calcXOverflow(r,this.dimensions.content.width),"px")},calculatedTop:function(){var t=this.dimensions,e=t.activator,n=t.content,l=!1!==this.attach?e.offsetTop:e.top,i=0;return this.top||this.bottom?i=l+(this.bottom?e.height:-n.height)+(this.bottom?10:-10):(this.left||this.right)&&(i=l+e.height/2-n.height/2),this.nudgeTop&&(i-=parseInt(this.nudgeTop)),this.nudgeBottom&&(i+=parseInt(this.nudgeBottom)),"".concat(this.calcYOverflow(i+this.pageYOffset),"px")},classes:function(){return{"v-tooltip--top":this.top,"v-tooltip--right":this.right,"v-tooltip--bottom":this.bottom,"v-tooltip--left":this.left,"v-tooltip--attached":""===this.attach||!0===this.attach||"attach"===this.attach}},computedTransition:function(){return this.transition?this.transition:this.isActive?"scale-transition":"fade-transition"},offsetY:function(){return this.top||this.bottom},offsetX:function(){return this.left||this.right},styles:function(){return{left:this.calculatedLeft,maxWidth:Object(h["f"])(this.maxWidth),minWidth:Object(h["f"])(this.minWidth),opacity:this.isActive?.9:0,top:this.calculatedTop,zIndex:this.zIndex||this.activeZIndex}}},beforeMount:function(){var t=this;this.$nextTick((function(){t.value&&t.callActivate()}))},mounted:function(){"v-slot"===Object(h["p"])(this,"activator",!0)&&Object(d["b"])("v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'",this)},methods:{activate:function(){this.updateDimensions(),requestAnimationFrame(this.startTransition)},deactivate:function(){this.runDelay("close")},genActivatorListeners:function(){var t=this,e=i["a"].options.methods.genActivatorListeners.call(this);return e.focus=function(e){t.getActivator(e),t.runDelay("open")},e.blur=function(e){t.getActivator(e),t.runDelay("close")},e.keydown=function(e){e.keyCode===h["t"].esc&&(t.getActivator(e),t.runDelay("close"))},e},genActivatorAttributes:function(){return{"aria-haspopup":!0,"aria-expanded":String(this.isActive)}},genTransition:function(){var t=this.genContent();return this.computedTransition?this.$createElement("transition",{props:{name:this.computedTransition}},[t]):t},genContent:function(){var t;return this.$createElement("div",this.setBackgroundColor(this.color,{staticClass:"v-tooltip__content",class:(t={},Object(l["a"])(t,this.contentClass,!0),Object(l["a"])(t,"menuable__content__active",this.isActive),Object(l["a"])(t,"v-tooltip__content--fixed",this.activatorFixed),t),style:this.styles,attrs:this.getScopeIdAttrs(),directives:[{name:"show",value:this.isContentActive}],ref:"content"}),this.getContentSlot())}},render:function(t){var e=this;return t(this.tag,{staticClass:"v-tooltip",class:this.classes},[this.showLazyContent((function(){return[e.genTransition()]})),this.genActivator()])}})},"3a7b":function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").findIndex,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("findIndex",(function(t){return i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},"3ad0":function(t,e,n){},"3bbe":function(t,e,n){var l=n("861d");t.exports=function(t){if(!l(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},"3c5d":function(t,e,n){"use strict";var l=n("ebb5"),i=n("50c4"),r=n("182d"),o=n("7b0b"),u=n("d039"),a=l.aTypedArray,s=l.exportTypedArrayMethod,c=u((function(){new Int8Array(1).set({})}));s("set",(function(t){a(this);var e=r(arguments.length>1?arguments[1]:void 0,1),n=this.length,l=o(t),u=i(l.length),s=0;if(u+e>n)throw RangeError("Wrong length");while(s<u)this[e+s]=l[s++]}),c)},"3c93":function(t,e,n){},"3ca3":function(t,e,n){"use strict";var l=n("6547").charAt,i=n("69f3"),r=n("7dd0"),o="String Iterator",u=i.set,a=i.getterFor(o);r(String,"String",(function(t){u(this,{type:o,string:String(t),index:0})}),(function(){var t,e=a(this),n=e.string,i=e.index;return i>=n.length?{value:void 0,done:!0}:(t=l(n,i),e.index+=t.length,{value:t,done:!1})}))},"3d86":function(t,e,n){},"3ea3":function(t,e,n){var l=n("23e7"),i=n("f748"),r=Math.abs,o=Math.pow;l({target:"Math",stat:!0},{cbrt:function(t){return i(t=+t)*o(r(t),1/3)}})},"3f8c":function(t,e){t.exports={}},"3fcc":function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").map,r=n("4840"),o=l.aTypedArray,u=l.aTypedArrayConstructor,a=l.exportTypedArrayMethod;a("map",(function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0,(function(t,e){return new(u(r(t,t.constructor)))(e)}))}))},4069:function(t,e,n){var l=n("44d2");l("flat")},"408a":function(t,e,n){var l=n("c6b6");t.exports=function(t){if("number"!=typeof t&&"Number"!=l(t))throw TypeError("Incorrect invocation");return+t}},4160:function(t,e,n){"use strict";var l=n("23e7"),i=n("17c2");l({target:"Array",proto:!0,forced:[].forEach!=i},{forEach:i})},4194:function(t,e,n){var l=n("4def");t.exports={TextEncoder:l.TextEncoder,TextDecoder:l.TextDecoder}},"428f":function(t,e,n){var l=n("da84");t.exports=l},4362:function(t,e,n){e.nextTick=function(t){var e=Array.prototype.slice.call(arguments);e.shift(),setTimeout((function(){t.apply(null,e)}),0)},e.platform=e.arch=e.execPath=e.title="browser",e.pid=1,e.browser=!0,e.env={},e.argv=[],e.binding=function(t){throw new Error("No such module. (Possibly not yet loaded)")},function(){var t,l="/";e.cwd=function(){return l},e.chdir=function(e){t||(t=n("df7c")),l=t.resolve(e,l)}}(),e.exit=e.kill=e.umask=e.dlopen=e.uptime=e.memoryUsage=e.uvCounters=function(){},e.features={}},"43a6":function(t,e,n){"use strict";n("a9e3");var l=n("5530"),i=(n("ec29"),n("3d86"),n("c37a")),r=n("604c"),o=n("8547"),u=n("58df"),a=Object(u["a"])(o["a"],r["a"],i["a"]);e["a"]=a.extend({name:"v-radio-group",provide:function(){return{radioGroup:this}},props:{column:{type:Boolean,default:!0},height:{type:[Number,String],default:"auto"},name:String,row:Boolean,value:null},computed:{classes:function(){return Object(l["a"])(Object(l["a"])({},i["a"].options.computed.classes.call(this)),{},{"v-input--selection-controls v-input--radio-group":!0,"v-input--radio-group--column":this.column&&!this.row,"v-input--radio-group--row":this.row})}},methods:{genDefaultSlot:function(){return this.$createElement("div",{staticClass:"v-input--radio-group__input",attrs:{id:this.id,role:"radiogroup","aria-labelledby":this.computedId}},i["a"].options.methods.genDefaultSlot.call(this))},genInputSlot:function(){var t=i["a"].options.methods.genInputSlot.call(this);return delete t.data.on.click,t},genLabel:function(){var t=i["a"].options.methods.genLabel.call(this);return t?(t.data.attrs.id=this.computedId,delete t.data.attrs.for,t.tag="legend",t):null},onClick:r["a"].options.methods.onClick}})},"44ad":function(t,e,n){var l=n("d039"),i=n("c6b6"),r="".split;t.exports=l((function(){return!Object("z").propertyIsEnumerable(0)}))?function(t){return"String"==i(t)?r.call(t,""):Object(t)}:Object},"44d2":function(t,e,n){var l=n("b622"),i=n("7c73"),r=n("9bf2"),o=l("unscopables"),u=Array.prototype;void 0==u[o]&&r.f(u,o,{configurable:!0,value:i(null)}),t.exports=function(t){u[o][t]=!0}},"44de":function(t,e,n){var l=n("da84");t.exports=function(t,e){var n=l.console;n&&n.error&&(1===arguments.length?n.error(t):n.error(t,e))}},"44e7":function(t,e,n){var l=n("861d"),i=n("c6b6"),r=n("b622"),o=r("match");t.exports=function(t){var e;return l(t)&&(void 0!==(e=t[o])?!!e:"RegExp"==i(t))}},"45fc":function(t,e,n){"use strict";var l=n("23e7"),i=n("b727").some,r=n("a640"),o=n("ae40"),u=r("some"),a=o("some");l({target:"Array",proto:!0,forced:!u||!a},{some:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},"466d":function(t,e,n){"use strict";var l=n("d784"),i=n("825a"),r=n("50c4"),o=n("1d80"),u=n("8aa5"),a=n("14c3");l("match",1,(function(t,e,n){return[function(e){var n=o(this),l=void 0==e?void 0:e[t];return void 0!==l?l.call(e,n):new RegExp(e)[t](String(n))},function(t){var l=n(e,t,this);if(l.done)return l.value;var o=i(t),s=String(this);if(!o.global)return a(o,s);var c=o.unicode;o.lastIndex=0;var h,d=[],f=0;while(null!==(h=a(o,s))){var p=String(h[0]);d[f]=p,""===p&&(o.lastIndex=u(s,r(o.lastIndex),c)),f++}return 0===f?null:d}]}))},4721:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var l=n("5a89"),i=function(t,e){void 0===e&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),e===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=t,this.domElement=e,this.enabled=!0,this.target=new l["y"],this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:l["j"].ROTATE,MIDDLE:l["j"].DOLLY,RIGHT:l["j"].PAN},this.touches={ONE:l["u"].ROTATE,TWO:l["u"].DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),a=u.NONE},this.update=function(){var e=new l["y"],r=(new l["o"]).setFromUnitVectors(t.up,new l["y"](0,1,0)),o=r.clone().inverse(),m=new l["y"],v=new l["o"],g=2*Math.PI;return function(){var t=n.object.position;e.copy(t).sub(n.target),e.applyQuaternion(r),c.setFromVector3(e),n.autoRotate&&a===u.NONE&&E(S()),n.enableDamping?(c.theta+=h.theta*n.dampingFactor,c.phi+=h.phi*n.dampingFactor):(c.theta+=h.theta,c.phi+=h.phi);var l=n.minAzimuthAngle,y=n.maxAzimuthAngle;return isFinite(l)&&isFinite(y)&&(l<-Math.PI?l+=g:l>Math.PI&&(l-=g),y<-Math.PI?y+=g:y>Math.PI&&(y-=g),c.theta=l<y?Math.max(l,Math.min(y,c.theta)):c.theta>(l+y)/2?Math.max(l,c.theta):Math.min(y,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=d,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),!0===n.enableDamping?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),e.setFromSpherical(c),e.applyQuaternion(o),t.copy(n.target).add(e),n.object.lookAt(n.target),!0===n.enableDamping?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),f.set(0,0,0)),d=1,!!(p||m.distanceToSquared(n.object.position)>s||8*(1-v.dot(n.object.quaternion))>s)&&(n.dispatchEvent(i),m.copy(n.object.position),v.copy(n.object.quaternion),p=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ut,!1),n.domElement.removeEventListener("mousedown",Q,!1),n.domElement.removeEventListener("wheel",nt,!1),n.domElement.removeEventListener("touchstart",it,!1),n.domElement.removeEventListener("touchend",ot,!1),n.domElement.removeEventListener("touchmove",rt,!1),n.domElement.ownerDocument.removeEventListener("mousemove",tt,!1),n.domElement.ownerDocument.removeEventListener("mouseup",et,!1),n.domElement.removeEventListener("keydown",lt,!1)};var n=this,i={type:"change"},r={type:"start"},o={type:"end"},u={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},a=u.NONE,s=1e-6,c=new l["t"],h=new l["t"],d=1,f=new l["y"],p=!1,m=new l["x"],v=new l["x"],g=new l["x"],y=new l["x"],b=new l["x"],x=new l["x"],w=new l["x"],_=new l["x"],M=new l["x"];function S(){return 2*Math.PI/60/60*n.autoRotateSpeed}function T(){return Math.pow(.95,n.zoomSpeed)}function E(t){h.theta-=t}function A(t){h.phi-=t}var C=function(){var t=new l["y"];return function(e,n){t.setFromMatrixColumn(n,0),t.multiplyScalar(-e),f.add(t)}}(),O=function(){var t=new l["y"];return function(e,l){!0===n.screenSpacePanning?t.setFromMatrixColumn(l,1):(t.setFromMatrixColumn(l,0),t.crossVectors(n.object.up,t)),t.multiplyScalar(e),f.add(t)}}(),L=function(){var t=new l["y"];return function(e,l){var i=n.domElement;if(n.object.isPerspectiveCamera){var r=n.object.position;t.copy(r).sub(n.target);var o=t.length();o*=Math.tan(n.object.fov/2*Math.PI/180),C(2*e*o/i.clientHeight,n.object.matrix),O(2*l*o/i.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(C(e*(n.object.right-n.object.left)/n.object.zoom/i.clientWidth,n.object.matrix),O(l*(n.object.top-n.object.bottom)/n.object.zoom/i.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function P(t){n.object.isPerspectiveCamera?d/=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*t)),n.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(t){n.object.isPerspectiveCamera?d*=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/t)),n.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(t){m.set(t.clientX,t.clientY)}function I(t){w.set(t.clientX,t.clientY)}function D(t){y.set(t.clientX,t.clientY)}function N(t){v.set(t.clientX,t.clientY),g.subVectors(v,m).multiplyScalar(n.rotateSpeed);var e=n.domElement;E(2*Math.PI*g.x/e.clientHeight),A(2*Math.PI*g.y/e.clientHeight),m.copy(v),n.update()}function j(t){_.set(t.clientX,t.clientY),M.subVectors(_,w),M.y>0?P(T()):M.y<0&&R(T()),w.copy(_),n.update()}function B(t){b.set(t.clientX,t.clientY),x.subVectors(b,y).multiplyScalar(n.panSpeed),L(x.x,x.y),y.copy(b),n.update()}function z(){}function F(t){t.deltaY<0?R(T()):t.deltaY>0&&P(T()),n.update()}function U(t){var e=!1;switch(t.keyCode){case n.keys.UP:L(0,n.keyPanSpeed),e=!0;break;case n.keys.BOTTOM:L(0,-n.keyPanSpeed),e=!0;break;case n.keys.LEFT:L(n.keyPanSpeed,0),e=!0;break;case n.keys.RIGHT:L(-n.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),n.update())}function V(t){if(1==t.touches.length)m.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);m.set(e,n)}}function H(t){if(1==t.touches.length)y.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);y.set(e,n)}}function G(t){var e=t.touches[0].pageX-t.touches[1].pageX,n=t.touches[0].pageY-t.touches[1].pageY,l=Math.sqrt(e*e+n*n);w.set(0,l)}function W(t){n.enableZoom&&G(t),n.enablePan&&H(t)}function $(t){n.enableZoom&&G(t),n.enableRotate&&V(t)}function q(t){if(1==t.touches.length)v.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),l=.5*(t.touches[0].pageY+t.touches[1].pageY);v.set(e,l)}g.subVectors(v,m).multiplyScalar(n.rotateSpeed);var i=n.domElement;E(2*Math.PI*g.x/i.clientHeight),A(2*Math.PI*g.y/i.clientHeight),m.copy(v)}function X(t){if(1==t.touches.length)b.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),l=.5*(t.touches[0].pageY+t.touches[1].pageY);b.set(e,l)}x.subVectors(b,y).multiplyScalar(n.panSpeed),L(x.x,x.y),y.copy(b)}function Y(t){var e=t.touches[0].pageX-t.touches[1].pageX,l=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+l*l);_.set(0,i),M.set(0,Math.pow(_.y/w.y,n.zoomSpeed)),P(M.y),w.copy(_)}function Z(t){n.enableZoom&&Y(t),n.enablePan&&X(t)}function J(t){n.enableZoom&&Y(t),n.enableRotate&&q(t)}function K(){}function Q(t){if(!1!==n.enabled){var e;switch(t.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus(),t.button){case 0:e=n.mouseButtons.LEFT;break;case 1:e=n.mouseButtons.MIDDLE;break;case 2:e=n.mouseButtons.RIGHT;break;default:e=-1}switch(e){case l["j"].DOLLY:if(!1===n.enableZoom)return;I(t),a=u.DOLLY;break;case l["j"].ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===n.enablePan)return;D(t),a=u.PAN}else{if(!1===n.enableRotate)return;k(t),a=u.ROTATE}break;case l["j"].PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===n.enableRotate)return;k(t),a=u.ROTATE}else{if(!1===n.enablePan)return;D(t),a=u.PAN}break;default:a=u.NONE}a!==u.NONE&&(n.domElement.ownerDocument.addEventListener("mousemove",tt,!1),n.domElement.ownerDocument.addEventListener("mouseup",et,!1),n.dispatchEvent(r))}}function tt(t){if(!1!==n.enabled)switch(t.preventDefault(),a){case u.ROTATE:if(!1===n.enableRotate)return;N(t);break;case u.DOLLY:if(!1===n.enableZoom)return;j(t);break;case u.PAN:if(!1===n.enablePan)return;B(t);break}}function et(t){!1!==n.enabled&&(z(t),n.domElement.ownerDocument.removeEventListener("mousemove",tt,!1),n.domElement.ownerDocument.removeEventListener("mouseup",et,!1),n.dispatchEvent(o),a=u.NONE)}function nt(t){!1===n.enabled||!1===n.enableZoom||a!==u.NONE&&a!==u.ROTATE||(t.preventDefault(),t.stopPropagation(),n.dispatchEvent(r),F(t),n.dispatchEvent(o))}function lt(t){!1!==n.enabled&&!1!==n.enableKeys&&!1!==n.enablePan&&U(t)}function it(t){if(!1!==n.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(n.touches.ONE){case l["u"].ROTATE:if(!1===n.enableRotate)return;V(t),a=u.TOUCH_ROTATE;break;case l["u"].PAN:if(!1===n.enablePan)return;H(t),a=u.TOUCH_PAN;break;default:a=u.NONE}break;case 2:switch(n.touches.TWO){case l["u"].DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;W(t),a=u.TOUCH_DOLLY_PAN;break;case l["u"].DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;$(t),a=u.TOUCH_DOLLY_ROTATE;break;default:a=u.NONE}break;default:a=u.NONE}a!==u.NONE&&n.dispatchEvent(r)}}function rt(t){if(!1!==n.enabled)switch(t.preventDefault(),t.stopPropagation(),a){case u.TOUCH_ROTATE:if(!1===n.enableRotate)return;q(t),n.update();break;case u.TOUCH_PAN:if(!1===n.enablePan)return;X(t),n.update();break;case u.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;Z(t),n.update();break;case u.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;J(t),n.update();break;default:a=u.NONE}}function ot(t){!1!==n.enabled&&(K(t),n.dispatchEvent(o),a=u.NONE)}function ut(t){!1!==n.enabled&&t.preventDefault()}n.domElement.addEventListener("contextmenu",ut,!1),n.domElement.addEventListener("mousedown",Q,!1),n.domElement.addEventListener("wheel",nt,!1),n.domElement.addEventListener("touchstart",it,!1),n.domElement.addEventListener("touchend",ot,!1),n.domElement.addEventListener("touchmove",rt,!1),n.domElement.addEventListener("keydown",lt,!1),-1===n.domElement.tabIndex&&(n.domElement.tabIndex=0),this.update()};i.prototype=Object.create(l["g"].prototype),i.prototype.constructor=i;var r=function(t,e){i.call(this,t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=l["j"].PAN,this.mouseButtons.RIGHT=l["j"].ROTATE,this.touches.ONE=l["u"].PAN,this.touches.TWO=l["u"].DOLLY_ROTATE};r.prototype=Object.create(l["g"].prototype),r.prototype.constructor=r},4804:function(t,e,n){},"480e":function(t,e,n){"use strict";n("7db0");var l=n("7560");e["a"]=l["a"].extend({name:"v-theme-provider",props:{root:Boolean},computed:{isDark:function(){return this.root?this.rootIsDark:l["a"].options.computed.isDark.call(this)}},render:function(){return this.$slots.default&&this.$slots.default.find((function(t){return!t.isComment&&" "!==t.text}))}})},4840:function(t,e,n){var l=n("825a"),i=n("1c0b"),r=n("b622"),o=r("species");t.exports=function(t,e){var n,r=l(t).constructor;return void 0===r||void 0==(n=l(r)[o])?e:i(n)}},"490a":function(t,e,n){"use strict";n("99af"),n("a9e3"),n("8d4f");var l=n("a9ad"),i=n("80d2");e["a"]=l["a"].extend({name:"v-progress-circular",props:{button:Boolean,indeterminate:Boolean,rotate:{type:[Number,String],default:0},size:{type:[Number,String],default:32},width:{type:[Number,String],default:4},value:{type:[Number,String],default:0}},data:function(){return{radius:20}},computed:{calculatedSize:function(){return Number(this.size)+(this.button?8:0)},circumference:function(){return 2*Math.PI*this.radius},classes:function(){return{"v-progress-circular--indeterminate":this.indeterminate,"v-progress-circular--button":this.button}},normalizedValue:function(){return this.value<0?0:this.value>100?100:parseFloat(this.value)},strokeDashArray:function(){return Math.round(1e3*this.circumference)/1e3},strokeDashOffset:function(){return(100-this.normalizedValue)/100*this.circumference+"px"},strokeWidth:function(){return Number(this.width)/+this.size*this.viewBoxSize*2},styles:function(){return{height:Object(i["f"])(this.calculatedSize),width:Object(i["f"])(this.calculatedSize)}},svgStyles:function(){return{transform:"rotate(".concat(Number(this.rotate),"deg)")}},viewBoxSize:function(){return this.radius/(1-Number(this.width)/+this.size)}},methods:{genCircle:function(t,e){return this.$createElement("circle",{class:"v-progress-circular__".concat(t),attrs:{fill:"transparent",cx:2*this.viewBoxSize,cy:2*this.viewBoxSize,r:this.radius,"stroke-width":this.strokeWidth,"stroke-dasharray":this.strokeDashArray,"stroke-dashoffset":e}})},genSvg:function(){var t=[this.indeterminate||this.genCircle("underlay",0),this.genCircle("overlay",this.strokeDashOffset)];return this.$createElement("svg",{style:this.svgStyles,attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"".concat(this.viewBoxSize," ").concat(this.viewBoxSize," ").concat(2*this.viewBoxSize," ").concat(2*this.viewBoxSize)}},t)},genInfo:function(){return this.$createElement("div",{staticClass:"v-progress-circular__info"},this.$slots.default)}},render:function(t){return t("div",this.setTextColor(this.color,{staticClass:"v-progress-circular",attrs:{role:"progressbar","aria-valuemin":0,"aria-valuemax":100,"aria-valuenow":this.indeterminate?void 0:this.normalizedValue},class:this.classes,style:this.styles,on:this.$listeners}),[this.genSvg(),this.genInfo()])}})},4930:function(t,e,n){var l=n("d039");t.exports=!!Object.getOwnPropertySymbols&&!l((function(){return!String(Symbol())}))},"498a":function(t,e,n){"use strict";var l=n("23e7"),i=n("58a8").trim,r=n("c8d2");l({target:"String",proto:!0,forced:r("trim")},{trim:function(){return i(this)}})},"4ad4":function(t,e,n){"use strict";n("caad"),n("45fc"),n("b0c0"),n("b64b");var l=n("53ca"),i=n("16b7"),r=n("f2e7"),o=n("58df"),u=n("80d2"),a=n("d9bd"),s=Object(o["a"])(i["a"],r["a"]);e["a"]=s.extend({name:"activatable",props:{activator:{default:null,validator:function(t){return["string","object"].includes(Object(l["a"])(t))}},disabled:Boolean,internalActivator:Boolean,openOnHover:Boolean,openOnFocus:Boolean},data:function(){return{activatorElement:null,activatorNode:[],events:["click","mouseenter","mouseleave","focus"],listeners:{}}},watch:{activator:"resetActivator",openOnFocus:"resetActivator",openOnHover:"resetActivator"},mounted:function(){var t=Object(u["p"])(this,"activator",!0);t&&["v-slot","normal"].includes(t)&&Object(a["b"])('The activator slot must be bound, try \'<template v-slot:activator="{ on }"><v-btn v-on="on">\'',this),this.addActivatorEvents()},beforeDestroy:function(){this.removeActivatorEvents()},methods:{addActivatorEvents:function(){if(this.activator&&!this.disabled&&this.getActivator()){this.listeners=this.genActivatorListeners();for(var t=Object.keys(this.listeners),e=0,n=t;e<n.length;e++){var l=n[e];this.getActivator().addEventListener(l,this.listeners[l])}}},genActivator:function(){var t=Object(u["o"])(this,"activator",Object.assign(this.getValueProxy(),{on:this.genActivatorListeners(),attrs:this.genActivatorAttributes()}))||[];return this.activatorNode=t,t},genActivatorAttributes:function(){return{role:"button","aria-haspopup":!0,"aria-expanded":String(this.isActive)}},genActivatorListeners:function(){var t=this;if(this.disabled)return{};var e={};return this.openOnHover?(e.mouseenter=function(e){t.getActivator(e),t.runDelay("open")},e.mouseleave=function(e){t.getActivator(e),t.runDelay("close")}):e.click=function(e){var n=t.getActivator(e);n&&n.focus(),e.stopPropagation(),t.isActive=!t.isActive},this.openOnFocus&&(e.focus=function(e){t.getActivator(e),e.stopPropagation(),t.isActive=!t.isActive}),e},getActivator:function(t){if(this.activatorElement)return this.activatorElement;var e=null;if(this.activator){var n=this.internalActivator?this.$el:document;e="string"===typeof this.activator?n.querySelector(this.activator):this.activator.$el?this.activator.$el:this.activator}else if(1===this.activatorNode.length||this.activatorNode.length&&!t){var l=this.activatorNode[0].componentInstance;e=l&&l.$options.mixins&&l.$options.mixins.some((function(t){return t.options&&["activatable","menuable"].includes(t.options.name)}))?l.getActivator():this.activatorNode[0].elm}else t&&(e=t.currentTarget||t.target);return this.activatorElement=e,this.activatorElement},getContentSlot:function(){return Object(u["o"])(this,"default",this.getValueProxy(),!0)},getValueProxy:function(){var t=this;return{get value(){return t.isActive},set value(e){t.isActive=e}}},removeActivatorEvents:function(){if(this.activator&&this.activatorElement){for(var t=Object.keys(this.listeners),e=0,n=t;e<n.length;e++){var l=n[e];this.activatorElement.removeEventListener(l,this.listeners[l])}this.listeners={}}},resetActivator:function(){this.removeActivatorEvents(),this.activatorElement=null,this.getActivator(),this.addActivatorEvents()}}})},"4ae1":function(t,e,n){var l=n("23e7"),i=n("d066"),r=n("1c0b"),o=n("825a"),u=n("861d"),a=n("7c73"),s=n("0538"),c=n("d039"),h=i("Reflect","construct"),d=c((function(){function t(){}return!(h((function(){}),[],t)instanceof t)})),f=!c((function(){h((function(){}))})),p=d||f;l({target:"Reflect",stat:!0,forced:p,sham:p},{construct:function(t,e){r(t),o(e);var n=arguments.length<3?t:r(arguments[2]);if(f&&!d)return h(t,e,n);if(t==n){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var l=[null];return l.push.apply(l,e),new(s.apply(t,l))}var i=n.prototype,c=a(u(i)?i:Object.prototype),p=Function.apply.call(t,c,e);return u(p)?p:c}})},"4bd4":function(t,e,n){"use strict";n("4de4"),n("7db0"),n("4160"),n("caad"),n("07ac"),n("2532"),n("159b");var l=n("5530"),i=n("58df"),r=n("7e2b"),o=n("3206");e["a"]=Object(i["a"])(r["a"],Object(o["b"])("form")).extend({name:"v-form",provide:function(){return{form:this}},inheritAttrs:!1,props:{disabled:Boolean,lazyValidation:Boolean,readonly:Boolean,value:Boolean},data:function(){return{inputs:[],watchers:[],errorBag:{}}},watch:{errorBag:{handler:function(t){var e=Object.values(t).includes(!0);this.$emit("input",!e)},deep:!0,immediate:!0}},methods:{watchInput:function(t){var e=this,n=function(t){return t.$watch("hasError",(function(n){e.$set(e.errorBag,t._uid,n)}),{immediate:!0})},l={_uid:t._uid,valid:function(){},shouldValidate:function(){}};return this.lazyValidation?l.shouldValidate=t.$watch("shouldValidate",(function(i){i&&(e.errorBag.hasOwnProperty(t._uid)||(l.valid=n(t)))})):l.valid=n(t),l},validate:function(){return 0===this.inputs.filter((function(t){return!t.validate(!0)})).length},reset:function(){this.inputs.forEach((function(t){return t.reset()})),this.resetErrorBag()},resetErrorBag:function(){var t=this;this.lazyValidation&&setTimeout((function(){t.errorBag={}}),0)},resetValidation:function(){this.inputs.forEach((function(t){return t.resetValidation()})),this.resetErrorBag()},register:function(t){this.inputs.push(t),this.watchers.push(this.watchInput(t))},unregister:function(t){var e=this.inputs.find((function(e){return e._uid===t._uid}));if(e){var n=this.watchers.find((function(t){return t._uid===e._uid}));n&&(n.valid(),n.shouldValidate()),this.watchers=this.watchers.filter((function(t){return t._uid!==e._uid})),this.inputs=this.inputs.filter((function(t){return t._uid!==e._uid})),this.$delete(this.errorBag,e._uid)}}},render:function(t){var e=this;return t("form",{staticClass:"v-form",attrs:Object(l["a"])({novalidate:!0},this.attrs$),on:{submit:function(t){return e.$emit("submit",t)}}},this.$slots.default)}})},"4d64":function(t,e,n){var l=n("fc6a"),i=n("50c4"),r=n("23cb"),o=function(t){return function(e,n,o){var u,a=l(e),s=i(a.length),c=r(o,s);if(t&&n!=n){while(s>c)if(u=a[c++],u!=u)return!0}else for(;s>c;c++)if((t||c in a)&&a[c]===n)return t||c||0;return!t&&-1}};t.exports={includes:o(!0),indexOf:o(!1)}},"4de4":function(t,e,n){"use strict";var l=n("23e7"),i=n("b727").filter,r=n("1dde"),o=n("ae40"),u=r("filter"),a=o("filter");l({target:"Array",proto:!0,forced:!u||!a},{filter:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},"4def":function(t,e,n){(function(e){"use strict";function l(t,e,n){return e<=t&&t<=n}function i(t,e){return-1!==t.indexOf(e)}t.exports&&!e["encoding-indexes"]&&(e["encoding-indexes"]=n("369c")["encoding-indexes"]);var r=Math.floor;function o(t){if(void 0===t)return{};if(t===Object(t))return t;throw TypeError("Could not convert argument to dictionary")}function u(t){var e=String(t),n=e.length,l=0,i=[];while(l<n){var r=e.charCodeAt(l);if(r<55296||r>57343)i.push(r);else if(56320<=r&&r<=57343)i.push(65533);else if(55296<=r&&r<=56319)if(l===n-1)i.push(65533);else{var o=e.charCodeAt(l+1);if(56320<=o&&o<=57343){var u=1023&r,a=1023&o;i.push(65536+(u<<10)+a),l+=1}else i.push(65533)}l+=1}return i}function a(t){for(var e="",n=0;n<t.length;++n){var l=t[n];l<=65535?e+=String.fromCharCode(l):(l-=65536,e+=String.fromCharCode(55296+(l>>10),56320+(1023&l)))}return e}function s(t){return 0<=t&&t<=127}var c=s,h=-1;function d(t){this.tokens=[].slice.call(t),this.tokens.reverse()}d.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():h},prepend:function(t){if(Array.isArray(t)){var e=t;while(e.length)this.tokens.push(e.pop())}else this.tokens.push(t)},push:function(t){if(Array.isArray(t)){var e=t;while(e.length)this.tokens.unshift(e.shift())}else this.tokens.unshift(t)}};var f=-1;function p(t,e){if(t)throw TypeError("Decoder error");return e||65533}function m(t){throw TypeError("The code point "+t+" could not be encoded.")}function v(){}function g(){}function y(t){return t=String(t).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(x,t)?x[t]:null}v.prototype={handler:function(t,e){}},g.prototype={handler:function(t,e){}};var b=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],x={};b.forEach((function(t){t.encodings.forEach((function(t){t.labels.forEach((function(e){x[e]=t}))}))}));var w,_,M={},S={};function T(t,e){return e&&e[t]||null}function E(t,e){var n=e.indexOf(t);return-1===n?null:n}function A(t){if(!("encoding-indexes"in e))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return e["encoding-indexes"][t]}function C(t){if(t>39419&&t<189e3||t>1237575)return null;if(7457===t)return 59335;var e,n=0,l=0,i=A("gb18030-ranges");for(e=0;e<i.length;++e){var r=i[e];if(!(r[0]<=t))break;n=r[0],l=r[1]}return l+t-n}function O(t){if(59335===t)return 7457;var e,n=0,l=0,i=A("gb18030-ranges");for(e=0;e<i.length;++e){var r=i[e];if(!(r[1]<=t))break;n=r[1],l=r[0]}return l+t-n}function L(t){w=w||A("jis0208").map((function(t,e){return l(e,8272,8835)?null:t}));var e=w;return e.indexOf(t)}function P(t){_=_||A("big5").map((function(t,e){return e<5024?null:t}));var e=_;return 9552===t||9566===t||9569===t||9578===t||21313===t||21317===t?e.lastIndexOf(t):E(t,e)}var R="utf-8";function k(t,e){if(!(this instanceof k))throw TypeError("Called as a function. Did you forget 'new'?");t=void 0!==t?String(t):R,e=o(e),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var n=y(t);if(null===n||"replacement"===n.name)throw RangeError("Unknown encoding: "+t);if(!S[n.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var l=this;return l._encoding=n,Boolean(e["fatal"])&&(l._error_mode="fatal"),Boolean(e["ignoreBOM"])&&(l._ignoreBOM=!0),Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase(),this.fatal="fatal"===l._error_mode,this.ignoreBOM=l._ignoreBOM),l}function I(t,n){if(!(this instanceof I))throw TypeError("Called as a function. Did you forget 'new'?");n=o(n),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(n["fatal"])?"fatal":"replacement";var l=this;if(Boolean(n["NONSTANDARD_allowLegacyEncoding"])){t=void 0!==t?String(t):R;var i=y(t);if(null===i||"replacement"===i.name)throw RangeError("Unknown encoding: "+t);if(!M[i.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");l._encoding=i}else l._encoding=y("utf-8"),void 0!==t&&"console"in e&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase()),l}function D(t){var e=t.fatal,n=0,i=0,r=0,o=128,u=191;this.handler=function(t,a){if(a===h&&0!==r)return r=0,p(e);if(a===h)return f;if(0===r){if(l(a,0,127))return a;if(l(a,194,223))r=1,n=31&a;else if(l(a,224,239))224===a&&(o=160),237===a&&(u=159),r=2,n=15&a;else{if(!l(a,240,244))return p(e);240===a&&(o=144),244===a&&(u=143),r=3,n=7&a}return null}if(!l(a,o,u))return n=r=i=0,o=128,u=191,t.prepend(a),p(e);if(o=128,u=191,n=n<<6|63&a,i+=1,i!==r)return null;var s=n;return n=r=i=0,s}}function N(t){t.fatal;this.handler=function(t,e){if(e===h)return f;if(c(e))return e;var n,i;l(e,128,2047)?(n=1,i=192):l(e,2048,65535)?(n=2,i=224):l(e,65536,1114111)&&(n=3,i=240);var r=[(e>>6*n)+i];while(n>0){var o=e>>6*(n-1);r.push(128|63&o),n-=1}return r}}function j(t,e){var n=e.fatal;this.handler=function(e,l){if(l===h)return f;if(s(l))return l;var i=t[l-128];return null===i?p(n):i}}function B(t,e){e.fatal;this.handler=function(e,n){if(n===h)return f;if(c(n))return n;var l=E(n,t);return null===l&&m(n),l+128}}function z(t){var e=t.fatal,n=0,i=0,r=0;this.handler=function(t,o){if(o===h&&0===n&&0===i&&0===r)return f;var u;if(o!==h||0===n&&0===i&&0===r||(n=0,i=0,r=0,p(e)),0!==r){u=null,l(o,48,57)&&(u=C(10*(126*(10*(n-129)+i-48)+r-129)+o-48));var a=[i,r,o];return n=0,i=0,r=0,null===u?(t.prepend(a),p(e)):u}if(0!==i)return l(o,129,254)?(r=o,null):(t.prepend([i,o]),n=0,i=0,p(e));if(0!==n){if(l(o,48,57))return i=o,null;var c=n,d=null;n=0;var m=o<127?64:65;return(l(o,64,126)||l(o,128,254))&&(d=190*(c-129)+(o-m)),u=null===d?null:T(d,A("gb18030")),null===u&&s(o)&&t.prepend(o),null===u?p(e):u}return s(o)?o:128===o?8364:l(o,129,254)?(n=o,null):p(e)}}function F(t,e){t.fatal;this.handler=function(t,n){if(n===h)return f;if(c(n))return n;if(58853===n)return m(n);if(e&&8364===n)return 128;var l=E(n,A("gb18030"));if(null!==l){var i=r(l/190)+129,o=l%190,u=o<63?64:65;return[i,o+u]}if(e)return m(n);l=O(n);var a=r(l/10/126/10);l-=10*a*126*10;var s=r(l/10/126);l-=10*s*126;var d=r(l/10),p=l-10*d;return[a+129,s+48,d+129,p+48]}}function U(t){var e=t.fatal,n=0;this.handler=function(t,i){if(i===h&&0!==n)return n=0,p(e);if(i===h&&0===n)return f;if(0!==n){var r=n,o=null;n=0;var u=i<127?64:98;switch((l(i,64,126)||l(i,161,254))&&(o=157*(r-129)+(i-u)),o){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var a=null===o?null:T(o,A("big5"));return null===a&&s(i)&&t.prepend(i),null===a?p(e):a}return s(i)?i:l(i,129,254)?(n=i,null):p(e)}}function V(t){t.fatal;this.handler=function(t,e){if(e===h)return f;if(c(e))return e;var n=P(e);if(null===n)return m(e);var l=r(n/157)+129;if(l<161)return m(e);var i=n%157,o=i<63?64:98;return[l,i+o]}}function H(t){var e=t.fatal,n=!1,i=0;this.handler=function(t,r){if(r===h&&0!==i)return i=0,p(e);if(r===h&&0===i)return f;if(142===i&&l(r,161,223))return i=0,65216+r;if(143===i&&l(r,161,254))return n=!0,i=r,null;if(0!==i){var o=i;i=0;var u=null;return l(o,161,254)&&l(r,161,254)&&(u=T(94*(o-161)+(r-161),A(n?"jis0212":"jis0208"))),n=!1,l(r,161,254)||t.prepend(r),null===u?p(e):u}return s(r)?r:142===r||143===r||l(r,161,254)?(i=r,null):p(e)}}function G(t){t.fatal;this.handler=function(t,e){if(e===h)return f;if(c(e))return e;if(165===e)return 92;if(8254===e)return 126;if(l(e,65377,65439))return[142,e-65377+161];8722===e&&(e=65293);var n=E(e,A("jis0208"));if(null===n)return m(e);var i=r(n/94)+161,o=n%94+161;return[i,o]}}function W(t){var e=t.fatal,n={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6},i=n.ASCII,r=n.ASCII,o=0,u=!1;this.handler=function(t,a){switch(i){default:case n.ASCII:return 27===a?(i=n.EscapeStart,null):l(a,0,127)&&14!==a&&15!==a&&27!==a?(u=!1,a):a===h?f:(u=!1,p(e));case n.Roman:return 27===a?(i=n.EscapeStart,null):92===a?(u=!1,165):126===a?(u=!1,8254):l(a,0,127)&&14!==a&&15!==a&&27!==a&&92!==a&&126!==a?(u=!1,a):a===h?f:(u=!1,p(e));case n.Katakana:return 27===a?(i=n.EscapeStart,null):l(a,33,95)?(u=!1,65344+a):a===h?f:(u=!1,p(e));case n.LeadByte:return 27===a?(i=n.EscapeStart,null):l(a,33,126)?(u=!1,o=a,i=n.TrailByte,null):a===h?f:(u=!1,p(e));case n.TrailByte:if(27===a)return i=n.EscapeStart,p(e);if(l(a,33,126)){i=n.LeadByte;var s=94*(o-33)+a-33,c=T(s,A("jis0208"));return null===c?p(e):c}return a===h?(i=n.LeadByte,t.prepend(a),p(e)):(i=n.LeadByte,p(e));case n.EscapeStart:return 36===a||40===a?(o=a,i=n.Escape,null):(t.prepend(a),u=!1,i=r,p(e));case n.Escape:var d=o;o=0;var m=null;if(40===d&&66===a&&(m=n.ASCII),40===d&&74===a&&(m=n.Roman),40===d&&73===a&&(m=n.Katakana),36!==d||64!==a&&66!==a||(m=n.LeadByte),null!==m){i=i=m;var v=u;return u=!0,v?p(e):null}return t.prepend([d,a]),u=!1,i=r,p(e)}}}function $(t){t.fatal;var e={ASCII:0,Roman:1,jis0208:2},n=e.ASCII;this.handler=function(t,l){if(l===h&&n!==e.ASCII)return t.prepend(l),n=e.ASCII,[27,40,66];if(l===h&&n===e.ASCII)return f;if((n===e.ASCII||n===e.Roman)&&(14===l||15===l||27===l))return m(65533);if(n===e.ASCII&&c(l))return l;if(n===e.Roman&&(c(l)&&92!==l&&126!==l||165==l||8254==l)){if(c(l))return l;if(165===l)return 92;if(8254===l)return 126}if(c(l)&&n!==e.ASCII)return t.prepend(l),n=e.ASCII,[27,40,66];if((165===l||8254===l)&&n!==e.Roman)return t.prepend(l),n=e.Roman,[27,40,74];8722===l&&(l=65293);var i=E(l,A("jis0208"));if(null===i)return m(l);if(n!==e.jis0208)return t.prepend(l),n=e.jis0208,[27,36,66];var o=r(i/94)+33,u=i%94+33;return[o,u]}}function q(t){var e=t.fatal,n=0;this.handler=function(t,i){if(i===h&&0!==n)return n=0,p(e);if(i===h&&0===n)return f;if(0!==n){var r=n,o=null;n=0;var u=i<127?64:65,a=r<160?129:193;if((l(i,64,126)||l(i,128,252))&&(o=188*(r-a)+i-u),l(o,8836,10715))return 48508+o;var c=null===o?null:T(o,A("jis0208"));return null===c&&s(i)&&t.prepend(i),null===c?p(e):c}return s(i)||128===i?i:l(i,161,223)?65216+i:l(i,129,159)||l(i,224,252)?(n=i,null):p(e)}}function X(t){t.fatal;this.handler=function(t,e){if(e===h)return f;if(c(e)||128===e)return e;if(165===e)return 92;if(8254===e)return 126;if(l(e,65377,65439))return e-65377+161;8722===e&&(e=65293);var n=L(e);if(null===n)return m(e);var i=r(n/188),o=i<31?129:193,u=n%188,a=u<63?64:65;return[i+o,u+a]}}function Y(t){var e=t.fatal,n=0;this.handler=function(t,i){if(i===h&&0!==n)return n=0,p(e);if(i===h&&0===n)return f;if(0!==n){var r=n,o=null;n=0,l(i,65,254)&&(o=190*(r-129)+(i-65));var u=null===o?null:T(o,A("euc-kr"));return null===o&&s(i)&&t.prepend(i),null===u?p(e):u}return s(i)?i:l(i,129,254)?(n=i,null):p(e)}}function Z(t){t.fatal;this.handler=function(t,e){if(e===h)return f;if(c(e))return e;var n=E(e,A("euc-kr"));if(null===n)return m(e);var l=r(n/190)+129,i=n%190+65;return[l,i]}}function J(t,e){var n=t>>8,l=255&t;return e?[n,l]:[l,n]}function K(t,e){var n=e.fatal,i=null,r=null;this.handler=function(e,o){if(o===h&&(null!==i||null!==r))return p(n);if(o===h&&null===i&&null===r)return f;if(null===i)return i=o,null;var u;if(u=t?(i<<8)+o:(o<<8)+i,i=null,null!==r){var a=r;return r=null,l(u,56320,57343)?65536+1024*(a-55296)+(u-56320):(e.prepend(J(u,t)),p(n))}return l(u,55296,56319)?(r=u,null):l(u,56320,57343)?p(n):u}}function Q(t,e){e.fatal;this.handler=function(e,n){if(n===h)return f;if(l(n,0,65535))return J(n,t);var i=J(55296+(n-65536>>10),t),r=J(56320+(n-65536&1023),t);return i.concat(r)}}function tt(t){t.fatal;this.handler=function(t,e){return e===h?f:s(e)?e:63360+e-128}}function et(t){t.fatal;this.handler=function(t,e){return e===h?f:c(e)?e:l(e,63360,63487)?e-63360+128:m(e)}}Object.defineProperty&&(Object.defineProperty(k.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(k.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(k.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),k.prototype.decode=function(t,e){var n;n="object"===typeof t&&t instanceof ArrayBuffer?new Uint8Array(t):"object"===typeof t&&"buffer"in t&&t.buffer instanceof ArrayBuffer?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e=o(e),this._do_not_flush||(this._decoder=S[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(e["stream"]);var l,r=new d(n),u=[];while(1){var s=r.read();if(s===h)break;if(l=this._decoder.handler(r,s),l===f)break;null!==l&&(Array.isArray(l)?u.push.apply(u,l):u.push(l))}if(!this._do_not_flush){do{if(l=this._decoder.handler(r,r.read()),l===f)break;null!==l&&(Array.isArray(l)?u.push.apply(u,l):u.push(l))}while(!r.endOfStream());this._decoder=null}function c(t){return!i(["UTF-8","UTF-16LE","UTF-16BE"],this._encoding.name)||this._ignoreBOM||this._BOMseen||(t.length>0&&65279===t[0]?(this._BOMseen=!0,t.shift()):t.length>0&&(this._BOMseen=!0)),a(t)}return c.call(this,u)},Object.defineProperty&&Object.defineProperty(I.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),I.prototype.encode=function(t,e){t=void 0===t?"":String(t),e=o(e),this._do_not_flush||(this._encoder=M[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(e["stream"]);var n,l=new d(u(t)),i=[];while(1){var r=l.read();if(r===h)break;if(n=this._encoder.handler(l,r),n===f)break;Array.isArray(n)?i.push.apply(i,n):i.push(n)}if(!this._do_not_flush){while(1){if(n=this._encoder.handler(l,l.read()),n===f)break;Array.isArray(n)?i.push.apply(i,n):i.push(n)}this._encoder=null}return new Uint8Array(i)},M["UTF-8"]=function(t){return new N(t)},S["UTF-8"]=function(t){return new D(t)},function(){"encoding-indexes"in e&&b.forEach((function(t){"Legacy single-byte encodings"===t.heading&&t.encodings.forEach((function(t){var e=t.name,n=A(e.toLowerCase());S[e]=function(t){return new j(n,t)},M[e]=function(t){return new B(n,t)}}))}))}(),S["GBK"]=function(t){return new z(t)},M["GBK"]=function(t){return new F(t,!0)},M["gb18030"]=function(t){return new F(t)},S["gb18030"]=function(t){return new z(t)},M["Big5"]=function(t){return new V(t)},S["Big5"]=function(t){return new U(t)},M["EUC-JP"]=function(t){return new G(t)},S["EUC-JP"]=function(t){return new H(t)},M["ISO-2022-JP"]=function(t){return new $(t)},S["ISO-2022-JP"]=function(t){return new W(t)},M["Shift_JIS"]=function(t){return new X(t)},S["Shift_JIS"]=function(t){return new q(t)},M["EUC-KR"]=function(t){return new Z(t)},S["EUC-KR"]=function(t){return new Y(t)},M["UTF-16BE"]=function(t){return new Q(!0,t)},S["UTF-16BE"]=function(t){return new K(!0,t)},M["UTF-16LE"]=function(t){return new Q(!1,t)},S["UTF-16LE"]=function(t){return new K(!1,t)},M["x-user-defined"]=function(t){return new et(t)},S["x-user-defined"]=function(t){return new tt(t)},e["TextEncoder"]||(e["TextEncoder"]=I),e["TextDecoder"]||(e["TextDecoder"]=k),t.exports&&(t.exports={TextEncoder:e["TextEncoder"],TextDecoder:e["TextDecoder"],EncodingIndexes:e["encoding-indexes"]})})(this||{})},"4df4":function(t,e,n){"use strict";var l=n("0366"),i=n("7b0b"),r=n("9bdd"),o=n("e95a"),u=n("50c4"),a=n("8418"),s=n("35a1");t.exports=function(t){var e,n,c,h,d,f,p=i(t),m="function"==typeof this?this:Array,v=arguments.length,g=v>1?arguments[1]:void 0,y=void 0!==g,b=s(p),x=0;if(y&&(g=l(g,v>2?arguments[2]:void 0,2)),void 0==b||m==Array&&o(b))for(e=u(p.length),n=new m(e);e>x;x++)f=y?g(p[x],x):p[x],a(n,x,f);else for(h=b.call(p),d=h.next,n=new m;!(c=d.call(h)).done;x++)f=y?r(h,g,[c.value,x],!0):c.value,a(n,x,f);return n.length=x,n}},"4e82":function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var l=n("ade3"),i=n("3206");function r(t,e,n){return Object(i["a"])(t,e,n).extend({name:"groupable",props:{activeClass:{type:String,default:function(){if(this[t])return this[t].activeClass}},disabled:Boolean},data:function(){return{isActive:!1}},computed:{groupClasses:function(){return this.activeClass?Object(l["a"])({},this.activeClass,this.isActive):{}}},created:function(){this[t]&&this[t].register(this)},beforeDestroy:function(){this[t]&&this[t].unregister(this)},methods:{toggle:function(){this.$emit("change")}}})}r("itemGroup")},"4ec9":function(t,e,n){"use strict";var l=n("6d61"),i=n("6566");t.exports=l("Map",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),i)},"4fad":function(t,e,n){var l=n("23e7"),i=n("6f53").entries;l({target:"Object",stat:!0},{entries:function(t){return i(t)}})},"4ff9":function(t,e,n){},"50c4":function(t,e,n){var l=n("a691"),i=Math.min;t.exports=function(t){return t>0?i(l(t),9007199254740991):0}},5135:function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},5311:function(t,e,n){"use strict";var l=n("5607"),i=n("2b0e");e["a"]=i["a"].extend({name:"rippleable",directives:{ripple:l["a"]},props:{ripple:{type:[Boolean,Object],default:!0}},methods:{genRipple:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.ripple?(t.staticClass="v-input--selection-controls__ripple",t.directives=t.directives||[],t.directives.push({name:"ripple",value:{center:!0}}),this.$createElement("div",t)):null}}})},5319:function(t,e,n){"use strict";var l=n("d784"),i=n("825a"),r=n("50c4"),o=n("a691"),u=n("1d80"),a=n("8aa5"),s=n("0cb2"),c=n("14c3"),h=Math.max,d=Math.min,f=function(t){return void 0===t?t:String(t)};l("replace",2,(function(t,e,n,l){var p=l.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,m=l.REPLACE_KEEPS_$0,v=p?"$":"$0";return[function(n,l){var i=u(this),r=void 0==n?void 0:n[t];return void 0!==r?r.call(n,i,l):e.call(String(i),n,l)},function(t,l){if(!p&&m||"string"===typeof l&&-1===l.indexOf(v)){var u=n(e,t,this,l);if(u.done)return u.value}var g=i(t),y=String(this),b="function"===typeof l;b||(l=String(l));var x=g.global;if(x){var w=g.unicode;g.lastIndex=0}var _=[];while(1){var M=c(g,y);if(null===M)break;if(_.push(M),!x)break;var S=String(M[0]);""===S&&(g.lastIndex=a(y,r(g.lastIndex),w))}for(var T="",E=0,A=0;A<_.length;A++){M=_[A];for(var C=String(M[0]),O=h(d(o(M.index),y.length),0),L=[],P=1;P<M.length;P++)L.push(f(M[P]));var R=M.groups;if(b){var k=[C].concat(L,O,y);void 0!==R&&k.push(R);var I=String(l.apply(void 0,k))}else I=s(C,y,O,L,R,l);O>=E&&(T+=y.slice(E,O)+I,E=O+C.length)}return T+y.slice(E)}]}))},"53ca":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));n("a4d3"),n("e01a"),n("d28b"),n("d3b7"),n("3ca3"),n("ddb0");function l(t){return l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}},5530:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));n("a4d3"),n("4de4"),n("4160"),n("e439"),n("dbb4"),n("b64b"),n("159b");var l=n("ade3");function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){Object(l["a"])(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}},5607:function(t,e,n){"use strict";n("99af"),n("b0c0"),n("a9e3"),n("d3b7"),n("25f0"),n("7435");var l=n("80d2"),i=80;function r(t,e){t.style.transform=e,t.style.webkitTransform=e}function o(t,e){t.style.opacity=e.toString()}function u(t){return"TouchEvent"===t.constructor.name}function a(t){return"KeyboardEvent"===t.constructor.name}var s=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=0,i=0;if(!a(t)){var r=e.getBoundingClientRect(),o=u(t)?t.touches[t.touches.length-1]:t;l=o.clientX-r.left,i=o.clientY-r.top}var s=0,c=.3;e._ripple&&e._ripple.circle?(c=.15,s=e.clientWidth/2,s=n.center?s:s+Math.sqrt(Math.pow(l-s,2)+Math.pow(i-s,2))/4):s=Math.sqrt(Math.pow(e.clientWidth,2)+Math.pow(e.clientHeight,2))/2;var h="".concat((e.clientWidth-2*s)/2,"px"),d="".concat((e.clientHeight-2*s)/2,"px"),f=n.center?h:"".concat(l-s,"px"),p=n.center?d:"".concat(i-s,"px");return{radius:s,scale:c,x:f,y:p,centerX:h,centerY:d}},c={show:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e._ripple&&e._ripple.enabled){var l=document.createElement("span"),i=document.createElement("span");l.appendChild(i),l.className="v-ripple__container",n.class&&(l.className+=" ".concat(n.class));var u=s(t,e,n),a=u.radius,c=u.scale,h=u.x,d=u.y,f=u.centerX,p=u.centerY,m="".concat(2*a,"px");i.className="v-ripple__animation",i.style.width=m,i.style.height=m,e.appendChild(l);var v=window.getComputedStyle(e);v&&"static"===v.position&&(e.style.position="relative",e.dataset.previousPosition="static"),i.classList.add("v-ripple__animation--enter"),i.classList.add("v-ripple__animation--visible"),r(i,"translate(".concat(h,", ").concat(d,") scale3d(").concat(c,",").concat(c,",").concat(c,")")),o(i,0),i.dataset.activated=String(performance.now()),setTimeout((function(){i.classList.remove("v-ripple__animation--enter"),i.classList.add("v-ripple__animation--in"),r(i,"translate(".concat(f,", ").concat(p,") scale3d(1,1,1)")),o(i,.25)}),0)}},hide:function(t){if(t&&t._ripple&&t._ripple.enabled){var e=t.getElementsByClassName("v-ripple__animation");if(0!==e.length){var n=e[e.length-1];if(!n.dataset.isHiding){n.dataset.isHiding="true";var l=performance.now()-Number(n.dataset.activated),i=Math.max(250-l,0);setTimeout((function(){n.classList.remove("v-ripple__animation--in"),n.classList.add("v-ripple__animation--out"),o(n,0),setTimeout((function(){var e=t.getElementsByClassName("v-ripple__animation");1===e.length&&t.dataset.previousPosition&&(t.style.position=t.dataset.previousPosition,delete t.dataset.previousPosition),n.parentNode&&t.removeChild(n.parentNode)}),300)}),i)}}}}};function h(t){return"undefined"===typeof t||!!t}function d(t){var e={},n=t.currentTarget;if(n&&n._ripple&&!n._ripple.touched){if(u(t))n._ripple.touched=!0,n._ripple.isTouch=!0;else if(n._ripple.isTouch)return;if(e.center=n._ripple.centered||a(t),n._ripple.class&&(e.class=n._ripple.class),u(t)){if(n._ripple.showTimerCommit)return;n._ripple.showTimerCommit=function(){c.show(t,n,e)},n._ripple.showTimer=window.setTimeout((function(){n&&n._ripple&&n._ripple.showTimerCommit&&(n._ripple.showTimerCommit(),n._ripple.showTimerCommit=null)}),i)}else c.show(t,n,e)}}function f(t){var e=t.currentTarget;if(e&&e._ripple){if(window.clearTimeout(e._ripple.showTimer),"touchend"===t.type&&e._ripple.showTimerCommit)return e._ripple.showTimerCommit(),e._ripple.showTimerCommit=null,void(e._ripple.showTimer=setTimeout((function(){f(t)})));window.setTimeout((function(){e._ripple&&(e._ripple.touched=!1)})),c.hide(e)}}function p(t){var e=t.currentTarget;e&&e._ripple&&(e._ripple.showTimerCommit&&(e._ripple.showTimerCommit=null),window.clearTimeout(e._ripple.showTimer))}var m=!1;function v(t){m||t.keyCode!==l["t"].enter&&t.keyCode!==l["t"].space||(m=!0,d(t))}function g(t){m=!1,f(t)}function y(t,e,n){var l=h(e.value);l||c.hide(t),t._ripple=t._ripple||{},t._ripple.enabled=l;var i=e.value||{};i.center&&(t._ripple.centered=!0),i.class&&(t._ripple.class=e.value.class),i.circle&&(t._ripple.circle=i.circle),l&&!n?(t.addEventListener("touchstart",d,{passive:!0}),t.addEventListener("touchend",f,{passive:!0}),t.addEventListener("touchmove",p,{passive:!0}),t.addEventListener("touchcancel",f),t.addEventListener("mousedown",d),t.addEventListener("mouseup",f),t.addEventListener("mouseleave",f),t.addEventListener("keydown",v),t.addEventListener("keyup",g),t.addEventListener("dragstart",f,{passive:!0})):!l&&n&&b(t)}function b(t){t.removeEventListener("mousedown",d),t.removeEventListener("touchstart",d),t.removeEventListener("touchend",f),t.removeEventListener("touchmove",p),t.removeEventListener("touchcancel",f),t.removeEventListener("mouseup",f),t.removeEventListener("mouseleave",f),t.removeEventListener("keydown",v),t.removeEventListener("keyup",g),t.removeEventListener("dragstart",f)}function x(t,e,n){y(t,e,!1)}function w(t){delete t._ripple,b(t)}function _(t,e){if(e.value!==e.oldValue){var n=h(e.oldValue);y(t,e,n)}}var M={bind:x,unbind:w,update:_};e["a"]=M},5692:function(t,e,n){var l=n("c430"),i=n("c6cd");(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.8.3",mode:l?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},5698:function(t,e,n){"use strict";var l={value:()=>{}};function i(){for(var t,e=0,n=arguments.length,l={};e<n;++e){if(!(t=arguments[e]+"")||t in l||/[\s.]/.test(t))throw new Error("illegal type: "+t);l[t]=[]}return new r(l)}function r(t){this._=t}function o(t,e){return t.trim().split(/^|\s+/).map((function(t){var n="",l=t.indexOf(".");if(l>=0&&(n=t.slice(l+1),t=t.slice(0,l)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))}function u(t,e){for(var n,l=0,i=t.length;l<i;++l)if((n=t[l]).name===e)return n.value}function a(t,e,n){for(var i=0,r=t.length;i<r;++i)if(t[i].name===e){t[i]=l,t=t.slice(0,i).concat(t.slice(i+1));break}return null!=n&&t.push({name:e,value:n}),t}r.prototype=i.prototype={constructor:r,on:function(t,e){var n,l=this._,i=o(t+"",l),r=-1,s=i.length;if(!(arguments.length<2)){if(null!=e&&"function"!==typeof e)throw new Error("invalid callback: "+e);while(++r<s)if(n=(t=i[r]).type)l[n]=a(l[n],t.name,e);else if(null==e)for(n in l)l[n]=a(l[n],t.name,null);return this}while(++r<s)if((n=(t=i[r]).type)&&(n=u(l[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new r(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,l,i=new Array(n),r=0;r<n;++r)i[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(l=this._[t],r=0,n=l.length;r<n;++r)l[r].value.apply(e,i)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var l=this._[t],i=0,r=l.length;i<r;++i)l[i].value.apply(e,n)}};var s=i;function c(){}var h=function(t){return null==t?c:function(){return this.querySelector(t)}},d=function(t){"function"!==typeof t&&(t=h(t));for(var e=this._groups,n=e.length,l=new Array(n),i=0;i<n;++i)for(var r,o,u=e[i],a=u.length,s=l[i]=new Array(a),c=0;c<a;++c)(r=u[c])&&(o=t.call(r,r.__data__,c,u))&&("__data__"in r&&(o.__data__=r.__data__),s[c]=o);return new re(l,this._parents)},f=function(t){return"object"===typeof t&&"length"in t?t:Array.from(t)};function p(){return[]}var m=function(t){return null==t?p:function(){return this.querySelectorAll(t)}};function v(t){return function(){var e=t.apply(this,arguments);return null==e?[]:f(e)}}var g=function(t){t="function"===typeof t?v(t):m(t);for(var e=this._groups,n=e.length,l=[],i=[],r=0;r<n;++r)for(var o,u=e[r],a=u.length,s=0;s<a;++s)(o=u[s])&&(l.push(t.call(o,o.__data__,s,u)),i.push(o));return new re(l,i)},y=function(t){return function(){return this.matches(t)}};function b(t){return function(e){return e.matches(t)}}var x=Array.prototype.find;function w(t){return function(){return x.call(this.children,t)}}function _(){return this.firstElementChild}var M=function(t){return this.select(null==t?_:w("function"===typeof t?t:b(t)))},S=Array.prototype.filter;function T(){return this.children}function E(t){return function(){return S.call(this.children,t)}}var A=function(t){return this.selectAll(null==t?T:E("function"===typeof t?t:b(t)))},C=function(t){"function"!==typeof t&&(t=y(t));for(var e=this._groups,n=e.length,l=new Array(n),i=0;i<n;++i)for(var r,o=e[i],u=o.length,a=l[i]=[],s=0;s<u;++s)(r=o[s])&&t.call(r,r.__data__,s,o)&&a.push(r);return new re(l,this._parents)},O=function(t){return new Array(t.length)},L=function(){return new re(this._enter||this._groups.map(O),this._parents)};function P(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}P.prototype={constructor:P,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var R=function(t){return function(){return t}};function k(t,e,n,l,i,r){for(var o,u=0,a=e.length,s=r.length;u<s;++u)(o=e[u])?(o.__data__=r[u],l[u]=o):n[u]=new P(t,r[u]);for(;u<a;++u)(o=e[u])&&(i[u]=o)}function I(t,e,n,l,i,r,o){var u,a,s,c=new Map,h=e.length,d=r.length,f=new Array(h);for(u=0;u<h;++u)(a=e[u])&&(f[u]=s=o.call(a,a.__data__,u,e)+"",c.has(s)?i[u]=a:c.set(s,a));for(u=0;u<d;++u)s=o.call(t,r[u],u,r)+"",(a=c.get(s))?(l[u]=a,a.__data__=r[u],c.delete(s)):n[u]=new P(t,r[u]);for(u=0;u<h;++u)(a=e[u])&&c.get(f[u])===a&&(i[u]=a)}function D(t){return t.__data__}var N=function(t,e){if(!arguments.length)return Array.from(this,D);var n=e?I:k,l=this._parents,i=this._groups;"function"!==typeof t&&(t=R(t));for(var r=i.length,o=new Array(r),u=new Array(r),a=new Array(r),s=0;s<r;++s){var c=l[s],h=i[s],d=h.length,p=f(t.call(c,c&&c.__data__,s,l)),m=p.length,v=u[s]=new Array(m),g=o[s]=new Array(m),y=a[s]=new Array(d);n(c,h,v,g,y,p,e);for(var b,x,w=0,_=0;w<m;++w)if(b=v[w]){w>=_&&(_=w+1);while(!(x=g[_])&&++_<m);b._next=x||null}}return o=new re(o,l),o._enter=u,o._exit=a,o},j=function(){return new re(this._exit||this._groups.map(O),this._parents)},B=function(t,e,n){var l=this.enter(),i=this,r=this.exit();return l="function"===typeof t?t(l):l.append(t+""),null!=e&&(i=e(i)),null==n?r.remove():n(r),l&&i?l.merge(i).order():i},z=function(t){if(!(t instanceof re))throw new Error("invalid merge");for(var e=this._groups,n=t._groups,l=e.length,i=n.length,r=Math.min(l,i),o=new Array(l),u=0;u<r;++u)for(var a,s=e[u],c=n[u],h=s.length,d=o[u]=new Array(h),f=0;f<h;++f)(a=s[f]||c[f])&&(d[f]=a);for(;u<l;++u)o[u]=e[u];return new re(o,this._parents)},F=function(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var l,i=t[e],r=i.length-1,o=i[r];--r>=0;)(l=i[r])&&(o&&4^l.compareDocumentPosition(o)&&o.parentNode.insertBefore(l,o),o=l);return this},U=function(t){function e(e,n){return e&&n?t(e.__data__,n.__data__):!e-!n}t||(t=V);for(var n=this._groups,l=n.length,i=new Array(l),r=0;r<l;++r){for(var o,u=n[r],a=u.length,s=i[r]=new Array(a),c=0;c<a;++c)(o=u[c])&&(s[c]=o);s.sort(e)}return new re(i,this._parents).order()};function V(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}var H=function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},G=function(){return Array.from(this)},W=function(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var l=t[e],i=0,r=l.length;i<r;++i){var o=l[i];if(o)return o}return null},$=function(){let t=0;for(const e of this)++t;return t},q=function(){return!this.node()},X=function(t){for(var e=this._groups,n=0,l=e.length;n<l;++n)for(var i,r=e[n],o=0,u=r.length;o<u;++o)(i=r[o])&&t.call(i,i.__data__,o,r);return this},Y="http://www.w3.org/1999/xhtml",Z={svg:"http://www.w3.org/2000/svg",xhtml:Y,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},J=function(t){var e=t+="",n=e.indexOf(":");return n>=0&&"xmlns"!==(e=t.slice(0,n))&&(t=t.slice(n+1)),Z.hasOwnProperty(e)?{space:Z[e],local:t}:t};function K(t){return function(){this.removeAttribute(t)}}function Q(t){return function(){this.removeAttributeNS(t.space,t.local)}}function tt(t,e){return function(){this.setAttribute(t,e)}}function et(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function nt(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttribute(t):this.setAttribute(t,n)}}function lt(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}var it=function(t,e){var n=J(t);if(arguments.length<2){var l=this.node();return n.local?l.getAttributeNS(n.space,n.local):l.getAttribute(n)}return this.each((null==e?n.local?Q:K:"function"===typeof e?n.local?lt:nt:n.local?et:tt)(n,e))},rt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function ot(t){return function(){this.style.removeProperty(t)}}function ut(t,e,n){return function(){this.style.setProperty(t,e,n)}}function at(t,e,n){return function(){var l=e.apply(this,arguments);null==l?this.style.removeProperty(t):this.style.setProperty(t,l,n)}}var st=function(t,e,n){return arguments.length>1?this.each((null==e?ot:"function"===typeof e?at:ut)(t,e,null==n?"":n)):ct(this.node(),t)};function ct(t,e){return t.style.getPropertyValue(e)||rt(t).getComputedStyle(t,null).getPropertyValue(e)}function ht(t){return function(){delete this[t]}}function dt(t,e){return function(){this[t]=e}}function ft(t,e){return function(){var n=e.apply(this,arguments);null==n?delete this[t]:this[t]=n}}var pt=function(t,e){return arguments.length>1?this.each((null==e?ht:"function"===typeof e?ft:dt)(t,e)):this.node()[t]};function mt(t){return t.trim().split(/^|\s+/)}function vt(t){return t.classList||new gt(t)}function gt(t){this._node=t,this._names=mt(t.getAttribute("class")||"")}function yt(t,e){var n=vt(t),l=-1,i=e.length;while(++l<i)n.add(e[l])}function bt(t,e){var n=vt(t),l=-1,i=e.length;while(++l<i)n.remove(e[l])}function xt(t){return function(){yt(this,t)}}function wt(t){return function(){bt(this,t)}}function _t(t,e){return function(){(e.apply(this,arguments)?yt:bt)(this,t)}}gt.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var Mt=function(t,e){var n=mt(t+"");if(arguments.length<2){var l=vt(this.node()),i=-1,r=n.length;while(++i<r)if(!l.contains(n[i]))return!1;return!0}return this.each(("function"===typeof e?_t:e?xt:wt)(n,e))};function St(){this.textContent=""}function Tt(t){return function(){this.textContent=t}}function Et(t){return function(){var e=t.apply(this,arguments);this.textContent=null==e?"":e}}var At=function(t){return arguments.length?this.each(null==t?St:("function"===typeof t?Et:Tt)(t)):this.node().textContent};function Ct(){this.innerHTML=""}function Ot(t){return function(){this.innerHTML=t}}function Lt(t){return function(){var e=t.apply(this,arguments);this.innerHTML=null==e?"":e}}var Pt=function(t){return arguments.length?this.each(null==t?Ct:("function"===typeof t?Lt:Ot)(t)):this.node().innerHTML};function Rt(){this.nextSibling&&this.parentNode.appendChild(this)}var kt=function(){return this.each(Rt)};function It(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}var Dt=function(){return this.each(It)};function Nt(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===Y&&e.documentElement.namespaceURI===Y?e.createElement(t):e.createElementNS(n,t)}}function jt(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}var Bt=function(t){var e=J(t);return(e.local?jt:Nt)(e)},zt=function(t){var e="function"===typeof t?t:Bt(t);return this.select((function(){return this.appendChild(e.apply(this,arguments))}))};function Ft(){return null}var Ut=function(t,e){var n="function"===typeof t?t:Bt(t),l=null==e?Ft:"function"===typeof e?e:h(e);return this.select((function(){return this.insertBefore(n.apply(this,arguments),l.apply(this,arguments)||null)}))};function Vt(){var t=this.parentNode;t&&t.removeChild(this)}var Ht=function(){return this.each(Vt)};function Gt(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Wt(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}var $t=function(t){return this.select(t?Wt:Gt)},qt=function(t){return arguments.length?this.property("__data__",t):this.node().__data__};function Xt(t){return function(e){t.call(this,e,this.__data__)}}function Yt(t){return t.trim().split(/^|\s+/).map((function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}}))}function Zt(t){return function(){var e=this.__on;if(e){for(var n,l=0,i=-1,r=e.length;l<r;++l)n=e[l],t.type&&n.type!==t.type||n.name!==t.name?e[++i]=n:this.removeEventListener(n.type,n.listener,n.options);++i?e.length=i:delete this.__on}}}function Jt(t,e,n){return function(){var l,i=this.__on,r=Xt(e);if(i)for(var o=0,u=i.length;o<u;++o)if((l=i[o]).type===t.type&&l.name===t.name)return this.removeEventListener(l.type,l.listener,l.options),this.addEventListener(l.type,l.listener=r,l.options=n),void(l.value=e);this.addEventListener(t.type,r,n),l={type:t.type,name:t.name,value:e,listener:r,options:n},i?i.push(l):this.__on=[l]}}var Kt=function(t,e,n){var l,i,r=Yt(t+""),o=r.length;if(!(arguments.length<2)){for(u=e?Jt:Zt,l=0;l<o;++l)this.each(u(r[l],e,n));return this}var u=this.node().__on;if(u)for(var a,s=0,c=u.length;s<c;++s)for(l=0,a=u[s];l<o;++l)if((i=r[l]).type===a.type&&i.name===a.name)return a.value};function Qt(t,e,n){var l=rt(t),i=l.CustomEvent;"function"===typeof i?i=new i(e,n):(i=l.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function te(t,e){return function(){return Qt(this,t,e)}}function ee(t,e){return function(){return Qt(this,t,e.apply(this,arguments))}}var ne=function(t,e){return this.each(("function"===typeof e?ee:te)(t,e))},le=function*(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var l,i=t[e],r=0,o=i.length;r<o;++r)(l=i[r])&&(yield l)},ie=[null];function re(t,e){this._groups=t,this._parents=e}function oe(){return new re([[document.documentElement]],ie)}function ue(){return this}re.prototype=oe.prototype={constructor:re,select:d,selectAll:g,selectChild:M,selectChildren:A,filter:C,data:N,enter:L,exit:j,join:B,merge:z,selection:ue,order:F,sort:U,call:H,nodes:G,node:W,size:$,empty:q,each:X,attr:it,style:st,property:pt,classed:Mt,text:At,html:Pt,raise:kt,lower:Dt,append:zt,insert:Ut,remove:Ht,clone:$t,datum:qt,on:Kt,dispatch:ne,[Symbol.iterator]:le};var ae=oe,se=function(t){return"string"===typeof t?new re([[document.querySelector(t)]],[document.documentElement]):new re([[t]],ie)};var ce=function(t){t.preventDefault(),t.stopImmediatePropagation()},he=function(t){var e=t.document.documentElement,n=se(t).on("dragstart.drag",ce,!0);"onselectstart"in e?n.on("selectstart.drag",ce,!0):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")};function de(t,e){var n=t.document.documentElement,l=se(t).on("dragstart.drag",null);e&&(l.on("click.drag",ce,!0),setTimeout((function(){l.on("click.drag",null)}),0)),"onselectstart"in n?l.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}var fe=function(t,e,n){t.prototype=e.prototype=n,n.constructor=t};function pe(t,e){var n=Object.create(t.prototype);for(var l in e)n[l]=e[l];return n}function me(){}var ve=.7,ge=1/ve,ye="\\s*([+-]?\\d+)\\s*",be="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",xe="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",we=/^#([0-9a-f]{3,8})$/,_e=new RegExp("^rgb\\("+[ye,ye,ye]+"\\)$"),Me=new RegExp("^rgb\\("+[xe,xe,xe]+"\\)$"),Se=new RegExp("^rgba\\("+[ye,ye,ye,be]+"\\)$"),Te=new RegExp("^rgba\\("+[xe,xe,xe,be]+"\\)$"),Ee=new RegExp("^hsl\\("+[be,xe,xe]+"\\)$"),Ae=new RegExp("^hsla\\("+[be,xe,xe,be]+"\\)$"),Ce={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Oe(){return this.rgb().formatHex()}function Le(){return Ve(this).formatHsl()}function Pe(){return this.rgb().formatRgb()}function Re(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=we.exec(t))?(n=e[1].length,e=parseInt(e[1],16),6===n?ke(e):3===n?new je(e>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):8===n?Ie(e>>24&255,e>>16&255,e>>8&255,(255&e)/255):4===n?Ie(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|240&e,((15&e)<<4|15&e)/255):null):(e=_e.exec(t))?new je(e[1],e[2],e[3],1):(e=Me.exec(t))?new je(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=Se.exec(t))?Ie(e[1],e[2],e[3],e[4]):(e=Te.exec(t))?Ie(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=Ee.exec(t))?Ue(e[1],e[2]/100,e[3]/100,1):(e=Ae.exec(t))?Ue(e[1],e[2]/100,e[3]/100,e[4]):Ce.hasOwnProperty(t)?ke(Ce[t]):"transparent"===t?new je(NaN,NaN,NaN,0):null}function ke(t){return new je(t>>16&255,t>>8&255,255&t,1)}function Ie(t,e,n,l){return l<=0&&(t=e=n=NaN),new je(t,e,n,l)}function De(t){return t instanceof me||(t=Re(t)),t?(t=t.rgb(),new je(t.r,t.g,t.b,t.opacity)):new je}function Ne(t,e,n,l){return 1===arguments.length?De(t):new je(t,e,n,null==l?1:l)}function je(t,e,n,l){this.r=+t,this.g=+e,this.b=+n,this.opacity=+l}function Be(){return"#"+Fe(this.r)+Fe(this.g)+Fe(this.b)}function ze(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(1===t?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function Fe(t){return t=Math.max(0,Math.min(255,Math.round(t)||0)),(t<16?"0":"")+t.toString(16)}function Ue(t,e,n,l){return l<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new Ge(t,e,n,l)}function Ve(t){if(t instanceof Ge)return new Ge(t.h,t.s,t.l,t.opacity);if(t instanceof me||(t=Re(t)),!t)return new Ge;if(t instanceof Ge)return t;t=t.rgb();var e=t.r/255,n=t.g/255,l=t.b/255,i=Math.min(e,n,l),r=Math.max(e,n,l),o=NaN,u=r-i,a=(r+i)/2;return u?(o=e===r?(n-l)/u+6*(n<l):n===r?(l-e)/u+2:(e-n)/u+4,u/=a<.5?r+i:2-r-i,o*=60):u=a>0&&a<1?0:o,new Ge(o,u,a,t.opacity)}function He(t,e,n,l){return 1===arguments.length?Ve(t):new Ge(t,e,n,null==l?1:l)}function Ge(t,e,n,l){this.h=+t,this.s=+e,this.l=+n,this.opacity=+l}function We(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}function $e(t,e,n,l,i){var r=t*t,o=r*t;return((1-3*t+3*r-o)*e+(4-6*r+3*o)*n+(1+3*t+3*r-3*o)*l+o*i)/6}fe(me,Re,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:Oe,formatHex:Oe,formatHsl:Le,formatRgb:Pe,toString:Pe}),fe(je,Ne,pe(me,{brighter:function(t){return t=null==t?ge:Math.pow(ge,t),new je(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?ve:Math.pow(ve,t),new je(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Be,formatHex:Be,formatRgb:ze,toString:ze})),fe(Ge,He,pe(me,{brighter:function(t){return t=null==t?ge:Math.pow(ge,t),new Ge(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?ve:Math.pow(ve,t),new Ge(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,l=n+(n<.5?n:1-n)*e,i=2*n-l;return new je(We(t>=240?t-240:t+120,i,l),We(t,i,l),We(t<120?t+240:t-120,i,l),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(1===t?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var qe=function(t){var e=t.length-1;return function(n){var l=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),i=t[l],r=t[l+1],o=l>0?t[l-1]:2*i-r,u=l<e-1?t[l+2]:2*r-i;return $e((n-l/e)*e,o,i,r,u)}},Xe=function(t){var e=t.length;return function(n){var l=Math.floor(((n%=1)<0?++n:n)*e),i=t[(l+e-1)%e],r=t[l%e],o=t[(l+1)%e],u=t[(l+2)%e];return $e((n-l/e)*e,i,r,o,u)}},Ye=t=>()=>t;function Ze(t,e){return function(n){return t+n*e}}function Je(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(l){return Math.pow(t+l*e,n)}}function Ke(t){return 1===(t=+t)?Qe:function(e,n){return n-e?Je(e,n,t):Ye(isNaN(e)?n:e)}}function Qe(t,e){var n=e-t;return n?Ze(t,n):Ye(isNaN(t)?e:t)}var tn=function t(e){var n=Ke(e);function l(t,e){var l=n((t=Ne(t)).r,(e=Ne(e)).r),i=n(t.g,e.g),r=n(t.b,e.b),o=Qe(t.opacity,e.opacity);return function(e){return t.r=l(e),t.g=i(e),t.b=r(e),t.opacity=o(e),t+""}}return l.gamma=t,l}(1);function en(t){return function(e){var n,l,i=e.length,r=new Array(i),o=new Array(i),u=new Array(i);for(n=0;n<i;++n)l=Ne(e[n]),r[n]=l.r||0,o[n]=l.g||0,u[n]=l.b||0;return r=t(r),o=t(o),u=t(u),l.opacity=1,function(t){return l.r=r(t),l.g=o(t),l.b=u(t),l+""}}}en(qe),en(Xe);var nn=function(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}},ln=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,rn=new RegExp(ln.source,"g");function on(t){return function(){return t}}function un(t){return function(e){return t(e)+""}}var an,sn,cn=function(t,e){var n,l,i,r=ln.lastIndex=rn.lastIndex=0,o=-1,u=[],a=[];t+="",e+="";while((n=ln.exec(t))&&(l=rn.exec(e)))(i=l.index)>r&&(i=e.slice(r,i),u[o]?u[o]+=i:u[++o]=i),(n=n[0])===(l=l[0])?u[o]?u[o]+=l:u[++o]=l:(u[++o]=null,a.push({i:o,x:nn(n,l)})),r=rn.lastIndex;return r<e.length&&(i=e.slice(r),u[o]?u[o]+=i:u[++o]=i),u.length<2?a[0]?un(a[0].x):on(e):(e=a.length,function(t){for(var n,l=0;l<e;++l)u[(n=a[l]).i]=n.x(t);return u.join("")})},hn=function(t){let e;while(e=t.sourceEvent)t=e;return t},dn=function(t,e){if(t=hn(t),void 0===e&&(e=t.currentTarget),e){var n=e.ownerSVGElement||e;if(n.createSVGPoint){var l=n.createSVGPoint();return l.x=t.clientX,l.y=t.clientY,l=l.matrixTransform(e.getScreenCTM().inverse()),[l.x,l.y]}if(e.getBoundingClientRect){var i=e.getBoundingClientRect();return[t.clientX-i.left-e.clientLeft,t.clientY-i.top-e.clientTop]}}return[t.pageX,t.pageY]},fn=0,pn=0,mn=0,vn=1e3,gn=0,yn=0,bn=0,xn="object"===typeof performance&&performance.now?performance:Date,wn="object"===typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function _n(){return yn||(wn(Mn),yn=xn.now()+bn)}function Mn(){yn=0}function Sn(){this._call=this._time=this._next=null}function Tn(t,e,n){var l=new Sn;return l.restart(t,e,n),l}function En(){_n(),++fn;var t,e=an;while(e)(t=yn-e._time)>=0&&e._call.call(null,t),e=e._next;--fn}function An(){yn=(gn=xn.now())+bn,fn=pn=0;try{En()}finally{fn=0,On(),yn=0}}function Cn(){var t=xn.now(),e=t-gn;e>vn&&(bn-=e,gn=t)}function On(){var t,e,n=an,l=1/0;while(n)n._call?(l>n._time&&(l=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:an=e);sn=t,Ln(l)}function Ln(t){if(!fn){pn&&(pn=clearTimeout(pn));var e=t-yn;e>24?(t<1/0&&(pn=setTimeout(An,t-xn.now()-bn)),mn&&(mn=clearInterval(mn))):(mn||(gn=xn.now(),mn=setInterval(Cn,vn)),fn=1,wn(An))}}Sn.prototype=Tn.prototype={constructor:Sn,restart:function(t,e,n){if("function"!==typeof t)throw new TypeError("callback is not a function");n=(null==n?_n():+n)+(null==e?0:+e),this._next||sn===this||(sn?sn._next=this:an=this,sn=this),this._call=t,this._time=n,Ln()},stop:function(){this._call&&(this._call=null,this._time=1/0,Ln())}};var Pn=function(t,e,n){var l=new Sn;return e=null==e?0:+e,l.restart(n=>{l.stop(),t(n+e)},e,n),l},Rn=s("start","end","cancel","interrupt"),kn=[],In=0,Dn=1,Nn=2,jn=3,Bn=4,zn=5,Fn=6,Un=function(t,e,n,l,i,r){var o=t.__transition;if(o){if(n in o)return}else t.__transition={};Wn(t,n,{name:e,index:l,group:i,on:Rn,tween:kn,time:r.time,delay:r.delay,duration:r.duration,ease:r.ease,timer:null,state:In})};function Vn(t,e){var n=Gn(t,e);if(n.state>In)throw new Error("too late; already scheduled");return n}function Hn(t,e){var n=Gn(t,e);if(n.state>jn)throw new Error("too late; already running");return n}function Gn(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function Wn(t,e,n){var l,i=t.__transition;function r(t){n.state=Dn,n.timer.restart(o,n.delay,n.time),n.delay<=t&&o(t-n.delay)}function o(r){var s,c,h,d;if(n.state!==Dn)return a();for(s in i)if(d=i[s],d.name===n.name){if(d.state===jn)return Pn(o);d.state===Bn?(d.state=Fn,d.timer.stop(),d.on.call("interrupt",t,t.__data__,d.index,d.group),delete i[s]):+s<e&&(d.state=Fn,d.timer.stop(),d.on.call("cancel",t,t.__data__,d.index,d.group),delete i[s])}if(Pn((function(){n.state===jn&&(n.state=Bn,n.timer.restart(u,n.delay,n.time),u(r))})),n.state=Nn,n.on.call("start",t,t.__data__,n.index,n.group),n.state===Nn){for(n.state=jn,l=new Array(h=n.tween.length),s=0,c=-1;s<h;++s)(d=n.tween[s].value.call(t,t.__data__,n.index,n.group))&&(l[++c]=d);l.length=c+1}}function u(e){var i=e<n.duration?n.ease.call(null,e/n.duration):(n.timer.restart(a),n.state=zn,1),r=-1,o=l.length;while(++r<o)l[r].call(t,i);n.state===zn&&(n.on.call("end",t,t.__data__,n.index,n.group),a())}function a(){for(var l in n.state=Fn,n.timer.stop(),delete i[e],i)return;delete t.__transition}i[e]=n,n.timer=Tn(r,0,n.time)}var $n,qn=function(t,e){var n,l,i,r=t.__transition,o=!0;if(r){for(i in e=null==e?null:e+"",r)(n=r[i]).name===e?(l=n.state>Nn&&n.state<zn,n.state=Fn,n.timer.stop(),n.on.call(l?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete r[i]):o=!1;o&&delete t.__transition}},Xn=function(t){return this.each((function(){qn(this,t)}))},Yn=180/Math.PI,Zn={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Jn=function(t,e,n,l,i,r){var o,u,a;return(o=Math.sqrt(t*t+e*e))&&(t/=o,e/=o),(a=t*n+e*l)&&(n-=t*a,l-=e*a),(u=Math.sqrt(n*n+l*l))&&(n/=u,l/=u,a/=u),t*l<e*n&&(t=-t,e=-e,a=-a,o=-o),{translateX:i,translateY:r,rotate:Math.atan2(e,t)*Yn,skewX:Math.atan(a)*Yn,scaleX:o,scaleY:u}};function Kn(t){const e=new("function"===typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?Zn:Jn(e.a,e.b,e.c,e.d,e.e,e.f)}function Qn(t){return null==t?Zn:($n||($n=document.createElementNS("http://www.w3.org/2000/svg","g")),$n.setAttribute("transform",t),(t=$n.transform.baseVal.consolidate())?(t=t.matrix,Jn(t.a,t.b,t.c,t.d,t.e,t.f)):Zn)}function tl(t,e,n,l){function i(t){return t.length?t.pop()+" ":""}function r(t,l,i,r,o,u){if(t!==i||l!==r){var a=o.push("translate(",null,e,null,n);u.push({i:a-4,x:nn(t,i)},{i:a-2,x:nn(l,r)})}else(i||r)&&o.push("translate("+i+e+r+n)}function o(t,e,n,r){t!==e?(t-e>180?e+=360:e-t>180&&(t+=360),r.push({i:n.push(i(n)+"rotate(",null,l)-2,x:nn(t,e)})):e&&n.push(i(n)+"rotate("+e+l)}function u(t,e,n,r){t!==e?r.push({i:n.push(i(n)+"skewX(",null,l)-2,x:nn(t,e)}):e&&n.push(i(n)+"skewX("+e+l)}function a(t,e,n,l,r,o){if(t!==n||e!==l){var u=r.push(i(r)+"scale(",null,",",null,")");o.push({i:u-4,x:nn(t,n)},{i:u-2,x:nn(e,l)})}else 1===n&&1===l||r.push(i(r)+"scale("+n+","+l+")")}return function(e,n){var l=[],i=[];return e=t(e),n=t(n),r(e.translateX,e.translateY,n.translateX,n.translateY,l,i),o(e.rotate,n.rotate,l,i),u(e.skewX,n.skewX,l,i),a(e.scaleX,e.scaleY,n.scaleX,n.scaleY,l,i),e=n=null,function(t){var e,n=-1,r=i.length;while(++n<r)l[(e=i[n]).i]=e.x(t);return l.join("")}}}var el=tl(Kn,"px, ","px)","deg)"),nl=tl(Qn,", ",")",")");function ll(t,e){var n,l;return function(){var i=Hn(this,t),r=i.tween;if(r!==n){l=n=r;for(var o=0,u=l.length;o<u;++o)if(l[o].name===e){l=l.slice(),l.splice(o,1);break}}i.tween=l}}function il(t,e,n){var l,i;if("function"!==typeof n)throw new Error;return function(){var r=Hn(this,t),o=r.tween;if(o!==l){i=(l=o).slice();for(var u={name:e,value:n},a=0,s=i.length;a<s;++a)if(i[a].name===e){i[a]=u;break}a===s&&i.push(u)}r.tween=i}}var rl=function(t,e){var n=this._id;if(t+="",arguments.length<2){for(var l,i=Gn(this.node(),n).tween,r=0,o=i.length;r<o;++r)if((l=i[r]).name===t)return l.value;return null}return this.each((null==e?ll:il)(n,t,e))};function ol(t,e,n){var l=t._id;return t.each((function(){var t=Hn(this,l);(t.value||(t.value={}))[e]=n.apply(this,arguments)})),function(t){return Gn(t,l).value[e]}}var ul=function(t,e){var n;return("number"===typeof e?nn:e instanceof Re?tn:(n=Re(e))?(e=n,tn):cn)(t,e)};function al(t){return function(){this.removeAttribute(t)}}function sl(t){return function(){this.removeAttributeNS(t.space,t.local)}}function cl(t,e,n){var l,i,r=n+"";return function(){var o=this.getAttribute(t);return o===r?null:o===l?i:i=e(l=o,n)}}function hl(t,e,n){var l,i,r=n+"";return function(){var o=this.getAttributeNS(t.space,t.local);return o===r?null:o===l?i:i=e(l=o,n)}}function dl(t,e,n){var l,i,r;return function(){var o,u,a=n(this);if(null!=a)return o=this.getAttribute(t),u=a+"",o===u?null:o===l&&u===i?r:(i=u,r=e(l=o,a));this.removeAttribute(t)}}function fl(t,e,n){var l,i,r;return function(){var o,u,a=n(this);if(null!=a)return o=this.getAttributeNS(t.space,t.local),u=a+"",o===u?null:o===l&&u===i?r:(i=u,r=e(l=o,a));this.removeAttributeNS(t.space,t.local)}}var pl=function(t,e){var n=J(t),l="transform"===n?nl:ul;return this.attrTween(t,"function"===typeof e?(n.local?fl:dl)(n,l,ol(this,"attr."+t,e)):null==e?(n.local?sl:al)(n):(n.local?hl:cl)(n,l,e))};function ml(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function vl(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function gl(t,e){var n,l;function i(){var i=e.apply(this,arguments);return i!==l&&(n=(l=i)&&vl(t,i)),n}return i._value=e,i}function yl(t,e){var n,l;function i(){var i=e.apply(this,arguments);return i!==l&&(n=(l=i)&&ml(t,i)),n}return i._value=e,i}var bl=function(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==e)return this.tween(n,null);if("function"!==typeof e)throw new Error;var l=J(t);return this.tween(n,(l.local?gl:yl)(l,e))};function xl(t,e){return function(){Vn(this,t).delay=+e.apply(this,arguments)}}function wl(t,e){return e=+e,function(){Vn(this,t).delay=e}}var _l=function(t){var e=this._id;return arguments.length?this.each(("function"===typeof t?xl:wl)(e,t)):Gn(this.node(),e).delay};function Ml(t,e){return function(){Hn(this,t).duration=+e.apply(this,arguments)}}function Sl(t,e){return e=+e,function(){Hn(this,t).duration=e}}var Tl=function(t){var e=this._id;return arguments.length?this.each(("function"===typeof t?Ml:Sl)(e,t)):Gn(this.node(),e).duration};function El(t,e){if("function"!==typeof e)throw new Error;return function(){Hn(this,t).ease=e}}var Al=function(t){var e=this._id;return arguments.length?this.each(El(e,t)):Gn(this.node(),e).ease};function Cl(t,e){return function(){var n=e.apply(this,arguments);if("function"!==typeof n)throw new Error;Hn(this,t).ease=n}}var Ol=function(t){if("function"!==typeof t)throw new Error;return this.each(Cl(this._id,t))},Ll=function(t){"function"!==typeof t&&(t=y(t));for(var e=this._groups,n=e.length,l=new Array(n),i=0;i<n;++i)for(var r,o=e[i],u=o.length,a=l[i]=[],s=0;s<u;++s)(r=o[s])&&t.call(r,r.__data__,s,o)&&a.push(r);return new ri(l,this._parents,this._name,this._id)},Pl=function(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,l=e.length,i=n.length,r=Math.min(l,i),o=new Array(l),u=0;u<r;++u)for(var a,s=e[u],c=n[u],h=s.length,d=o[u]=new Array(h),f=0;f<h;++f)(a=s[f]||c[f])&&(d[f]=a);for(;u<l;++u)o[u]=e[u];return new ri(o,this._parents,this._name,this._id)};function Rl(t){return(t+"").trim().split(/^|\s+/).every((function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||"start"===t}))}function kl(t,e,n){var l,i,r=Rl(e)?Vn:Hn;return function(){var o=r(this,t),u=o.on;u!==l&&(i=(l=u).copy()).on(e,n),o.on=i}}var Il=function(t,e){var n=this._id;return arguments.length<2?Gn(this.node(),n).on.on(t):this.each(kl(n,t,e))};function Dl(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}var Nl=function(){return this.on("end.remove",Dl(this._id))},jl=function(t){var e=this._name,n=this._id;"function"!==typeof t&&(t=h(t));for(var l=this._groups,i=l.length,r=new Array(i),o=0;o<i;++o)for(var u,a,s=l[o],c=s.length,d=r[o]=new Array(c),f=0;f<c;++f)(u=s[f])&&(a=t.call(u,u.__data__,f,s))&&("__data__"in u&&(a.__data__=u.__data__),d[f]=a,Un(d[f],e,n,f,d,Gn(u,n)));return new ri(r,this._parents,e,n)},Bl=function(t){var e=this._name,n=this._id;"function"!==typeof t&&(t=m(t));for(var l=this._groups,i=l.length,r=[],o=[],u=0;u<i;++u)for(var a,s=l[u],c=s.length,h=0;h<c;++h)if(a=s[h]){for(var d,f=t.call(a,a.__data__,h,s),p=Gn(a,n),v=0,g=f.length;v<g;++v)(d=f[v])&&Un(d,e,n,v,f,p);r.push(f),o.push(a)}return new ri(r,o,e,n)},zl=ae.prototype.constructor,Fl=function(){return new zl(this._groups,this._parents)};function Ul(t,e){var n,l,i;return function(){var r=ct(this,t),o=(this.style.removeProperty(t),ct(this,t));return r===o?null:r===n&&o===l?i:i=e(n=r,l=o)}}function Vl(t){return function(){this.style.removeProperty(t)}}function Hl(t,e,n){var l,i,r=n+"";return function(){var o=ct(this,t);return o===r?null:o===l?i:i=e(l=o,n)}}function Gl(t,e,n){var l,i,r;return function(){var o=ct(this,t),u=n(this),a=u+"";return null==u&&(this.style.removeProperty(t),a=u=ct(this,t)),o===a?null:o===l&&a===i?r:(i=a,r=e(l=o,u))}}function Wl(t,e){var n,l,i,r,o="style."+e,u="end."+o;return function(){var a=Hn(this,t),s=a.on,c=null==a.value[o]?r||(r=Vl(e)):void 0;s===n&&i===c||(l=(n=s).copy()).on(u,i=c),a.on=l}}var $l=function(t,e,n){var l="transform"===(t+="")?el:ul;return null==e?this.styleTween(t,Ul(t,l)).on("end.style."+t,Vl(t)):"function"===typeof e?this.styleTween(t,Gl(t,l,ol(this,"style."+t,e))).each(Wl(this._id,t)):this.styleTween(t,Hl(t,l,e),n).on("end.style."+t,null)};function ql(t,e,n){return function(l){this.style.setProperty(t,e.call(this,l),n)}}function Xl(t,e,n){var l,i;function r(){var r=e.apply(this,arguments);return r!==i&&(l=(i=r)&&ql(t,r,n)),l}return r._value=e,r}var Yl=function(t,e,n){var l="style."+(t+="");if(arguments.length<2)return(l=this.tween(l))&&l._value;if(null==e)return this.tween(l,null);if("function"!==typeof e)throw new Error;return this.tween(l,Xl(t,e,null==n?"":n))};function Zl(t){return function(){this.textContent=t}}function Jl(t){return function(){var e=t(this);this.textContent=null==e?"":e}}var Kl=function(t){return this.tween("text","function"===typeof t?Jl(ol(this,"text",t)):Zl(null==t?"":t+""))};function Ql(t){return function(e){this.textContent=t.call(this,e)}}function ti(t){var e,n;function l(){var l=t.apply(this,arguments);return l!==n&&(e=(n=l)&&Ql(l)),e}return l._value=t,l}var ei=function(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(null==t)return this.tween(e,null);if("function"!==typeof t)throw new Error;return this.tween(e,ti(t))},ni=function(){for(var t=this._name,e=this._id,n=ui(),l=this._groups,i=l.length,r=0;r<i;++r)for(var o,u=l[r],a=u.length,s=0;s<a;++s)if(o=u[s]){var c=Gn(o,e);Un(o,t,n,s,u,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new ri(l,this._parents,t,n)},li=function(){var t,e,n=this,l=n._id,i=n.size();return new Promise((function(r,o){var u={value:o},a={value:function(){0===--i&&r()}};n.each((function(){var n=Hn(this,l),i=n.on;i!==t&&(e=(t=i).copy(),e._.cancel.push(u),e._.interrupt.push(u),e._.end.push(a)),n.on=e})),0===i&&r()}))},ii=0;function ri(t,e,n,l){this._groups=t,this._parents=e,this._name=n,this._id=l}function oi(t){return ae().transition(t)}function ui(){return++ii}var ai=ae.prototype;function si(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}ri.prototype=oi.prototype={constructor:ri,select:jl,selectAll:Bl,filter:Ll,merge:Pl,selection:Fl,transition:ni,call:ai.call,nodes:ai.nodes,node:ai.node,size:ai.size,empty:ai.empty,each:ai.each,on:Il,attr:pl,attrTween:bl,style:$l,styleTween:Yl,text:Kl,textTween:ei,remove:Nl,tween:rl,delay:_l,duration:Tl,ease:Al,easeVarying:Ol,end:li,[Symbol.iterator]:ai[Symbol.iterator]};var ci={time:null,delay:0,duration:250,ease:si};function hi(t,e){var n;while(!(n=t.__transition)||!(n=n[e]))if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}var di=function(t){var e,n;t instanceof ri?(e=t._id,t=t._name):(e=ui(),(n=ci).time=_n(),t=null==t?null:t+"");for(var l=this._groups,i=l.length,r=0;r<i;++r)for(var o,u=l[r],a=u.length,s=0;s<a;++s)(o=u[s])&&Un(o,t,e,s,u,n||hi(o,e));return new ri(l,this._parents,t,e)};ae.prototype.interrupt=Xn,ae.prototype.transition=di;const{abs:fi,max:pi,min:mi}=Math;function vi(t){return[+t[0],+t[1]]}function gi(t){return[vi(t[0]),vi(t[1])]}["w","e"].map(yi),["n","s"].map(yi),["n","w","e","s","nw","ne","sw","se"].map(yi);function yi(t){return{type:t}}var bi=1e-12;function xi(t){return((t=Math.exp(t))+1/t)/2}function wi(t){return((t=Math.exp(t))-1/t)/2}function _i(t){return((t=Math.exp(2*t))-1)/(t+1)}var Mi=function t(e,n,l){function i(t,i){var r,o,u=t[0],a=t[1],s=t[2],c=i[0],h=i[1],d=i[2],f=c-u,p=h-a,m=f*f+p*p;if(m<bi)o=Math.log(d/s)/e,r=function(t){return[u+t*f,a+t*p,s*Math.exp(e*t*o)]};else{var v=Math.sqrt(m),g=(d*d-s*s+l*m)/(2*s*n*v),y=(d*d-s*s-l*m)/(2*d*n*v),b=Math.log(Math.sqrt(g*g+1)-g),x=Math.log(Math.sqrt(y*y+1)-y);o=(x-b)/e,r=function(t){var l=t*o,i=xi(b),r=s/(n*v)*(i*_i(e*l+b)-wi(b));return[u+r*f,a+r*p,s*i/xi(e*l+b)]}}return r.duration=1e3*o*e/Math.SQRT2,r}return i.rho=function(e){var n=Math.max(.001,+e),l=n*n,i=l*l;return t(n,l,i)},i}(Math.SQRT2,2,4),Si=t=>()=>t;function Ti(t,{sourceEvent:e,target:n,transform:l,dispatch:i}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},transform:{value:l,enumerable:!0,configurable:!0},_:{value:i}})}function Ei(t,e,n){this.k=t,this.x=e,this.y=n}Ei.prototype={constructor:Ei,scale:function(t){return 1===t?this:new Ei(this.k*t,this.x,this.y)},translate:function(t,e){return 0===t&0===e?this:new Ei(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Ai=new Ei(1,0,0);function Ci(t){while(!t.__zoom)if(!(t=t.parentNode))return Ai;return t.__zoom}function Oi(t){t.stopImmediatePropagation()}Ci.prototype=Ei.prototype;var Li=function(t){t.preventDefault(),t.stopImmediatePropagation()};function Pi(t){return(!t.ctrlKey||"wheel"===t.type)&&!t.button}function Ri(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t,t.hasAttribute("viewBox")?(t=t.viewBox.baseVal,[[t.x,t.y],[t.x+t.width,t.y+t.height]]):[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]):[[0,0],[t.clientWidth,t.clientHeight]]}function ki(){return this.__zoom||Ai}function Ii(t){return-t.deltaY*(1===t.deltaMode?.05:t.deltaMode?1:.002)*(t.ctrlKey?10:1)}function Di(){return navigator.maxTouchPoints||"ontouchstart"in this}function Ni(t,e,n){var l=t.invertX(e[0][0])-n[0][0],i=t.invertX(e[1][0])-n[1][0],r=t.invertY(e[0][1])-n[0][1],o=t.invertY(e[1][1])-n[1][1];return t.translate(i>l?(l+i)/2:Math.min(0,l)||Math.max(0,i),o>r?(r+o)/2:Math.min(0,r)||Math.max(0,o))}var ji=function(){var t,e,n,l=Pi,i=Ri,r=Ni,o=Ii,u=Di,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],h=250,d=Mi,f=s("start","zoom","end"),p=500,m=150,v=0,g=10;function y(t){t.property("__zoom",ki).on("wheel.zoom",T).on("mousedown.zoom",E).on("dblclick.zoom",A).filter(u).on("touchstart.zoom",C).on("touchmove.zoom",O).on("touchend.zoom touchcancel.zoom",L).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function b(t,e){return e=Math.max(a[0],Math.min(a[1],e)),e===t.k?t:new Ei(e,t.x,t.y)}function x(t,e,n){var l=e[0]-n[0]*t.k,i=e[1]-n[1]*t.k;return l===t.x&&i===t.y?t:new Ei(t.k,l,i)}function w(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function _(t,e,n,l){t.on("start.zoom",(function(){M(this,arguments).event(l).start()})).on("interrupt.zoom end.zoom",(function(){M(this,arguments).event(l).end()})).tween("zoom",(function(){var t=this,r=arguments,o=M(t,r).event(l),u=i.apply(t,r),a=null==n?w(u):"function"===typeof n?n.apply(t,r):n,s=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),c=t.__zoom,h="function"===typeof e?e.apply(t,r):e,f=d(c.invert(a).concat(s/c.k),h.invert(a).concat(s/h.k));return function(t){if(1===t)t=h;else{var e=f(t),n=s/e[2];t=new Ei(n,a[0]-e[0]*n,a[1]-e[1]*n)}o.zoom(null,t)}}))}function M(t,e,n){return!n&&t.__zooming||new S(t,e)}function S(t,e){this.that=t,this.args=e,this.active=0,this.sourceEvent=null,this.extent=i.apply(t,e),this.taps=0}function T(t,...e){if(l.apply(this,arguments)){var n=M(this,e).event(t),i=this.__zoom,u=Math.max(a[0],Math.min(a[1],i.k*Math.pow(2,o.apply(this,arguments)))),s=dn(t);if(n.wheel)n.mouse[0][0]===s[0]&&n.mouse[0][1]===s[1]||(n.mouse[1]=i.invert(n.mouse[0]=s)),clearTimeout(n.wheel);else{if(i.k===u)return;n.mouse=[s,i.invert(s)],qn(this),n.start()}Li(t),n.wheel=setTimeout(h,m),n.zoom("mouse",r(x(b(i,u),n.mouse[0],n.mouse[1]),n.extent,c))}function h(){n.wheel=null,n.end()}}function E(t,...e){if(!n&&l.apply(this,arguments)){var i=M(this,e,!0).event(t),o=se(t.view).on("mousemove.zoom",d,!0).on("mouseup.zoom",f,!0),u=dn(t,a),a=t.currentTarget,s=t.clientX,h=t.clientY;he(t.view),Oi(t),i.mouse=[u,this.__zoom.invert(u)],qn(this),i.start()}function d(t){if(Li(t),!i.moved){var e=t.clientX-s,n=t.clientY-h;i.moved=e*e+n*n>v}i.event(t).zoom("mouse",r(x(i.that.__zoom,i.mouse[0]=dn(t,a),i.mouse[1]),i.extent,c))}function f(t){o.on("mousemove.zoom mouseup.zoom",null),de(t.view,i.moved),Li(t),i.event(t).end()}}function A(t,...e){if(l.apply(this,arguments)){var n=this.__zoom,o=dn(t.changedTouches?t.changedTouches[0]:t,this),u=n.invert(o),a=n.k*(t.shiftKey?.5:2),s=r(x(b(n,a),o,u),i.apply(this,e),c);Li(t),h>0?se(this).transition().duration(h).call(_,s,o,t):se(this).call(y.transform,s,o,t)}}function C(n,...i){if(l.apply(this,arguments)){var r,o,u,a,s=n.touches,c=s.length,h=M(this,i,n.changedTouches.length===c).event(n);for(Oi(n),o=0;o<c;++o)u=s[o],a=dn(u,this),a=[a,this.__zoom.invert(a),u.identifier],h.touch0?h.touch1||h.touch0[2]===a[2]||(h.touch1=a,h.taps=0):(h.touch0=a,r=!0,h.taps=1+!!t);t&&(t=clearTimeout(t)),r&&(h.taps<2&&(e=a[0],t=setTimeout((function(){t=null}),p)),qn(this),h.start())}}function O(t,...e){if(this.__zooming){var n,l,i,o,u=M(this,e).event(t),a=t.changedTouches,s=a.length;for(Li(t),n=0;n<s;++n)l=a[n],i=dn(l,this),u.touch0&&u.touch0[2]===l.identifier?u.touch0[0]=i:u.touch1&&u.touch1[2]===l.identifier&&(u.touch1[0]=i);if(l=u.that.__zoom,u.touch1){var h=u.touch0[0],d=u.touch0[1],f=u.touch1[0],p=u.touch1[1],m=(m=f[0]-h[0])*m+(m=f[1]-h[1])*m,v=(v=p[0]-d[0])*v+(v=p[1]-d[1])*v;l=b(l,Math.sqrt(m/v)),i=[(h[0]+f[0])/2,(h[1]+f[1])/2],o=[(d[0]+p[0])/2,(d[1]+p[1])/2]}else{if(!u.touch0)return;i=u.touch0[0],o=u.touch0[1]}u.zoom("touch",r(x(l,i,o),u.extent,c))}}function L(t,...l){if(this.__zooming){var i,r,o=M(this,l).event(t),u=t.changedTouches,a=u.length;for(Oi(t),n&&clearTimeout(n),n=setTimeout((function(){n=null}),p),i=0;i<a;++i)r=u[i],o.touch0&&o.touch0[2]===r.identifier?delete o.touch0:o.touch1&&o.touch1[2]===r.identifier&&delete o.touch1;if(o.touch1&&!o.touch0&&(o.touch0=o.touch1,delete o.touch1),o.touch0)o.touch0[1]=this.__zoom.invert(o.touch0[0]);else if(o.end(),2===o.taps&&(r=dn(r,this),Math.hypot(e[0]-r[0],e[1]-r[1])<g)){var s=se(this).on("dblclick.zoom");s&&s.apply(this,arguments)}}}return y.transform=function(t,e,n,l){var i=t.selection?t.selection():t;i.property("__zoom",ki),t!==i?_(t,e,n,l):i.interrupt().each((function(){M(this,arguments).event(l).start().zoom(null,"function"===typeof e?e.apply(this,arguments):e).end()}))},y.scaleBy=function(t,e,n,l){y.scaleTo(t,(function(){var t=this.__zoom.k,n="function"===typeof e?e.apply(this,arguments):e;return t*n}),n,l)},y.scaleTo=function(t,e,n,l){y.transform(t,(function(){var t=i.apply(this,arguments),l=this.__zoom,o=null==n?w(t):"function"===typeof n?n.apply(this,arguments):n,u=l.invert(o),a="function"===typeof e?e.apply(this,arguments):e;return r(x(b(l,a),o,u),t,c)}),n,l)},y.translateBy=function(t,e,n,l){y.transform(t,(function(){return r(this.__zoom.translate("function"===typeof e?e.apply(this,arguments):e,"function"===typeof n?n.apply(this,arguments):n),i.apply(this,arguments),c)}),null,l)},y.translateTo=function(t,e,n,l,o){y.transform(t,(function(){var t=i.apply(this,arguments),o=this.__zoom,u=null==l?w(t):"function"===typeof l?l.apply(this,arguments):l;return r(Ai.translate(u[0],u[1]).scale(o.k).translate("function"===typeof e?-e.apply(this,arguments):-e,"function"===typeof n?-n.apply(this,arguments):-n),t,c)}),l,o)},S.prototype={event:function(t){return t&&(this.sourceEvent=t),this},start:function(){return 1===++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,e){return this.mouse&&"mouse"!==t&&(this.mouse[1]=e.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=e.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=e.invert(this.touch1[0])),this.that.__zoom=e,this.emit("zoom"),this},end:function(){return 0===--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){var e=se(this.that).datum();f.call(t,this.that,new Ti(t,{sourceEvent:this.sourceEvent,target:y,type:t,transform:this.that.__zoom,dispatch:f}),e)}},y.wheelDelta=function(t){return arguments.length?(o="function"===typeof t?t:Si(+t),y):o},y.filter=function(t){return arguments.length?(l="function"===typeof t?t:Si(!!t),y):l},y.touchable=function(t){return arguments.length?(u="function"===typeof t?t:Si(!!t),y):u},y.extent=function(t){return arguments.length?(i="function"===typeof t?t:Si([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),y):i},y.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],y):[a[0],a[1]]},y.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],y):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},y.constrain=function(t){return arguments.length?(r=t,y):r},y.duration=function(t){return arguments.length?(h=+t,y):h},y.interpolate=function(t){return arguments.length?(d=t,y):d},y.on=function(){var t=f.on.apply(f,arguments);return t===f?y:t},y.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,y):Math.sqrt(v)},y.tapDistance=function(t){return arguments.length?(g=+t,y):g},y};n.d(e,"a",(function(){return dn})),n.d(e,"b",(function(){return se})),n.d(e,"c",(function(){return ji})),n.d(e,"d",(function(){return Ai}))},"56ef":function(t,e,n){var l=n("d066"),i=n("241c"),r=n("7418"),o=n("825a");t.exports=l("Reflect","ownKeys")||function(t){var e=i.f(o(t)),n=r.f;return n?e.concat(n(t)):e}},5803:function(t,e,n){},5899:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},"58a8":function(t,e,n){var l=n("1d80"),i=n("5899"),r="["+i+"]",o=RegExp("^"+r+r+"*"),u=RegExp(r+r+"*$"),a=function(t){return function(e){var n=String(l(e));return 1&t&&(n=n.replace(o,"")),2&t&&(n=n.replace(u,"")),n}};t.exports={start:a(1),end:a(2),trim:a(3)}},"58df":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var l=n("2b0e");function i(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return l["a"].extend({mixins:e})}},5963:function(t,e,n){"use strict";n("99af"),n("d81d"),n("a9e3");var l=n("2909"),i=n("ade3"),r=n("5530"),o=(n("33e9"),n("9a18")),u=n("80d2");e["a"]=o["a"].extend({name:"v-range-slider",props:{value:{type:Array,default:function(){return[0,0]}}},data:function(){return{activeThumb:null,lazyValue:this.value}},computed:{classes:function(){return Object(r["a"])(Object(r["a"])({},o["a"].options.computed.classes.call(this)),{},{"v-input--range-slider":!0})},internalValue:{get:function(){return this.lazyValue},set:function(t){var e=this,n=t.map((function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return e.roundValue(Math.min(Math.max(t,e.minValue),e.maxValue))}));if(n[0]>n[1]||n[1]<n[0]){if(null!==this.activeThumb){var l=1===this.activeThumb?0:1,i=this.$refs["thumb_".concat(l)];i.focus()}n=[n[1],n[0]]}this.lazyValue=n,Object(u["i"])(n,this.value)||this.$emit("input",n),this.validate()}},inputWidth:function(){var t=this;return this.internalValue.map((function(e){return(t.roundValue(e)-t.minValue)/(t.maxValue-t.minValue)*100}))}},methods:{getTrackStyle:function(t,e){var n,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=this.vertical?this.$vuetify.rtl?"top":"bottom":this.$vuetify.rtl?"right":"left",u=this.vertical?"height":"width",a="calc(".concat(t,"% + ").concat(l,"px)"),s="calc(".concat(e,"% + ").concat(r,"px)");return n={transition:this.trackTransition},Object(i["a"])(n,o,a),Object(i["a"])(n,u,s),n},getIndexOfClosestValue:function(t,e){return Math.abs(t[0]-e)<Math.abs(t[1]-e)?0:1},genInput:function(){var t=this;return Object(u["g"])(2).map((function(e){var n=o["a"].options.methods.genInput.call(t);return n.data=n.data||{},n.data.attrs=n.data.attrs||{},n.data.attrs.value=t.internalValue[e],n.data.attrs.id="input-".concat(e?"max":"min","-").concat(t._uid),n}))},genTrackContainer:function(){var t=this,e=[],n=this.isDisabled?10:0,i=[{class:"v-slider__track-background",color:this.computedTrackColor,styles:[0,this.inputWidth[0],0,-n]},{class:this.isDisabled?"v-slider__track-background":"v-slider__track-fill",color:this.isDisabled?this.computedTrackColor:this.computedTrackFillColor,styles:[this.inputWidth[0],Math.abs(this.inputWidth[1]-this.inputWidth[0]),n,-2*n]},{class:"v-slider__track-background",color:this.computedTrackColor,styles:[this.inputWidth[1],Math.abs(100-this.inputWidth[1]),n,-n]}];return this.$vuetify.rtl&&i.reverse(),e.push.apply(e,Object(l["a"])(i.map((function(e){return t.$createElement("div",t.setBackgroundColor(e.color,{staticClass:e.class,style:t.getTrackStyle.apply(t,Object(l["a"])(e.styles))}))})))),this.$createElement("div",{staticClass:"v-slider__track-container",ref:"track"},e)},genChildren:function(){var t=this;return[this.genInput(),this.genTrackContainer(),this.genSteps(),Object(u["g"])(2).map((function(e){var n=t.internalValue[e],l=function(n){t.isActive=!0,t.activeThumb=e,t.onSliderMouseDown(n)},i=function(n){t.isFocused=!0,t.activeThumb=e,t.$emit("focus",n)},r=function(e){t.isFocused=!1,t.activeThumb=null,t.$emit("blur",e)},o=t.inputWidth[e],u=t.isActive&&t.activeThumb===e,a=t.isFocused&&t.activeThumb===e;return t.genThumbContainer(n,o,u,a,l,i,r,"thumb_".concat(e))}))]},reevaluateSelected:function(t){this.activeThumb=this.getIndexOfClosestValue(this.internalValue,t);var e="thumb_".concat(this.activeThumb),n=this.$refs[e];n.focus()},onSliderMouseDown:function(t){var e=this.parseMouseMove(t),n=e.value;this.reevaluateSelected(n),this.oldValue=this.internalValue,this.keyPressed=2,this.isActive=!0;var l=!u["x"]||{passive:!0,capture:!0},i=!!u["x"]&&{passive:!0};"touches"in t?(this.app.addEventListener("touchmove",this.onMouseMove,i),Object(u["a"])(this.app,"touchend",this.onSliderMouseUp,l)):(this.onMouseMove(t),this.app.addEventListener("mousemove",this.onMouseMove,i),Object(u["a"])(this.app,"mouseup",this.onSliderMouseUp,l)),this.$emit("start",this.internalValue)},onSliderClick:function(t){if(!this.isActive){if(this.noClick)return void(this.noClick=!1);var e=this.parseMouseMove(t),n=e.value,l=e.isInsideTrack;l&&this.reevaluateSelected(n),this.setInternalValue(n),this.$emit("change",this.internalValue)}},onMouseMove:function(t){var e=this.parseMouseMove(t),n=e.value,l=e.isInsideTrack;l&&null===this.activeThumb&&(this.activeThumb=this.getIndexOfClosestValue(this.internalValue,n)),this.setInternalValue(n)},onKeyDown:function(t){if(null!==this.activeThumb){var e=this.parseKeyDown(t,this.internalValue[this.activeThumb]);null!=e&&(this.setInternalValue(e),this.$emit("change",this.internalValue))}},setInternalValue:function(t){var e=this;this.internalValue=this.internalValue.map((function(n,l){return l===e.activeThumb?t:Number(n)}))}}})},"5a34":function(t,e,n){var l=n("44e7");t.exports=function(t){if(l(t))throw TypeError("The method doesn't accept regular expressions");return t}},"5a89":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return Hf})),n.d(e,"b",(function(){return Im})),n.d(e,"c",(function(){return f})),n.d(e,"d",(function(){return di})),n.d(e,"e",(function(){return jl})),n.d(e,"f",(function(){return Vf})),n.d(e,"g",(function(){return ln})),n.d(e,"h",(function(){return Rc})),n.d(e,"i",(function(){return Ec})),n.d(e,"j",(function(){return i})),n.d(e,"k",(function(){return Li})),n.d(e,"l",(function(){return _d})),n.d(e,"m",(function(){return $n})),n.d(e,"n",(function(){return qi})),n.d(e,"o",(function(){return gn})),n.d(e,"p",(function(){return Xp})),n.d(e,"q",(function(){return qn})),n.d(e,"r",(function(){return Wi})),n.d(e,"s",(function(){return td})),n.d(e,"t",(function(){return Jp})),n.d(e,"u",(function(){return r})),n.d(e,"v",(function(){return nr})),n.d(e,"w",(function(){return Vi})),n.d(e,"x",(function(){return an})),n.d(e,"y",(function(){return xn})),n.d(e,"z",(function(){return Gs})),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"===typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype===!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");const e=Object(t);for(let n=1;n<arguments.length;n++){const t=arguments[n];if(void 0!==t&&null!==t)for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e});const l="119",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},r={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},o=0,u=1,a=2,s=1,c=2,h=3,d=0,f=1,p=2,m=1,v=0,g=1,y=2,b=3,x=4,w=5,_=100,M=101,S=102,T=103,E=104,A=200,C=201,O=202,L=203,P=204,R=205,k=206,I=207,D=208,N=209,j=210,B=0,z=1,F=2,U=3,V=4,H=5,G=6,W=7,$=0,q=1,X=2,Y=0,Z=1,J=2,K=3,Q=4,tt=5,et=300,nt=301,lt=302,it=303,rt=304,ot=306,ut=307,at=1e3,st=1001,ct=1002,ht=1003,dt=1004,ft=1005,pt=1006,mt=1007,vt=1008,gt=1009,yt=1010,bt=1011,xt=1012,wt=1013,_t=1014,Mt=1015,St=1016,Tt=1017,Et=1018,At=1019,Ct=1020,Ot=1021,Lt=1022,Pt=1023,Rt=1024,kt=1025,It=Pt,Dt=1026,Nt=1027,jt=1028,Bt=1029,zt=1030,Ft=1031,Ut=1032,Vt=1033,Ht=33776,Gt=33777,Wt=33778,$t=33779,qt=35840,Xt=35841,Yt=35842,Zt=35843,Jt=36196,Kt=37492,Qt=37496,te=37808,ee=37809,ne=37810,le=37811,ie=37812,re=37813,oe=37814,ue=37815,ae=37816,se=37817,ce=37818,he=37819,de=37820,fe=37821,pe=36492,me=37840,ve=37841,ge=37842,ye=37843,be=37844,xe=37845,we=37846,_e=37847,Me=37848,Se=37849,Te=37850,Ee=37851,Ae=37852,Ce=37853,Oe=2200,Le=2201,Pe=2202,Re=2300,ke=2301,Ie=2302,De=2400,Ne=2401,je=2402,Be=2500,ze=2501,Fe=0,Ue=3e3,Ve=3001,He=3007,Ge=3002,We=3003,$e=3004,qe=3005,Xe=3006,Ye=3200,Ze=3201,Je=0,Ke=1,Qe=7680,tn=519,en=35044,nn=35048;function ln(){}Object.assign(ln.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners,l=n[t];if(void 0!==l){const t=l.indexOf(e);-1!==t&&l.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners,n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,l=e.length;n<l;n++)e[n].call(this,t)}}});const rn=[];for(let e=0;e<256;e++)rn[e]=(e<16?"0":"")+e.toString(16);let on=1234567;const un={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,l=4294967295*Math.random()|0,i=rn[255&t]+rn[t>>8&255]+rn[t>>16&255]+rn[t>>24&255]+"-"+rn[255&e]+rn[e>>8&255]+"-"+rn[e>>16&15|64]+rn[e>>24&255]+"-"+rn[63&n|128]+rn[n>>8&255]+"-"+rn[n>>16&255]+rn[n>>24&255]+rn[255&l]+rn[l>>8&255]+rn[l>>16&255]+rn[l>>24&255];return i.toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,l,i){return l+(t-e)*(i-l)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(6*t-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(on=t%2147483647),on=16807*on%2147483647,(on-1)/2147483646},degToRad:function(t){return t*un.DEG2RAD},radToDeg:function(t){return t*un.RAD2DEG},isPowerOfTwo:function(t){return 0===(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,l,i){const r=Math.cos,o=Math.sin,u=r(n/2),a=o(n/2),s=r((e+l)/2),c=o((e+l)/2),h=r((e-l)/2),d=o((e-l)/2),f=r((l-e)/2),p=o((l-e)/2);switch(i){case"XYX":t.set(u*c,a*h,a*d,u*s);break;case"YZY":t.set(a*d,u*c,a*h,u*s);break;case"ZXZ":t.set(a*h,a*d,u*c,u*s);break;case"XZX":t.set(u*c,a*p,a*f,u*s);break;case"YXY":t.set(a*f,u*c,a*p,u*s);break;case"ZYZ":t.set(a*p,a*f,u*c,u*s);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};function an(t=0,e=0){this.x=t,this.y=e}function sn(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}let cn;Object.defineProperties(an.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(an.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){const e=this.x,n=this.y,l=t.elements;return this.x=l[0]*e+l[3]*n+l[6],this.y=l[1]*e+l[4]*n+l[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){const t=Math.atan2(-this.y,-this.x)+Math.PI;return t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){const n=Math.cos(e),l=Math.sin(e),i=this.x-t.x,r=this.y-t.y;return this.x=i*n-r*l+t.x,this.y=i*l+r*n+t.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}}),Object.assign(sn.prototype,{isMatrix3:!0,set:function(t,e,n,l,i,r,o,u,a){const s=this.elements;return s[0]=t,s[1]=l,s[2]=o,s[3]=e,s[4]=i,s[5]=u,s[6]=n,s[7]=r,s[8]=a,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},extractBasis:function(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this},setFromMatrix4:function(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){const n=t.elements,l=e.elements,i=this.elements,r=n[0],o=n[3],u=n[6],a=n[1],s=n[4],c=n[7],h=n[2],d=n[5],f=n[8],p=l[0],m=l[3],v=l[6],g=l[1],y=l[4],b=l[7],x=l[2],w=l[5],_=l[8];return i[0]=r*p+o*g+u*x,i[3]=r*m+o*y+u*w,i[6]=r*v+o*b+u*_,i[1]=a*p+s*g+c*x,i[4]=a*m+s*y+c*w,i[7]=a*v+s*b+c*_,i[2]=h*p+d*g+f*x,i[5]=h*m+d*y+f*w,i[8]=h*v+d*b+f*_,this},multiplyScalar:function(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){const t=this.elements,e=t[0],n=t[1],l=t[2],i=t[3],r=t[4],o=t[5],u=t[6],a=t[7],s=t[8];return e*r*s-e*o*a-n*i*s+n*o*u+l*i*a-l*r*u},getInverse:function(t,e){void 0!==e&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=t.elements,l=this.elements,i=n[0],r=n[1],o=n[2],u=n[3],a=n[4],s=n[5],c=n[6],h=n[7],d=n[8],f=d*a-s*h,p=s*c-d*u,m=h*u-a*c,v=i*f+r*p+o*m;if(0===v)return this.set(0,0,0,0,0,0,0,0,0);const g=1/v;return l[0]=f*g,l[1]=(o*h-d*r)*g,l[2]=(s*r-o*a)*g,l[3]=p*g,l[4]=(d*i-o*c)*g,l[5]=(o*u-s*i)*g,l[6]=m*g,l[7]=(r*c-h*i)*g,l[8]=(a*i-r*u)*g,this},transpose:function(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,l,i,r,o){const u=Math.cos(i),a=Math.sin(i);this.set(n*u,n*a,-n*(u*r+a*o)+r+t,-l*a,l*u,-l*(-a*r+u*o)+o+e,0,0,1)},scale:function(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){const e=Math.cos(t),n=Math.sin(t),l=this.elements,i=l[0],r=l[3],o=l[6],u=l[1],a=l[4],s=l[7];return l[0]=e*i+n*u,l[3]=e*r+n*a,l[6]=e*o+n*s,l[1]=-n*i+e*u,l[4]=-n*r+e*a,l[7]=-n*o+e*s,this},translate:function(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){const e=this.elements,n=t.elements;for(let l=0;l<9;l++)if(e[l]!==n[l])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});const hn={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===cn&&(cn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),cn.width=t.width,cn.height=t.height;const n=cn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=cn}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let dn=0;function fn(t,e,n,l,i,r,o,u,a,s){Object.defineProperty(this,"id",{value:dn++}),this.uuid=un.generateUUID(),this.name="",this.image=void 0!==t?t:fn.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:fn.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:st,this.wrapT=void 0!==l?l:st,this.magFilter=void 0!==i?i:pt,this.minFilter=void 0!==r?r:vt,this.anisotropy=void 0!==a?a:1,this.format=void 0!==o?o:Pt,this.internalFormat=null,this.type=void 0!==u?u:gt,this.offset=new an(0,0),this.repeat=new an(1,1),this.center=new an(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new sn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==s?s:Ue,this.version=0,this.onUpdate=null}function pn(t=0,e=0,n=0,l=1){this.x=t,this.y=e,this.z=n,this.w=l}function mn(t,e,n){this.width=t,this.height=e,this.scissor=new pn(0,0,t,e),this.scissorTest=!1,this.viewport=new pn(0,0,t,e),n=n||{},this.texture=new fn(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:pt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function vn(t,e,n){mn.call(this,t,e,n),this.samples=4}function gn(t=0,e=0,n=0,l=1){this._x=t,this._y=e,this._z=n,this._w=l}fn.DEFAULT_IMAGE=void 0,fn.DEFAULT_MAPPING=et,fn.prototype=Object.assign(Object.create(ln.prototype),{constructor:fn,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"===typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const l=this.image;if(void 0===l.uuid&&(l.uuid=un.generateUUID()),!e&&void 0===t.images[l.uuid]){let e;if(Array.isArray(l)){e=[];for(let t=0,n=l.length;t<n;t++)e.push(hn.getDataURL(l[t]))}else e=hn.getDataURL(l);t.images[l.uuid]={uuid:l.uuid,url:e}}n.image=l.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==et)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case at:t.x=t.x-Math.floor(t.x);break;case st:t.x=t.x<0?0:1;break;case ct:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case at:t.y=t.y-Math.floor(t.y);break;case st:t.y=t.y<0?0:1;break;case ct:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(fn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.defineProperties(pn.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign(pn.prototype,{isVector4:!0,set:function(t,e,n,l){return this.x=t,this.y=e,this.z=n,this.w=l,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){const e=this.x,n=this.y,l=this.z,i=this.w,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*l+r[12]*i,this.y=r[1]*e+r[5]*n+r[9]*l+r[13]*i,this.z=r[2]*e+r[6]*n+r[10]*l+r[14]*i,this.w=r[3]*e+r[7]*n+r[11]*l+r[15]*i,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){let e,n,l,i;const r=.01,o=.1,u=t.elements,a=u[0],s=u[4],c=u[8],h=u[1],d=u[5],f=u[9],p=u[2],m=u[6],v=u[10];if(Math.abs(s-h)<r&&Math.abs(c-p)<r&&Math.abs(f-m)<r){if(Math.abs(s+h)<o&&Math.abs(c+p)<o&&Math.abs(f+m)<o&&Math.abs(a+d+v-3)<o)return this.set(1,0,0,0),this;e=Math.PI;const t=(a+1)/2,u=(d+1)/2,g=(v+1)/2,y=(s+h)/4,b=(c+p)/4,x=(f+m)/4;return t>u&&t>g?t<r?(n=0,l=.707106781,i=.707106781):(n=Math.sqrt(t),l=y/n,i=b/n):u>g?u<r?(n=.707106781,l=0,i=.707106781):(l=Math.sqrt(u),n=y/l,i=x/l):g<r?(n=.707106781,l=.707106781,i=0):(i=Math.sqrt(g),n=b/i,l=x/i),this.set(n,l,i,e),this}let g=Math.sqrt((m-f)*(m-f)+(c-p)*(c-p)+(h-s)*(h-s));return Math.abs(g)<.001&&(g=1),this.x=(m-f)/g,this.y=(c-p)/g,this.z=(h-s)/g,this.w=Math.acos((a+d+v-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}),mn.prototype=Object.assign(Object.create(ln.prototype),{constructor:mn,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),vn.prototype=Object.assign(Object.create(mn.prototype),{constructor:vn,isWebGLMultisampleRenderTarget:!0,copy:function(t){return mn.prototype.copy.call(this,t),this.samples=t.samples,this}}),Object.assign(gn,{slerp:function(t,e,n,l){return n.copy(t).slerp(e,l)},slerpFlat:function(t,e,n,l,i,r,o){let u=n[l+0],a=n[l+1],s=n[l+2],c=n[l+3];const h=i[r+0],d=i[r+1],f=i[r+2],p=i[r+3];if(c!==p||u!==h||a!==d||s!==f){let t=1-o,e=u*h+a*d+s*f+c*p,n=e>=0?1:-1,l=1-e*e;if(l>Number.EPSILON){const i=Math.sqrt(l),r=Math.atan2(i,e*n);t=Math.sin(t*r)/i,o=Math.sin(o*r)/i}const i=o*n;if(u=u*t+h*i,a=a*t+d*i,s=s*t+f*i,c=c*t+p*i,t===1-o){const t=1/Math.sqrt(u*u+a*a+s*s+c*c);u*=t,a*=t,s*=t,c*=t}}t[e]=u,t[e+1]=a,t[e+2]=s,t[e+3]=c},multiplyQuaternionsFlat:function(t,e,n,l,i,r){const o=n[l],u=n[l+1],a=n[l+2],s=n[l+3],c=i[r],h=i[r+1],d=i[r+2],f=i[r+3];return t[e]=o*f+s*c+u*d-a*h,t[e+1]=u*f+s*h+a*c-o*d,t[e+2]=a*f+s*d+o*h-u*c,t[e+3]=s*f-o*c-u*h-a*d,t}}),Object.defineProperties(gn.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this._onChangeCallback()}}}),Object.assign(gn.prototype,{isQuaternion:!0,set:function(t,e,n,l){return this._x=t,this._y=e,this._z=n,this._w=l,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,l=t._y,i=t._z,r=t.order,o=Math.cos,u=Math.sin,a=o(n/2),s=o(l/2),c=o(i/2),h=u(n/2),d=u(l/2),f=u(i/2);switch(r){case"XYZ":this._x=h*s*c+a*d*f,this._y=a*d*c-h*s*f,this._z=a*s*f+h*d*c,this._w=a*s*c-h*d*f;break;case"YXZ":this._x=h*s*c+a*d*f,this._y=a*d*c-h*s*f,this._z=a*s*f-h*d*c,this._w=a*s*c+h*d*f;break;case"ZXY":this._x=h*s*c-a*d*f,this._y=a*d*c+h*s*f,this._z=a*s*f+h*d*c,this._w=a*s*c-h*d*f;break;case"ZYX":this._x=h*s*c-a*d*f,this._y=a*d*c+h*s*f,this._z=a*s*f-h*d*c,this._w=a*s*c+h*d*f;break;case"YZX":this._x=h*s*c+a*d*f,this._y=a*d*c+h*s*f,this._z=a*s*f-h*d*c,this._w=a*s*c-h*d*f;break;case"XZY":this._x=h*s*c-a*d*f,this._y=a*d*c-h*s*f,this._z=a*s*f+h*d*c,this._w=a*s*c+h*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==e&&this._onChangeCallback(),this},setFromAxisAngle:function(t,e){const n=e/2,l=Math.sin(n);return this._x=t.x*l,this._y=t.y*l,this._z=t.z*l,this._w=Math.cos(n),this._onChangeCallback(),this},setFromRotationMatrix:function(t){const e=t.elements,n=e[0],l=e[4],i=e[8],r=e[1],o=e[5],u=e[9],a=e[2],s=e[6],c=e[10],h=n+o+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(s-u)*t,this._y=(i-a)*t,this._z=(r-l)*t}else if(n>o&&n>c){const t=2*Math.sqrt(1+n-o-c);this._w=(s-u)/t,this._x=.25*t,this._y=(l+r)/t,this._z=(i+a)/t}else if(o>c){const t=2*Math.sqrt(1+o-n-c);this._w=(i-a)/t,this._x=(l+r)/t,this._y=.25*t,this._z=(u+s)/t}else{const t=2*Math.sqrt(1+c-n-o);this._w=(r-l)/t,this._x=(i+a)/t,this._y=(u+s)/t,this._z=.25*t}return this._onChangeCallback(),this},setFromUnitVectors:function(t,e){const n=1e-6;let l=t.dot(e)+1;return l<n?(l=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=l):(this._x=0,this._y=-t.z,this._z=t.y,this._w=l)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=l),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(un.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){const n=this.angleTo(t);if(0===n)return this;const l=Math.min(1,e/n);return this.slerp(t,l),this},identity:function(){return this.set(0,0,0,1)},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){const n=t._x,l=t._y,i=t._z,r=t._w,o=e._x,u=e._y,a=e._z,s=e._w;return this._x=n*s+r*o+l*a-i*u,this._y=l*s+r*u+i*o-n*a,this._z=i*s+r*a+n*u-l*o,this._w=r*s-n*o-l*u-i*a,this._onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,l=this._y,i=this._z,r=this._w;let o=r*t._w+n*t._x+l*t._y+i*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=n,this._y=l,this._z=i,this;const u=1-o*o;if(u<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*n+e*this._x,this._y=t*l+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const a=Math.sqrt(u),s=Math.atan2(a,o),c=Math.sin((1-e)*s)/a,h=Math.sin(e*s)/a;return this._w=r*c+this._w*h,this._x=n*c+this._x*h,this._y=l*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},fromBufferAttribute:function(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}});const yn=new xn,bn=new gn;function xn(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}Object.assign(xn.prototype,{isVector3:!0,set:function(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(bn.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(bn.setFromAxisAngle(t,e))},applyMatrix3:function(t){const e=this.x,n=this.y,l=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*l,this.y=i[1]*e+i[4]*n+i[7]*l,this.z=i[2]*e+i[5]*n+i[8]*l,this},applyNormalMatrix:function(t){return this.applyMatrix3(t).normalize()},applyMatrix4:function(t){const e=this.x,n=this.y,l=this.z,i=t.elements,r=1/(i[3]*e+i[7]*n+i[11]*l+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*l+i[12])*r,this.y=(i[1]*e+i[5]*n+i[9]*l+i[13])*r,this.z=(i[2]*e+i[6]*n+i[10]*l+i[14])*r,this},applyQuaternion:function(t){const e=this.x,n=this.y,l=this.z,i=t.x,r=t.y,o=t.z,u=t.w,a=u*e+r*l-o*n,s=u*n+o*e-i*l,c=u*l+i*n-r*e,h=-i*e-r*n-o*l;return this.x=a*u+h*-i+s*-o-c*-r,this.y=s*u+h*-r+c*-i-a*-o,this.z=c*u+h*-o+a*-r-s*-i,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){const e=this.x,n=this.y,l=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*l,this.y=i[1]*e+i[5]*n+i[9]*l,this.z=i[2]*e+i[6]*n+i[10]*l,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){const n=t.x,l=t.y,i=t.z,r=e.x,o=e.y,u=e.z;return this.x=l*u-i*o,this.y=i*r-n*u,this.z=n*o-l*r,this},projectOnVector:function(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)},projectOnPlane:function(t){return yn.copy(this).projectOnVector(t),this.sub(yn)},reflect:function(t){return this.sub(yn.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(un.clamp(n,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){const e=this.x-t.x,n=this.y-t.y,l=this.z-t.z;return e*e+n*n+l*l},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){const l=Math.sin(e)*t;return this.x=l*Math.sin(n),this.y=Math.cos(e)*t,this.z=l*Math.cos(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),l=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=l,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},setFromMatrix3Column:function(t,e){return this.fromArray(t.elements,3*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const wn=new xn,_n=new Cn,Mn=new xn(0,0,0),Sn=new xn(1,1,1),Tn=new xn,En=new xn,An=new xn;function Cn(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Cn.prototype,{isMatrix4:!0,set:function(t,e,n,l,i,r,o,u,a,s,c,h,d,f,p,m){const v=this.elements;return v[0]=t,v[4]=e,v[8]=n,v[12]=l,v[1]=i,v[5]=r,v[9]=o,v[13]=u,v[2]=a,v[6]=s,v[10]=c,v[14]=h,v[3]=d,v[7]=f,v[11]=p,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Cn).fromArray(this.elements)},copy:function(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(t){const e=this.elements,n=t.elements,l=1/wn.setFromMatrixColumn(t,0).length(),i=1/wn.setFromMatrixColumn(t,1).length(),r=1/wn.setFromMatrixColumn(t,2).length();return e[0]=n[0]*l,e[1]=n[1]*l,e[2]=n[2]*l,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*r,e[9]=n[9]*r,e[10]=n[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,l=t.y,i=t.z,r=Math.cos(n),o=Math.sin(n),u=Math.cos(l),a=Math.sin(l),s=Math.cos(i),c=Math.sin(i);if("XYZ"===t.order){const t=r*s,n=r*c,l=o*s,i=o*c;e[0]=u*s,e[4]=-u*c,e[8]=a,e[1]=n+l*a,e[5]=t-i*a,e[9]=-o*u,e[2]=i-t*a,e[6]=l+n*a,e[10]=r*u}else if("YXZ"===t.order){const t=u*s,n=u*c,l=a*s,i=a*c;e[0]=t+i*o,e[4]=l*o-n,e[8]=r*a,e[1]=r*c,e[5]=r*s,e[9]=-o,e[2]=n*o-l,e[6]=i+t*o,e[10]=r*u}else if("ZXY"===t.order){const t=u*s,n=u*c,l=a*s,i=a*c;e[0]=t-i*o,e[4]=-r*c,e[8]=l+n*o,e[1]=n+l*o,e[5]=r*s,e[9]=i-t*o,e[2]=-r*a,e[6]=o,e[10]=r*u}else if("ZYX"===t.order){const t=r*s,n=r*c,l=o*s,i=o*c;e[0]=u*s,e[4]=l*a-n,e[8]=t*a+i,e[1]=u*c,e[5]=i*a+t,e[9]=n*a-l,e[2]=-a,e[6]=o*u,e[10]=r*u}else if("YZX"===t.order){const t=r*u,n=r*a,l=o*u,i=o*a;e[0]=u*s,e[4]=i-t*c,e[8]=l*c+n,e[1]=c,e[5]=r*s,e[9]=-o*s,e[2]=-a*s,e[6]=n*c+l,e[10]=t-i*c}else if("XZY"===t.order){const t=r*u,n=r*a,l=o*u,i=o*a;e[0]=u*s,e[4]=-c,e[8]=a*s,e[1]=t*c+i,e[5]=r*s,e[9]=n*c-l,e[2]=l*c-n,e[6]=o*s,e[10]=i*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(Mn,t,Sn)},lookAt:function(t,e,n){const l=this.elements;return An.subVectors(t,e),0===An.lengthSq()&&(An.z=1),An.normalize(),Tn.crossVectors(n,An),0===Tn.lengthSq()&&(1===Math.abs(n.z)?An.x+=1e-4:An.z+=1e-4,An.normalize(),Tn.crossVectors(n,An)),Tn.normalize(),En.crossVectors(An,Tn),l[0]=Tn.x,l[4]=En.x,l[8]=An.x,l[1]=Tn.y,l[5]=En.y,l[9]=An.y,l[2]=Tn.z,l[6]=En.z,l[10]=An.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){const n=t.elements,l=e.elements,i=this.elements,r=n[0],o=n[4],u=n[8],a=n[12],s=n[1],c=n[5],h=n[9],d=n[13],f=n[2],p=n[6],m=n[10],v=n[14],g=n[3],y=n[7],b=n[11],x=n[15],w=l[0],_=l[4],M=l[8],S=l[12],T=l[1],E=l[5],A=l[9],C=l[13],O=l[2],L=l[6],P=l[10],R=l[14],k=l[3],I=l[7],D=l[11],N=l[15];return i[0]=r*w+o*T+u*O+a*k,i[4]=r*_+o*E+u*L+a*I,i[8]=r*M+o*A+u*P+a*D,i[12]=r*S+o*C+u*R+a*N,i[1]=s*w+c*T+h*O+d*k,i[5]=s*_+c*E+h*L+d*I,i[9]=s*M+c*A+h*P+d*D,i[13]=s*S+c*C+h*R+d*N,i[2]=f*w+p*T+m*O+v*k,i[6]=f*_+p*E+m*L+v*I,i[10]=f*M+p*A+m*P+v*D,i[14]=f*S+p*C+m*R+v*N,i[3]=g*w+y*T+b*O+x*k,i[7]=g*_+y*E+b*L+x*I,i[11]=g*M+y*A+b*P+x*D,i[15]=g*S+y*C+b*R+x*N,this},multiplyScalar:function(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},determinant:function(){const t=this.elements,e=t[0],n=t[4],l=t[8],i=t[12],r=t[1],o=t[5],u=t[9],a=t[13],s=t[2],c=t[6],h=t[10],d=t[14],f=t[3],p=t[7],m=t[11],v=t[15];return f*(+i*u*c-l*a*c-i*o*h+n*a*h+l*o*d-n*u*d)+p*(+e*u*d-e*a*h+i*r*h-l*r*d+l*a*s-i*u*s)+m*(+e*a*c-e*o*d-i*r*c+n*r*d+i*o*s-n*a*s)+v*(-l*o*s-e*u*c+e*o*h+l*r*c-n*r*h+n*u*s)},transpose:function(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(t,e,n){const l=this.elements;return t.isVector3?(l[12]=t.x,l[13]=t.y,l[14]=t.z):(l[12]=t,l[13]=e,l[14]=n),this},getInverse:function(t,e){void 0!==e&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,l=t.elements,i=l[0],r=l[1],o=l[2],u=l[3],a=l[4],s=l[5],c=l[6],h=l[7],d=l[8],f=l[9],p=l[10],m=l[11],v=l[12],g=l[13],y=l[14],b=l[15],x=f*y*h-g*p*h+g*c*m-s*y*m-f*c*b+s*p*b,w=v*p*h-d*y*h-v*c*m+a*y*m+d*c*b-a*p*b,_=d*g*h-v*f*h+v*s*m-a*g*m-d*s*b+a*f*b,M=v*f*c-d*g*c-v*s*p+a*g*p+d*s*y-a*f*y,S=i*x+r*w+o*_+u*M;if(0===S)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/S;return n[0]=x*T,n[1]=(g*p*u-f*y*u-g*o*m+r*y*m+f*o*b-r*p*b)*T,n[2]=(s*y*u-g*c*u+g*o*h-r*y*h-s*o*b+r*c*b)*T,n[3]=(f*c*u-s*p*u-f*o*h+r*p*h+s*o*m-r*c*m)*T,n[4]=w*T,n[5]=(d*y*u-v*p*u+v*o*m-i*y*m-d*o*b+i*p*b)*T,n[6]=(v*c*u-a*y*u-v*o*h+i*y*h+a*o*b-i*c*b)*T,n[7]=(a*p*u-d*c*u+d*o*h-i*p*h-a*o*m+i*c*m)*T,n[8]=_*T,n[9]=(v*f*u-d*g*u-v*r*m+i*g*m+d*r*b-i*f*b)*T,n[10]=(a*g*u-v*s*u+v*r*h-i*g*h-a*r*b+i*s*b)*T,n[11]=(d*s*u-a*f*u-d*r*h+i*f*h+a*r*m-i*s*m)*T,n[12]=M*T,n[13]=(d*g*o-v*f*o+v*r*p-i*g*p-d*r*y+i*f*y)*T,n[14]=(v*s*o-a*g*o-v*r*c+i*g*c+a*r*y-i*s*y)*T,n[15]=(a*f*o-d*s*o+d*r*c-i*f*c-a*r*p+i*s*p)*T,this},scale:function(t){const e=this.elements,n=t.x,l=t.y,i=t.z;return e[0]*=n,e[4]*=l,e[8]*=i,e[1]*=n,e[5]*=l,e[9]*=i,e[2]*=n,e[6]*=l,e[10]*=i,e[3]*=n,e[7]*=l,e[11]*=i,this},getMaxScaleOnAxis:function(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],l=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,l))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){const n=Math.cos(e),l=Math.sin(e),i=1-n,r=t.x,o=t.y,u=t.z,a=i*r,s=i*o;return this.set(a*r+n,a*o-l*u,a*u+l*o,0,a*o+l*u,s*o+n,s*u-l*r,0,a*u-l*o,s*u+l*r,i*u*u+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){const l=this.elements,i=e._x,r=e._y,o=e._z,u=e._w,a=i+i,s=r+r,c=o+o,h=i*a,d=i*s,f=i*c,p=r*s,m=r*c,v=o*c,g=u*a,y=u*s,b=u*c,x=n.x,w=n.y,_=n.z;return l[0]=(1-(p+v))*x,l[1]=(d+b)*x,l[2]=(f-y)*x,l[3]=0,l[4]=(d-b)*w,l[5]=(1-(h+v))*w,l[6]=(m+g)*w,l[7]=0,l[8]=(f+y)*_,l[9]=(m-g)*_,l[10]=(1-(h+p))*_,l[11]=0,l[12]=t.x,l[13]=t.y,l[14]=t.z,l[15]=1,this},decompose:function(t,e,n){const l=this.elements;let i=wn.set(l[0],l[1],l[2]).length(),r=wn.set(l[4],l[5],l[6]).length(),o=wn.set(l[8],l[9],l[10]).length();const u=this.determinant();u<0&&(i=-i),t.x=l[12],t.y=l[13],t.z=l[14],_n.copy(this);const a=1/i,s=1/r,c=1/o;return _n.elements[0]*=a,_n.elements[1]*=a,_n.elements[2]*=a,_n.elements[4]*=s,_n.elements[5]*=s,_n.elements[6]*=s,_n.elements[8]*=c,_n.elements[9]*=c,_n.elements[10]*=c,e.setFromRotationMatrix(_n),n.x=i,n.y=r,n.z=o,this},makePerspective:function(t,e,n,l,i,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,u=2*i/(e-t),a=2*i/(n-l),s=(e+t)/(e-t),c=(n+l)/(n-l),h=-(r+i)/(r-i),d=-2*r*i/(r-i);return o[0]=u,o[4]=0,o[8]=s,o[12]=0,o[1]=0,o[5]=a,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,n,l,i,r){const o=this.elements,u=1/(e-t),a=1/(n-l),s=1/(r-i),c=(e+t)*u,h=(n+l)*a,d=(r+i)*s;return o[0]=2*u,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2*a,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*s,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){const e=this.elements,n=t.elements;for(let l=0;l<16;l++)if(e[l]!==n[l])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}});const On=new Cn,Ln=new gn;function Pn(t=0,e=0,n=0,l=Pn.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=l}function Rn(){this.mask=1}Pn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Pn.DefaultOrder="XYZ",Object.defineProperties(Pn.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}}),Object.assign(Pn.prototype,{isEuler:!0,set:function(t,e,n,l){return this._x=t,this._y=e,this._z=n,this._order=l||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){const l=un.clamp,i=t.elements,r=i[0],o=i[4],u=i[8],a=i[1],s=i[5],c=i[9],h=i[2],d=i[6],f=i[10];switch(e=e||this._order,e){case"XYZ":this._y=Math.asin(l(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,s),this._z=0);break;case"YXZ":this._x=Math.asin(-l(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(u,f),this._z=Math.atan2(a,s)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(l(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,s)):(this._y=0,this._z=Math.atan2(a,r));break;case"ZYX":this._y=Math.asin(-l(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(a,r)):(this._x=0,this._z=Math.atan2(-o,s));break;case"YZX":this._z=Math.asin(l(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,s),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(u,f));break;case"XZY":this._z=Math.asin(-l(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,s),this._y=Math.atan2(u,r)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this},setFromQuaternion:function(t,e,n){return On.makeRotationFromQuaternion(t),this.setFromRotationMatrix(On,e,n)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(t){return Ln.setFromEuler(this),this.setFromQuaternion(Ln,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new xn(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}}),Object.assign(Rn.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!==(this.mask&t.mask)}});let kn=0;const In=new xn,Dn=new gn,Nn=new Cn,jn=new xn,Bn=new xn,zn=new xn,Fn=new gn,Un=new xn(1,0,0),Vn=new xn(0,1,0),Hn=new xn(0,0,1),Gn={type:"added"},Wn={type:"removed"};function $n(){Object.defineProperty(this,"id",{value:kn++}),this.uuid=un.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$n.DefaultUp.clone();const t=new xn,e=new Pn,n=new gn,l=new xn(1,1,1);function i(){n.setFromEuler(e,!1)}function r(){e.setFromQuaternion(n,void 0,!1)}e._onChange(i),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:l},modelViewMatrix:{value:new Cn},normalMatrix:{value:new sn}}),this.matrix=new Cn,this.matrixWorld=new Cn,this.matrixAutoUpdate=$n.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Rn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function qn(){$n.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}$n.DefaultUp=new xn(0,1,0),$n.DefaultMatrixAutoUpdate=!0,$n.prototype=Object.assign(Object.create(ln.prototype),{constructor:$n,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Dn.setFromAxisAngle(t,e),this.quaternion.multiply(Dn),this},rotateOnWorldAxis:function(t,e){return Dn.setFromAxisAngle(t,e),this.quaternion.premultiply(Dn),this},rotateX:function(t){return this.rotateOnAxis(Un,t)},rotateY:function(t){return this.rotateOnAxis(Vn,t)},rotateZ:function(t){return this.rotateOnAxis(Hn,t)},translateOnAxis:function(t,e){return In.copy(t).applyQuaternion(this.quaternion),this.position.add(In.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Un,t)},translateY:function(t){return this.translateOnAxis(Vn,t)},translateZ:function(t){return this.translateOnAxis(Hn,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Nn.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?jn.copy(t):jn.set(t,e,n);const l=this.parent;this.updateWorldMatrix(!0,!1),Bn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Nn.lookAt(Bn,jn,this.up):Nn.lookAt(jn,Bn,this.up),this.quaternion.setFromRotationMatrix(Nn),l&&(Nn.extractRotation(l.matrixWorld),Dn.setFromRotationMatrix(Nn),this.quaternion.premultiply(Dn.inverse()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Gn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Wn)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),Nn.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Nn.multiply(t.parent.matrixWorld)),t.applyMatrix4(Nn),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,l=this.children.length;n<l;n++){const l=this.children[n],i=l.getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new xn),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new gn),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Bn,t,zn),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new xn),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Bn,Fn,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new xn),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,l=e.length;n<l;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,l=e.length;n<l;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,l=e.length;n<l;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"===typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const l={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){l.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,l=n.length;e<l;e++){const l=n[e];i(t.shapes,l)}else i(t.shapes,n)}}if(void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,l=this.material.length;n<l;n++)e.push(i(t.materials,this.material[n]));l.material=e}else l.material=i(t.materials,this.material);if(this.children.length>0){l.children=[];for(let e=0;e<this.children.length;e++)l.children.push(this.children[e].toJSON(t).object)}if(e){const e=r(t.geometries),l=r(t.materials),i=r(t.textures),o=r(t.images),u=r(t.shapes);e.length>0&&(n.geometries=e),l.length>0&&(n.materials=l),i.length>0&&(n.textures=i),o.length>0&&(n.images=o),u.length>0&&(n.shapes=u)}return n.object=l,n;function r(t){const e=[];for(const n in t){const l=t[n];delete l.metadata,e.push(l)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}),qn.prototype=Object.assign(Object.create($n.prototype),{constructor:qn,isScene:!0,copy:function(t,e){return $n.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){const e=$n.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Xn=[new xn,new xn,new xn,new xn,new xn,new xn,new xn,new xn],Yn=new xn,Zn=new ul,Jn=new xn,Kn=new xn,Qn=new xn,tl=new xn,el=new xn,nl=new xn,ll=new xn,il=new xn,rl=new xn,ol=new xn;function ul(t,e){this.min=void 0!==t?t:new xn(1/0,1/0,1/0),this.max=void 0!==e?e:new xn(-1/0,-1/0,-1/0)}function al(t,e,n,l,i){for(let r=0,o=t.length-3;r<=o;r+=3){ol.fromArray(t,r);const o=i.x*Math.abs(ol.x)+i.y*Math.abs(ol.y)+i.z*Math.abs(ol.z),u=e.dot(ol),a=n.dot(ol),s=l.dot(ol);if(Math.max(-Math.max(u,a,s),Math.min(u,a,s))>o)return!1}return!0}Object.assign(ul.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){let e=1/0,n=1/0,l=1/0,i=-1/0,r=-1/0,o=-1/0;for(let u=0,a=t.length;u<a;u+=3){const a=t[u],s=t[u+1],c=t[u+2];a<e&&(e=a),s<n&&(n=s),c<l&&(l=c),a>i&&(i=a),s>r&&(r=s),c>o&&(o=c)}return this.min.set(e,n,l),this.max.set(i,r,o),this},setFromBufferAttribute:function(t){let e=1/0,n=1/0,l=1/0,i=-1/0,r=-1/0,o=-1/0;for(let u=0,a=t.count;u<a;u++){const a=t.getX(u),s=t.getY(u),c=t.getZ(u);a<e&&(e=a),s<n&&(n=s),c<l&&(l=c),a>i&&(i=a),s>r&&(r=s),c>o&&(o=c)}return this.min.set(e,n,l),this.max.set(i,r,o),this},setFromPoints:function(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){const n=Yn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new xn),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new xn),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Zn.copy(e.boundingBox),Zn.applyMatrix4(t.matrixWorld),this.union(Zn));const n=t.children;for(let l=0,i=n.length;l<i;l++)this.expandByObject(n[l]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new xn),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,Yn),Yn.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(ll),il.subVectors(this.max,ll),Jn.subVectors(t.a,ll),Kn.subVectors(t.b,ll),Qn.subVectors(t.c,ll),tl.subVectors(Kn,Jn),el.subVectors(Qn,Kn),nl.subVectors(Jn,Qn);let e=[0,-tl.z,tl.y,0,-el.z,el.y,0,-nl.z,nl.y,tl.z,0,-tl.x,el.z,0,-el.x,nl.z,0,-nl.x,-tl.y,tl.x,0,-el.y,el.x,0,-nl.y,nl.x,0];return!!al(e,Jn,Kn,Qn,il)&&(e=[1,0,0,0,1,0,0,0,1],!!al(e,Jn,Kn,Qn,il)&&(rl.crossVectors(tl,el),e=[rl.x,rl.y,rl.z],al(e,Jn,Kn,Qn,il)))},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new xn),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){const e=Yn.copy(t).clamp(this.min,this.max);return e.sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(Yn).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()||(Xn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Xn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Xn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Xn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Xn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Xn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Xn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Xn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Xn)),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});const sl=new ul;function cl(t,e){this.center=void 0!==t?t:new xn,this.radius=void 0!==e?e:-1}Object.assign(cl.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){const n=this.center;void 0!==e?n.copy(e):sl.setFromPoints(t).getCenter(n);let l=0;for(let i=0,r=t.length;i<r;i++)l=Math.max(l,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(l),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},isEmpty:function(){return this.radius<0},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new xn),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new ul),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});const hl=new xn,dl=new xn,fl=new xn,pl=new xn,ml=new xn,vl=new xn,gl=new xn;function yl(t,e){this.origin=void 0!==t?t:new xn,this.direction=void 0!==e?e:new xn(0,0,-1)}Object.assign(yl.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new xn),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,hl)),this},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new xn),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){const e=hl.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(hl.copy(this.direction).multiplyScalar(e).add(this.origin),hl.distanceToSquared(t))},distanceSqToSegment:function(t,e,n,l){dl.copy(t).add(e).multiplyScalar(.5),fl.copy(e).sub(t).normalize(),pl.copy(this.origin).sub(dl);const i=.5*t.distanceTo(e),r=-this.direction.dot(fl),o=pl.dot(this.direction),u=-pl.dot(fl),a=pl.lengthSq(),s=Math.abs(1-r*r);let c,h,d,f;if(s>0)if(c=r*u-o,h=r*o-u,f=i*s,c>=0)if(h>=-f)if(h<=f){const t=1/s;c*=t,h*=t,d=c*(c+r*h+2*o)+h*(r*c+h+2*u)+a}else h=i,c=Math.max(0,-(r*h+o)),d=-c*c+h*(h+2*u)+a;else h=-i,c=Math.max(0,-(r*h+o)),d=-c*c+h*(h+2*u)+a;else h<=-f?(c=Math.max(0,-(-r*i+o)),h=c>0?-i:Math.min(Math.max(-i,-u),i),d=-c*c+h*(h+2*u)+a):h<=f?(c=0,h=Math.min(Math.max(-i,-u),i),d=h*(h+2*u)+a):(c=Math.max(0,-(r*i+o)),h=c>0?i:Math.min(Math.max(-i,-u),i),d=-c*c+h*(h+2*u)+a);else h=r>0?-i:i,c=Math.max(0,-(r*h+o)),d=-c*c+h*(h+2*u)+a;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),l&&l.copy(fl).multiplyScalar(h).add(dl),d},intersectSphere:function(t,e){hl.subVectors(t.center,this.origin);const n=hl.dot(this.direction),l=hl.dot(hl)-n*n,i=t.radius*t.radius;if(l>i)return null;const r=Math.sqrt(i-l),o=n-r,u=n+r;return o<0&&u<0?null:o<0?this.at(u,e):this.at(o,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)},intersectsPlane:function(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;const n=t.normal.dot(this.direction);return n*e<0},intersectBox:function(t,e){let n,l,i,r,o,u;const a=1/this.direction.x,s=1/this.direction.y,c=1/this.direction.z,h=this.origin;return a>=0?(n=(t.min.x-h.x)*a,l=(t.max.x-h.x)*a):(n=(t.max.x-h.x)*a,l=(t.min.x-h.x)*a),s>=0?(i=(t.min.y-h.y)*s,r=(t.max.y-h.y)*s):(i=(t.max.y-h.y)*s,r=(t.min.y-h.y)*s),n>r||i>l?null:((i>n||n!==n)&&(n=i),(r<l||l!==l)&&(l=r),c>=0?(o=(t.min.z-h.z)*c,u=(t.max.z-h.z)*c):(o=(t.max.z-h.z)*c,u=(t.min.z-h.z)*c),n>u||o>l?null:((o>n||n!==n)&&(n=o),(u<l||l!==l)&&(l=u),l<0?null:this.at(n>=0?n:l,e)))},intersectsBox:function(t){return null!==this.intersectBox(t,hl)},intersectTriangle:function(t,e,n,l,i){ml.subVectors(e,t),vl.subVectors(n,t),gl.crossVectors(ml,vl);let r,o=this.direction.dot(gl);if(o>0){if(l)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}pl.subVectors(this.origin,t);const u=r*this.direction.dot(vl.crossVectors(pl,vl));if(u<0)return null;const a=r*this.direction.dot(ml.cross(pl));if(a<0)return null;if(u+a>o)return null;const s=-r*pl.dot(gl);return s<0?null:this.at(s/o,i)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});const bl=new xn,xl=new xn,wl=new sn;function _l(t,e){this.normal=void 0!==t?t:new xn(1,0,0),this.constant=void 0!==e?e:0}Object.assign(_l.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,l){return this.normal.set(t,e,n),this.constant=l,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,n){const l=bl.subVectors(n,e).cross(xl.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(l,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new xn),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new xn);const n=t.delta(bl),l=this.normal.dot(n);if(0===l)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;const i=-(t.start.dot(this.normal)+this.constant)/l;return i<0||i>1?void 0:e.copy(n).multiplyScalar(i).add(t.start)},intersectsLine:function(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new xn),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){const n=e||wl.getNormalMatrix(t),l=this.coplanarPoint(bl).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-l.dot(i),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});const Ml=new xn,Sl=new xn,Tl=new xn,El=new xn,Al=new xn,Cl=new xn,Ol=new xn,Ll=new xn,Pl=new xn,Rl=new xn;function kl(t,e,n){this.a=void 0!==t?t:new xn,this.b=void 0!==e?e:new xn,this.c=void 0!==n?n:new xn}Object.assign(kl,{getNormal:function(t,e,n,l){void 0===l&&(console.warn("THREE.Triangle: .getNormal() target is now required"),l=new xn),l.subVectors(n,e),Ml.subVectors(t,e),l.cross(Ml);const i=l.lengthSq();return i>0?l.multiplyScalar(1/Math.sqrt(i)):l.set(0,0,0)},getBarycoord:function(t,e,n,l,i){Ml.subVectors(l,e),Sl.subVectors(n,e),Tl.subVectors(t,e);const r=Ml.dot(Ml),o=Ml.dot(Sl),u=Ml.dot(Tl),a=Sl.dot(Sl),s=Sl.dot(Tl),c=r*a-o*o;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new xn),0===c)return i.set(-2,-1,-1);const h=1/c,d=(a*u-o*s)*h,f=(r*s-o*u)*h;return i.set(1-d-f,f,d)},containsPoint:function(t,e,n,l){return kl.getBarycoord(t,e,n,l,El),El.x>=0&&El.y>=0&&El.x+El.y<=1},getUV:function(t,e,n,l,i,r,o,u){return this.getBarycoord(t,e,n,l,El),u.set(0,0),u.addScaledVector(i,El.x),u.addScaledVector(r,El.y),u.addScaledVector(o,El.z),u},isFrontFacing:function(t,e,n,l){return Ml.subVectors(n,e),Sl.subVectors(t,e),Ml.cross(Sl).dot(l)<0}}),Object.assign(kl.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,l){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[l]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return Ml.subVectors(this.c,this.b),Sl.subVectors(this.a,this.b),.5*Ml.cross(Sl).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new xn),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return kl.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new _l),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return kl.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,n,l,i){return kl.getUV(t,this.a,this.b,this.c,e,n,l,i)},containsPoint:function(t){return kl.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return kl.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new xn);const n=this.a,l=this.b,i=this.c;let r,o;Al.subVectors(l,n),Cl.subVectors(i,n),Ll.subVectors(t,n);const u=Al.dot(Ll),a=Cl.dot(Ll);if(u<=0&&a<=0)return e.copy(n);Pl.subVectors(t,l);const s=Al.dot(Pl),c=Cl.dot(Pl);if(s>=0&&c<=s)return e.copy(l);const h=u*c-s*a;if(h<=0&&u>=0&&s<=0)return r=u/(u-s),e.copy(n).addScaledVector(Al,r);Rl.subVectors(t,i);const d=Al.dot(Rl),f=Cl.dot(Rl);if(f>=0&&d<=f)return e.copy(i);const p=d*a-u*f;if(p<=0&&a>=0&&f<=0)return o=a/(a-f),e.copy(n).addScaledVector(Cl,o);const m=s*f-d*c;if(m<=0&&c-s>=0&&d-f>=0)return Ol.subVectors(i,l),o=(c-s)/(c-s+(d-f)),e.copy(l).addScaledVector(Ol,o);const v=1/(m+p+h);return r=p*v,o=h*v,e.copy(n).addScaledVector(Al,r).addScaledVector(Cl,o)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});const Il={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Dl={h:0,s:0,l:0},Nl={h:0,s:0,l:0};function jl(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}function Bl(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function zl(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Fl(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function Ul(t,e,n,l,i,r){this.a=t,this.b=e,this.c=n,this.normal=l&&l.isVector3?l:new xn,this.vertexNormals=Array.isArray(l)?l:[],this.color=i&&i.isColor?i:new jl,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==r?r:0}Object.assign(jl.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"===typeof t?this.setHex(t):"string"===typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(t,e,n){if(t=un.euclideanModulo(t,1),e=un.clamp(e,0,1),n=un.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const l=n<=.5?n*(1+e):n+e-n*e,i=2*n-l;this.r=Bl(i,l,t+1/3),this.g=Bl(i,l,t),this.b=Bl(i,l,t-1/3)}return this},setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;const l=n[1],i=n[2];switch(l){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[5]),this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[5]),this;break;case"hsl":case"hsla":if(t=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){const n=parseFloat(t[1])/360,l=parseInt(t[2],10)/100,i=parseInt(t[3],10)/100;return e(t[5]),this.setHSL(n,l,i)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this},setColorName:function(t){const e=Il[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=zl(t.r),this.g=zl(t.g),this.b=zl(t.b),this},copyLinearToSRGB:function(t){return this.r=Fl(t.r),this.g=Fl(t.g),this.b=Fl(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,l=this.b,i=Math.max(e,n,l),r=Math.min(e,n,l);let o,u;const a=(r+i)/2;if(r===i)o=0,u=0;else{const t=i-r;switch(u=a<=.5?t/(i+r):t/(2-i-r),i){case e:o=(n-l)/t+(n<l?6:0);break;case n:o=(l-e)/t+2;break;case l:o=(e-n)/t+4;break}o/=6}return t.h=o,t.s=u,t.l=a,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,n){return this.getHSL(Dl),Dl.h+=t,Dl.s+=e,Dl.l+=n,this.setHSL(Dl.h,Dl.s,Dl.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(Dl),t.getHSL(Nl);const n=un.lerp(Dl.h,Nl.h,e),l=un.lerp(Dl.s,Nl.s,e),i=un.lerp(Dl.l,Nl.l,e);return this.setHSL(n,l,i),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},fromBufferAttribute:function(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this},toJSON:function(){return this.getHex()}}),jl.NAMES=Il,Object.assign(Ul.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(let e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});let Vl=0;function Hl(){Object.defineProperty(this,"id",{value:Vl++}),this.uuid=un.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=g,this.side=d,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=P,this.blendDst=R,this.blendEquation=_,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=U,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=tn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Qe,this.stencilZFail=Qe,this.stencilZPass=Qe,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Gl(t){Hl.call(this),this.type="MeshBasicMaterial",this.color=new jl(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}Hl.prototype=Object.assign(Object.create(ln.prototype),{constructor:Hl,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===m;continue}const l=this[e];void 0!==l?l&&l.isColor?l.set(n):l&&l.isVector3&&n&&n.isVector3?l.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"===typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function l(t){const e=[];for(const n in t){const l=t[n];delete l.metadata,e.push(l)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==g&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==d&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=l(t.textures),i=l(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let l=0;l!==t;++l)n[l]=e[l].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Hl.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Gl.prototype=Object.create(Hl.prototype),Gl.prototype.constructor=Gl,Gl.prototype.isMeshBasicMaterial=!0,Gl.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Wl=new xn,$l=new an;function ql(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=en,this.updateRange={offset:0,count:-1},this.version=0}function Xl(t,e,n){ql.call(this,new Int8Array(t),e,n)}function Yl(t,e,n){ql.call(this,new Uint8Array(t),e,n)}function Zl(t,e,n){ql.call(this,new Uint8ClampedArray(t),e,n)}function Jl(t,e,n){ql.call(this,new Int16Array(t),e,n)}function Kl(t,e,n){ql.call(this,new Uint16Array(t),e,n)}function Ql(t,e,n){ql.call(this,new Int32Array(t),e,n)}function ti(t,e,n){ql.call(this,new Uint32Array(t),e,n)}function ei(t,e,n){ql.call(this,new Float32Array(t),e,n)}function ni(t,e,n){ql.call(this,new Float64Array(t),e,n)}function li(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function ii(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,l=t.length;n<l;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty(ql.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ql.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let l=0,i=this.itemSize;l<i;l++)this.array[t+l]=e.array[n+l];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let l=0,i=t.length;l<i;l++){let i=t[l];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",l),i=new jl),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let l=0,i=t.length;l<i;l++){let i=t[l];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",l),i=new an),e[n++]=i.x,e[n++]=i.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let l=0,i=t.length;l<i;l++){let i=t[l];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",l),i=new xn),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let l=0,i=t.length;l<i;l++){let i=t[l];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",l),i=new pn),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)$l.fromBufferAttribute(this,e),$l.applyMatrix3(t),this.setXY(e,$l.x,$l.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Wl.fromBufferAttribute(this,e),Wl.applyMatrix3(t),this.setXYZ(e,Wl.x,Wl.y,Wl.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Wl.x=this.getX(e),Wl.y=this.getY(e),Wl.z=this.getZ(e),Wl.applyMatrix4(t),this.setXYZ(e,Wl.x,Wl.y,Wl.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Wl.x=this.getX(e),Wl.y=this.getY(e),Wl.z=this.getZ(e),Wl.applyNormalMatrix(t),this.setXYZ(e,Wl.x,Wl.y,Wl.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Wl.x=this.getX(e),Wl.y=this.getY(e),Wl.z=this.getZ(e),Wl.transformDirection(t),this.setXYZ(e,Wl.x,Wl.y,Wl.z);return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,l){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=l,this},setXYZW:function(t,e,n,l,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=l,this.array[t+3]=i,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Xl.prototype=Object.create(ql.prototype),Xl.prototype.constructor=Xl,Yl.prototype=Object.create(ql.prototype),Yl.prototype.constructor=Yl,Zl.prototype=Object.create(ql.prototype),Zl.prototype.constructor=Zl,Jl.prototype=Object.create(ql.prototype),Jl.prototype.constructor=Jl,Kl.prototype=Object.create(ql.prototype),Kl.prototype.constructor=Kl,Ql.prototype=Object.create(ql.prototype),Ql.prototype.constructor=Ql,ti.prototype=Object.create(ql.prototype),ti.prototype.constructor=ti,ei.prototype=Object.create(ql.prototype),ei.prototype.constructor=ei,ni.prototype=Object.create(ql.prototype),ni.prototype.constructor=ni,Object.assign(li.prototype,{computeGroups:function(t){const e=[];let n,l,i=void 0;const r=t.faces;for(l=0;l<r.length;l++){const t=r[l];t.materialIndex!==i&&(i=t.materialIndex,void 0!==n&&(n.count=3*l-n.start,e.push(n)),n={start:3*l,materialIndex:i})}void 0!==n&&(n.count=3*l-n.start,e.push(n)),this.groups=e},fromGeometry:function(t){const e=t.faces,n=t.vertices,l=t.faceVertexUvs,i=l[0]&&l[0].length>0,r=l[1]&&l[1].length>0,o=t.morphTargets,u=o.length;let a;if(u>0){a=[];for(let t=0;t<u;t++)a[t]={name:o[t].name,data:[]};this.morphTargets.position=a}const s=t.morphNormals,c=s.length;let h;if(c>0){h=[];for(let t=0;t<c;t++)h[t]={name:s[t].name,data:[]};this.morphTargets.normal=h}const d=t.skinIndices,f=t.skinWeights,p=d.length===n.length,m=f.length===n.length;n.length>0&&0===e.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<e.length;v++){const t=e[v];this.vertices.push(n[t.a],n[t.b],n[t.c]);const g=t.vertexNormals;if(3===g.length)this.normals.push(g[0],g[1],g[2]);else{const e=t.normal;this.normals.push(e,e,e)}const y=t.vertexColors;if(3===y.length)this.colors.push(y[0],y[1],y[2]);else{const e=t.color;this.colors.push(e,e,e)}if(!0===i){const t=l[0][v];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new an,new an,new an))}if(!0===r){const t=l[1][v];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new an,new an,new an))}for(let e=0;e<u;e++){const n=o[e].vertices;a[e].data.push(n[t.a],n[t.b],n[t.c])}for(let e=0;e<c;e++){const t=s[e].vertexNormals[v];h[e].data.push(t.a,t.b,t.c)}p&&this.skinIndices.push(d[t.a],d[t.b],d[t.c]),m&&this.skinWeights.push(f[t.a],f[t.b],f[t.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});let ri=1;const oi=new Cn,ui=new $n,ai=new xn,si=new ul,ci=new ul,hi=new xn;function di(){Object.defineProperty(this,"id",{value:ri+=2}),this.uuid=un.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}di.prototype=Object.assign(Object.create(ln.prototype),{constructor:di,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(ii(t)>65535?ti:Kl)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new sn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const l=this.attributes.tangent;return void 0!==l&&(l.transformDirection(t),l.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return oi.makeRotationX(t),this.applyMatrix4(oi),this},rotateY:function(t){return oi.makeRotationY(t),this.applyMatrix4(oi),this},rotateZ:function(t){return oi.makeRotationZ(t),this.applyMatrix4(oi),this},translate:function(t,e,n){return oi.makeTranslation(t,e,n),this.applyMatrix4(oi),this},scale:function(t,e,n){return oi.makeScale(t,e,n),this.applyMatrix4(oi),this},lookAt:function(t){return ui.lookAt(t),ui.updateMatrix(),this.applyMatrix4(ui.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ai).negate(),this.translate(ai.x,ai.y,ai.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const t=new ei(3*e.vertices.length,3),n=new ei(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const t=new ei(e.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,l=t.length;n<l;n++){const l=t[n];e.push(l.x,l.y,l.z||0)}return this.setAttribute("position",new ei(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let t=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(t=void 0,e.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(e);t.verticesNeedUpdate=e.verticesNeedUpdate,t.normalsNeedUpdate=e.normalsNeedUpdate,t.colorsNeedUpdate=e.colorsNeedUpdate,t.uvsNeedUpdate=e.uvsNeedUpdate,t.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=t}if(!0===e.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(e.vertices),t.needsUpdate=!0),e.verticesNeedUpdate=!1}if(!0===e.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(e.normals),t.needsUpdate=!0),e.normalsNeedUpdate=!1}if(!0===e.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(e.colors),t.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(e.uvs),t.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(e.lineDistances),t.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new li).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new ql(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const e=new Float32Array(3*t.normals.length);this.setAttribute("normal",new ql(e,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const e=new Float32Array(3*t.colors.length);this.setAttribute("color",new ql(e,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const e=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new ql(e,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const e=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new ql(e,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const n in t.morphTargets){const e=[],l=t.morphTargets[n];for(let t=0,n=l.length;t<n;t++){const n=l[t],i=new ei(3*n.data.length,3);i.name=n.name,e.push(i.copyVector3sArray(n.data))}this.morphAttributes[n]=e}if(t.skinIndices.length>0){const e=new ei(4*t.skinIndices.length,4);this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const e=new ei(4*t.skinWeights.length,4);this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ul);const t=this.attributes.position,e=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,l=e.length;n<l;n++){const t=e[n];si.setFromBufferAttribute(t),this.morphTargetsRelative?(hi.addVectors(this.boundingBox.min,si.min),this.boundingBox.expandByPoint(hi),hi.addVectors(this.boundingBox.max,si.max),this.boundingBox.expandByPoint(hi)):(this.boundingBox.expandByPoint(si.min),this.boundingBox.expandByPoint(si.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new cl);const t=this.attributes.position,e=this.morphAttributes.position;if(t){const n=this.boundingSphere.center;if(si.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const n=e[t];ci.setFromBufferAttribute(n),this.morphTargetsRelative?(hi.addVectors(si.min,ci.min),si.expandByPoint(hi),hi.addVectors(si.max,ci.max),si.expandByPoint(hi)):(si.expandByPoint(ci.min),si.expandByPoint(ci.max))}si.getCenter(n);let l=0;for(let e=0,i=t.count;e<i;e++)hi.fromBufferAttribute(t,e),l=Math.max(l,n.distanceToSquared(hi));if(e)for(let i=0,r=e.length;i<r;i++){const r=e[i],o=this.morphTargetsRelative;for(let e=0,i=r.count;e<i;e++)hi.fromBufferAttribute(r,e),o&&(ai.fromBufferAttribute(t,e),hi.add(ai)),l=Math.max(l,n.distanceToSquared(hi))}this.boundingSphere.radius=Math.sqrt(l),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new ql(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const l=new xn,i=new xn,r=new xn,o=new xn,u=new xn,a=new xn,s=new xn,c=new xn;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),f=t.getX(h+1),p=t.getX(h+2);l.fromBufferAttribute(e,d),i.fromBufferAttribute(e,f),r.fromBufferAttribute(e,p),s.subVectors(r,i),c.subVectors(l,i),s.cross(c),o.fromBufferAttribute(n,d),u.fromBufferAttribute(n,f),a.fromBufferAttribute(n,p),o.add(s),u.add(s),a.add(s),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(f,u.x,u.y,u.z),n.setXYZ(p,a.x,a.y,a.z)}else for(let t=0,h=e.count;t<h;t+=3)l.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),s.subVectors(r,i),c.subVectors(l,i),s.cross(c),n.setXYZ(t+0,s.x,s.y,s.z),n.setXYZ(t+1,s.x,s.y,s.z),n.setXYZ(t+2,s.x,s.y,s.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const l in n){if(void 0===t.attributes[l])continue;const i=n[l],r=i.array,o=t.attributes[l],u=o.array,a=o.itemSize*e,s=Math.min(u.length,r.length-a);for(let t=0,e=a;t<s;t++,e++)r[e]=u[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)hi.fromBufferAttribute(t,e),hi.normalize(),t.setXYZ(e,hi.x,hi.y,hi.z)},toNonIndexed:function(){function t(t,e){const n=t.array,l=t.itemSize,i=t.normalized,r=new n.constructor(e.length*l);let o=0,u=0;for(let a=0,s=e.length;a<s;a++){o=e[a]*l;for(let t=0;t<l;t++)r[u++]=n[o++]}return new ql(r,l,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new di,n=this.index.array,l=this.attributes;for(const o in l){const i=l[o],r=t(i,n);e.setAttribute(o,r)}const i=this.morphAttributes;for(const o in i){const l=[],r=i[o];for(let e=0,i=r.length;e<i;e++){const i=r[e],o=t(i,n);l.push(o)}e.morphAttributes[o]=l}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,u=r.length;o<u;o++){const t=r[o];e.addGroup(t.start,t.count,t.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const u in n){const e=n[u],l=e.toJSON(t.data);""!==e.name&&(l.name=e.name),t.data.attributes[u]=l}const l={};let i=!1;for(const u in this.morphAttributes){const e=this.morphAttributes[u],n=[];for(let l=0,i=e.length;l<i;l++){const i=e[l],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),n.push(r)}n.length>0&&(l[u]=n,i=!0)}i&&(t.data.morphAttributes=l,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t},clone:function(){return(new di).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const l=t.attributes;for(const a in l){const t=l[a];this.setAttribute(a,t.clone(e))}const i=t.morphAttributes;for(const a in i){const t=[],n=i[a];for(let l=0,i=n.length;l<i;l++)t.push(n[l].clone(e));this.morphAttributes[a]=t}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let a=0,s=r.length;a<s;a++){const t=r[a];this.addGroup(t.start,t.count,t.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const u=t.boundingSphere;return null!==u&&(this.boundingSphere=u.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const fi=new Cn,pi=new yl,mi=new cl,vi=new xn,gi=new xn,yi=new xn,bi=new xn,xi=new xn,wi=new xn,_i=new xn,Mi=new xn,Si=new xn,Ti=new an,Ei=new an,Ai=new an,Ci=new xn,Oi=new xn;function Li(t,e){$n.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new di,this.material=void 0!==e?e:new Gl,this.updateMorphTargets()}function Pi(t,e,n,l,i,r,o,u){let a;if(a=e.side===f?l.intersectTriangle(o,r,i,!0,u):l.intersectTriangle(i,r,o,e.side!==p,u),null===a)return null;Oi.copy(u),Oi.applyMatrix4(t.matrixWorld);const s=n.ray.origin.distanceTo(Oi);return s<n.near||s>n.far?null:{distance:s,point:Oi.clone(),object:t}}function Ri(t,e,n,l,i,r,o,u,a,s,c,h){vi.fromBufferAttribute(i,s),gi.fromBufferAttribute(i,c),yi.fromBufferAttribute(i,h);const d=t.morphTargetInfluences;if(e.morphTargets&&r&&d){_i.set(0,0,0),Mi.set(0,0,0),Si.set(0,0,0);for(let t=0,e=r.length;t<e;t++){const e=d[t],n=r[t];0!==e&&(bi.fromBufferAttribute(n,s),xi.fromBufferAttribute(n,c),wi.fromBufferAttribute(n,h),o?(_i.addScaledVector(bi,e),Mi.addScaledVector(xi,e),Si.addScaledVector(wi,e)):(_i.addScaledVector(bi.sub(vi),e),Mi.addScaledVector(xi.sub(gi),e),Si.addScaledVector(wi.sub(yi),e)))}vi.add(_i),gi.add(Mi),yi.add(Si)}t.isSkinnedMesh&&(t.boneTransform(s,vi),t.boneTransform(c,gi),t.boneTransform(h,yi));const f=Pi(t,e,n,l,vi,gi,yi,Ci);if(f){u&&(Ti.fromBufferAttribute(u,s),Ei.fromBufferAttribute(u,c),Ai.fromBufferAttribute(u,h),f.uv=kl.getUV(Ci,vi,gi,yi,Ti,Ei,Ai,new an)),a&&(Ti.fromBufferAttribute(a,s),Ei.fromBufferAttribute(a,c),Ai.fromBufferAttribute(a,h),f.uv2=kl.getUV(Ci,vi,gi,yi,Ti,Ei,Ai,new an));const t=new Ul(s,c,h);kl.getNormal(vi,gi,yi,t.normal),f.face=t}return f}Li.prototype=Object.assign(Object.create($n.prototype),{constructor:Li,isMesh:!0,copy:function(t){return $n.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,l=this.material,i=this.matrixWorld;if(void 0===l)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),mi.copy(n.boundingSphere),mi.applyMatrix4(i),!1===t.ray.intersectsSphere(mi))return;if(fi.getInverse(i),pi.copy(t.ray).applyMatrix4(fi),null!==n.boundingBox&&!1===pi.intersectsBox(n.boundingBox))return;let r;if(n.isBufferGeometry){const i=n.index,o=n.attributes.position,u=n.morphAttributes.position,a=n.morphTargetsRelative,s=n.attributes.uv,c=n.attributes.uv2,h=n.groups,d=n.drawRange;if(null!==i)if(Array.isArray(l))for(let n=0,f=h.length;n<f;n++){const f=h[n],p=l[f.materialIndex],m=Math.max(f.start,d.start),v=Math.min(f.start+f.count,d.start+d.count);for(let n=m,l=v;n<l;n+=3){const l=i.getX(n),h=i.getX(n+1),d=i.getX(n+2);r=Ri(this,p,t,pi,o,u,a,s,c,l,h,d),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=f.materialIndex,e.push(r))}}else{const n=Math.max(0,d.start),h=Math.min(i.count,d.start+d.count);for(let d=n,f=h;d<f;d+=3){const n=i.getX(d),h=i.getX(d+1),f=i.getX(d+2);r=Ri(this,l,t,pi,o,u,a,s,c,n,h,f),r&&(r.faceIndex=Math.floor(d/3),e.push(r))}}else if(void 0!==o)if(Array.isArray(l))for(let n=0,f=h.length;n<f;n++){const i=h[n],f=l[i.materialIndex],p=Math.max(i.start,d.start),m=Math.min(i.start+i.count,d.start+d.count);for(let n=p,l=m;n<l;n+=3){const l=n,h=n+1,d=n+2;r=Ri(this,f,t,pi,o,u,a,s,c,l,h,d),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=i.materialIndex,e.push(r))}}else{const n=Math.max(0,d.start),i=Math.min(o.count,d.start+d.count);for(let h=n,d=i;h<d;h+=3){const n=h,i=h+1,d=h+2;r=Ri(this,l,t,pi,o,u,a,s,c,n,i,d),r&&(r.faceIndex=Math.floor(h/3),e.push(r))}}}else if(n.isGeometry){const i=Array.isArray(l),o=n.vertices,u=n.faces;let a;const s=n.faceVertexUvs[0];s.length>0&&(a=s);for(let n=0,c=u.length;n<c;n++){const s=u[n],c=i?l[s.materialIndex]:l;if(void 0===c)continue;const h=o[s.a],d=o[s.b],f=o[s.c];if(r=Pi(this,c,t,pi,h,d,f,Ci),r){if(a&&a[n]){const t=a[n];Ti.copy(t[0]),Ei.copy(t[1]),Ai.copy(t[2]),r.uv=kl.getUV(Ci,h,d,f,Ti,Ei,Ai,new an)}r.face=s,r.faceIndex=n,e.push(r)}}}}});let ki=0;const Ii=new Cn,Di=new $n,Ni=new xn;function ji(){Object.defineProperty(this,"id",{value:ki+=2}),this.uuid=un.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}ji.prototype=Object.assign(Object.create(ln.prototype),{constructor:ji,isGeometry:!0,applyMatrix4:function(t){const e=(new sn).getNormalMatrix(t);for(let n=0,l=this.vertices.length;n<l;n++){const e=this.vertices[n];e.applyMatrix4(t)}for(let n=0,l=this.faces.length;n<l;n++){const t=this.faces[n];t.normal.applyMatrix3(e).normalize();for(let n=0,l=t.vertexNormals.length;n<l;n++)t.vertexNormals[n].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Ii.makeRotationX(t),this.applyMatrix4(Ii),this},rotateY:function(t){return Ii.makeRotationY(t),this.applyMatrix4(Ii),this},rotateZ:function(t){return Ii.makeRotationZ(t),this.applyMatrix4(Ii),this},translate:function(t,e,n){return Ii.makeTranslation(t,e,n),this.applyMatrix4(Ii),this},scale:function(t,e,n){return Ii.makeScale(t,e,n),this.applyMatrix4(Ii),this},lookAt:function(t){return Di.lookAt(t),Di.updateMatrix(),this.applyMatrix4(Di.matrix),this},fromBufferGeometry:function(t){const e=this,n=null!==t.index?t.index:void 0,l=t.attributes;if(void 0===l.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const i=l.position,r=l.normal,o=l.color,u=l.uv,a=l.uv2;void 0!==a&&(this.faceVertexUvs[1]=[]);for(let h=0;h<i.count;h++)e.vertices.push((new xn).fromBufferAttribute(i,h)),void 0!==o&&e.colors.push((new jl).fromBufferAttribute(o,h));function s(t,n,l,i){const s=void 0===o?[]:[e.colors[t].clone(),e.colors[n].clone(),e.colors[l].clone()],c=void 0===r?[]:[(new xn).fromBufferAttribute(r,t),(new xn).fromBufferAttribute(r,n),(new xn).fromBufferAttribute(r,l)],h=new Ul(t,n,l,c,s,i);e.faces.push(h),void 0!==u&&e.faceVertexUvs[0].push([(new an).fromBufferAttribute(u,t),(new an).fromBufferAttribute(u,n),(new an).fromBufferAttribute(u,l)]),void 0!==a&&e.faceVertexUvs[1].push([(new an).fromBufferAttribute(a,t),(new an).fromBufferAttribute(a,n),(new an).fromBufferAttribute(a,l)])}const c=t.groups;if(c.length>0)for(let h=0;h<c.length;h++){const t=c[h],e=t.start,l=t.count;for(let i=e,r=e+l;i<r;i+=3)void 0!==n?s(n.getX(i),n.getX(i+1),n.getX(i+2),t.materialIndex):s(i,i+1,i+2,t.materialIndex)}else if(void 0!==n)for(let h=0;h<n.count;h+=3)s(n.getX(h),n.getX(h+1),n.getX(h+2));else for(let h=0;h<i.count;h+=3)s(h,h+1,h+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ni).negate(),this.translate(Ni.x,Ni.y,Ni.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,l=new Cn;return l.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(l),this},computeFaceNormals:function(){const t=new xn,e=new xn;for(let n=0,l=this.faces.length;n<l;n++){const l=this.faces[n],i=this.vertices[l.a],r=this.vertices[l.b],o=this.vertices[l.c];t.subVectors(o,r),e.subVectors(i,r),t.cross(e),t.normalize(),l.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);const e=new Array(this.vertices.length);for(let n=0,l=this.vertices.length;n<l;n++)e[n]=new xn;if(t){const t=new xn,n=new xn;for(let l=0,i=this.faces.length;l<i;l++){const i=this.faces[l],r=this.vertices[i.a],o=this.vertices[i.b],u=this.vertices[i.c];t.subVectors(u,o),n.subVectors(r,o),t.cross(n),e[i.a].add(t),e[i.b].add(t),e[i.c].add(t)}}else{this.computeFaceNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];e[n.a].add(n.normal),e[n.b].add(n.normal),e[n.c].add(n.normal)}}for(let n=0,l=this.vertices.length;n<l;n++)e[n].normalize();for(let n=0,l=this.faces.length;n<l;n++){const t=this.faces[n],l=t.vertexNormals;3===l.length?(l[0].copy(e[t.a]),l[1].copy(e[t.b]),l[2].copy(e[t.c])):(l[0]=e[t.a].clone(),l[1]=e[t.b].clone(),l[2]=e[t.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],n=e.vertexNormals;3===n.length?(n[0].copy(e.normal),n[1].copy(e.normal),n[2].copy(e.normal)):(n[0]=e.normal.clone(),n[1]=e.normal.clone(),n[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,n=this.faces.length;e<n;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,n=t.vertexNormals.length;e<n;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const t=new ji;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const t=this.morphNormals[e].faceNormals,n=this.morphNormals[e].vertexNormals;for(let e=0,l=this.faces.length;e<l;e++){const e=new xn,l={a:new xn,b:new xn,c:new xn};t.push(e),n.push(l)}}const n=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],l=n.faceNormals[t],i=n.vertexNormals[t];l.copy(e.normal),i.a.copy(e.vertexNormals[0]),i.b.copy(e.vertexNormals[1]),i.c.copy(e.vertexNormals[2])}}for(let e=0,n=this.faces.length;e<n;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ul),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new cl),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);let l,i=this.vertices.length,r=this.vertices,o=t.vertices,u=this.faces,a=t.faces,s=this.colors,c=t.colors;void 0===n&&(n=0),void 0!==e&&(l=(new sn).getNormalMatrix(e));for(let h=0,d=o.length;h<d;h++){const t=o[h],n=t.clone();void 0!==e&&n.applyMatrix4(e),r.push(n)}for(let h=0,d=c.length;h<d;h++)s.push(c[h].clone());for(let h=0,d=a.length;h<d;h++){let t,e,r,o=a[h],s=o.vertexNormals,c=o.vertexColors;t=new Ul(o.a+i,o.b+i,o.c+i),t.normal.copy(o.normal),void 0!==l&&t.normal.applyMatrix3(l).normalize();for(let n=0,i=s.length;n<i;n++)e=s[n].clone(),void 0!==l&&e.applyMatrix3(l).normalize(),t.vertexNormals.push(e);t.color.copy(o.color);for(let n=0,l=c.length;n<l;n++)r=c[n],t.vertexColors.push(r.clone());t.materialIndex=o.materialIndex+n,u.push(t)}for(let h=0,d=t.faceVertexUvs.length;h<d;h++){const e=t.faceVertexUvs[h];void 0===this.faceVertexUvs[h]&&(this.faceVertexUvs[h]=[]);for(let t=0,n=e.length;t<n;t++){const n=e[t],l=[];for(let t=0,e=n.length;t<e;t++)l.push(n[t].clone());this.faceVertexUvs[h].push(l)}}},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){const t={},e=[],n=[],l=4,i=Math.pow(10,l);for(let u=0,a=this.vertices.length;u<a;u++){const l=this.vertices[u],r=Math.round(l.x*i)+"_"+Math.round(l.y*i)+"_"+Math.round(l.z*i);void 0===t[r]?(t[r]=u,e.push(this.vertices[u]),n[u]=e.length-1):n[u]=n[t[r]]}const r=[];for(let u=0,a=this.faces.length;u<a;u++){const t=this.faces[u];t.a=n[t.a],t.b=n[t.b],t.c=n[t.c];const e=[t.a,t.b,t.c];for(let n=0;n<3;n++)if(e[n]===e[(n+1)%3]){r.push(u);break}}for(let u=r.length-1;u>=0;u--){const t=r[u];this.faces.splice(t,1);for(let e=0,n=this.faceVertexUvs.length;e<n;e++)this.faceVertexUvs[e].splice(t,1)}const o=this.vertices.length-e.length;return this.vertices=e,o},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const n=t[e];this.vertices.push(new xn(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let u=0;u<e;u++)t[u]._id=u;function n(t,e){return t.materialIndex-e.materialIndex}t.sort(n);const l=this.faceVertexUvs[0],i=this.faceVertexUvs[1];let r,o;l&&l.length===e&&(r=[]),i&&i.length===e&&(o=[]);for(let u=0;u<e;u++){const e=t[u]._id;r&&r.push(l[e]),o&&o.push(i[e])}r&&(this.faceVertexUvs[0]=r),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}const e=[];for(let f=0;f<this.vertices.length;f++){const t=this.vertices[f];e.push(t.x,t.y,t.z)}const n=[],l=[],i={},r=[],o={},u=[],a={};for(let f=0;f<this.faces.length;f++){const t=this.faces[f],e=!0,l=!1,i=void 0!==this.faceVertexUvs[0][f],r=t.normal.length()>0,o=t.vertexNormals.length>0,u=1!==t.color.r||1!==t.color.g||1!==t.color.b,a=t.vertexColors.length>0;let p=0;if(p=s(p,0,0),p=s(p,1,e),p=s(p,2,l),p=s(p,3,i),p=s(p,4,r),p=s(p,5,o),p=s(p,6,u),p=s(p,7,a),n.push(p),n.push(t.a,t.b,t.c),n.push(t.materialIndex),i){const t=this.faceVertexUvs[0][f];n.push(d(t[0]),d(t[1]),d(t[2]))}if(r&&n.push(c(t.normal)),o){const e=t.vertexNormals;n.push(c(e[0]),c(e[1]),c(e[2]))}if(u&&n.push(h(t.color)),a){const e=t.vertexColors;n.push(h(e[0]),h(e[1]),h(e[2]))}}function s(t,e,n){return n?t|1<<e:t&~(1<<e)}function c(t){const e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==i[e]||(i[e]=l.length/3,l.push(t.x,t.y,t.z)),i[e]}function h(t){const e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==o[e]||(o[e]=r.length,r.push(t.getHex())),o[e]}function d(t){const e=t.x.toString()+t.y.toString();return void 0!==a[e]||(a[e]=u.length/2,u.push(t.x,t.y)),a[e]}return t.data={},t.data.vertices=e,t.data.normals=l,r.length>0&&(t.data.colors=r),u.length>0&&(t.data.uvs=[u]),t.data.faces=n,t},clone:function(){return(new ji).copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let h=0,d=e.length;h<d;h++)this.vertices.push(e[h].clone());const n=t.colors;for(let h=0,d=n.length;h<d;h++)this.colors.push(n[h].clone());const l=t.faces;for(let h=0,d=l.length;h<d;h++)this.faces.push(l[h].clone());for(let h=0,d=t.faceVertexUvs.length;h<d;h++){const e=t.faceVertexUvs[h];void 0===this.faceVertexUvs[h]&&(this.faceVertexUvs[h]=[]);for(let t=0,n=e.length;t<n;t++){const n=e[t],l=[];for(let t=0,e=n.length;t<e;t++){const e=n[t];l.push(e.clone())}this.faceVertexUvs[h].push(l)}}const i=t.morphTargets;for(let h=0,d=i.length;h<d;h++){const t={};if(t.name=i[h].name,void 0!==i[h].vertices){t.vertices=[];for(let e=0,n=i[h].vertices.length;e<n;e++)t.vertices.push(i[h].vertices[e].clone())}if(void 0!==i[h].normals){t.normals=[];for(let e=0,n=i[h].normals.length;e<n;e++)t.normals.push(i[h].normals[e].clone())}this.morphTargets.push(t)}const r=t.morphNormals;for(let h=0,d=r.length;h<d;h++){const t={};if(void 0!==r[h].vertexNormals){t.vertexNormals=[];for(let e=0,n=r[h].vertexNormals.length;e<n;e++){const n=r[h].vertexNormals[e],l={};l.a=n.a.clone(),l.b=n.b.clone(),l.c=n.c.clone(),t.vertexNormals.push(l)}}if(void 0!==r[h].faceNormals){t.faceNormals=[];for(let e=0,n=r[h].faceNormals.length;e<n;e++)t.faceNormals.push(r[h].faceNormals[e].clone())}this.morphNormals.push(t)}const o=t.skinWeights;for(let h=0,d=o.length;h<d;h++)this.skinWeights.push(o[h].clone());const u=t.skinIndices;for(let h=0,d=u.length;h<d;h++)this.skinIndices.push(u[h].clone());const a=t.lineDistances;for(let h=0,d=a.length;h<d;h++)this.lineDistances.push(a[h]);const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const c=t.boundingSphere;return null!==c&&(this.boundingSphere=c.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Bi extends ji{constructor(t,e,n,l,i,r){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:l,heightSegments:i,depthSegments:r},this.fromBufferGeometry(new zi(t,e,n,l,i,r)),this.mergeVertices()}}class zi extends di{constructor(t=1,e=1,n=1,l=1,i=1,r=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:l,heightSegments:i,depthSegments:r};const o=this;l=Math.floor(l),i=Math.floor(i),r=Math.floor(r);const u=[],a=[],s=[],c=[];let h=0,d=0;function f(t,e,n,l,i,r,f,p,m,v,g){const y=r/m,b=f/v,x=r/2,w=f/2,_=p/2,M=m+1,S=v+1;let T=0,E=0;const A=new xn;for(let o=0;o<S;o++){const r=o*b-w;for(let u=0;u<M;u++){const h=u*y-x;A[t]=h*l,A[e]=r*i,A[n]=_,a.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=p>0?1:-1,s.push(A.x,A.y,A.z),c.push(u/m),c.push(1-o/v),T+=1}}for(let o=0;o<v;o++)for(let t=0;t<m;t++){const e=h+t+M*o,n=h+t+M*(o+1),l=h+(t+1)+M*(o+1),i=h+(t+1)+M*o;u.push(e,n,i),u.push(n,l,i),E+=6}o.addGroup(d,E,g),d+=E,h+=T}f("z","y","x",-1,-1,n,e,t,r,i,0),f("z","y","x",1,-1,n,e,-t,r,i,1),f("x","z","y",1,1,t,n,e,l,r,2),f("x","z","y",1,-1,t,n,-e,l,r,3),f("x","y","z",1,-1,t,e,n,l,i,4),f("x","y","z",-1,-1,t,e,-n,l,i,5),this.setIndex(u),this.setAttribute("position",new ei(a,3)),this.setAttribute("normal",new ei(s,3)),this.setAttribute("uv",new ei(c,2))}}function Fi(t){const e={};for(const n in t){e[n]={};for(const l in t[n]){const i=t[n][l];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?e[n][l]=i.clone():Array.isArray(i)?e[n][l]=i.slice():e[n][l]=i}}return e}function Ui(t){const e={};for(let n=0;n<t.length;n++){const l=Fi(t[n]);for(const t in l)e[t]=l[t]}return e}const Vi={clone:Fi,merge:Ui};var Hi="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",Gi="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function Wi(t){Hl.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Hi,this.fragmentShader=Gi,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function $i(){$n.call(this),this.type="Camera",this.matrixWorldInverse=new Cn,this.projectionMatrix=new Cn,this.projectionMatrixInverse=new Cn}function qi(t,e,n,l){$i.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==l?l:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Wi.prototype=Object.create(Hl.prototype),Wi.prototype.constructor=Wi,Wi.prototype.isShaderMaterial=!0,Wi.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Fi(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this},Wi.prototype.toJSON=function(t){const e=Hl.prototype.toJSON.call(this,t);e.uniforms={};for(const l in this.uniforms){const n=this.uniforms[l],i=n.value;i&&i.isTexture?e.uniforms[l]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[l]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[l]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[l]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[l]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[l]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[l]={type:"m4",value:i.toArray()}:e.uniforms[l]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const l in this.extensions)!0===this.extensions[l]&&(n[l]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},$i.prototype=Object.assign(Object.create($n.prototype),{constructor:$i,isCamera:!0,copy:function(t,e){return $n.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new xn),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){$n.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(t,e){$n.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),qi.prototype=Object.assign(Object.create($i.prototype),{constructor:qi,isPerspectiveCamera:!0,copy:function(t,e){return $i.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*un.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*un.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*un.RAD2DEG*Math.atan(Math.tan(.5*un.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,l,i,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=l,this.view.width=i,this.view.height=r,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let t=this.near,e=t*Math.tan(.5*un.DEG2RAD*this.fov)/this.zoom,n=2*e,l=this.aspect*n,i=-.5*l,r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,o=r.fullHeight;i+=r.offsetX*l/t,e-=r.offsetY*n/o,l*=r.width/t,n*=r.height/o}const o=this.filmOffset;0!==o&&(i+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+l,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=$n.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const Xi=90,Yi=1;function Zi(t,e,n){if($n.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const l=new qi(Xi,Yi,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new xn(1,0,0)),this.add(l);const i=new qi(Xi,Yi,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new xn(-1,0,0)),this.add(i);const r=new qi(Xi,Yi,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new xn(0,1,0)),this.add(r);const o=new qi(Xi,Yi,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new xn(0,-1,0)),this.add(o);const u=new qi(Xi,Yi,t,e);u.layers=this.layers,u.up.set(0,-1,0),u.lookAt(new xn(0,0,1)),this.add(u);const a=new qi(Xi,Yi,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new xn(0,0,-1)),this.add(a),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const s=t.xr.enabled,c=t.getRenderTarget();t.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,l),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,r),t.setRenderTarget(n,3),t.render(e,o),t.setRenderTarget(n,4),t.render(e,u),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,a),t.setRenderTarget(c),t.xr.enabled=s},this.clear=function(t,e,l,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(n,o),t.clear(e,l,i);t.setRenderTarget(r)}}function Ji(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),mn.call(this,t,t,e)}function Ki(t,e,n,l,i,r,o,u,a,s,c,h){fn.call(this,null,r,o,u,a,s,l,i,c,h),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==a?a:ht,this.minFilter=void 0!==s?s:ht,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Zi.prototype=Object.create($n.prototype),Zi.prototype.constructor=Zi,Ji.prototype=Object.create(mn.prototype),Ji.prototype.constructor=Ji,Ji.prototype.isWebGLCubeRenderTarget=!0,Ji.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=Pt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n=new qn,l={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"},i=new Wi({name:"CubemapFromEquirect",uniforms:Fi(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,side:f,blending:v});i.uniforms.tEquirect.value=e;const r=new Li(new zi(5,5,5),i);n.add(r);const o=new Zi(1,10,this);return o.update(t,n),r.geometry.dispose(),r.material.dispose(),this},Ki.prototype=Object.create(fn.prototype),Ki.prototype.constructor=Ki,Ki.prototype.isDataTexture=!0;const Qi=new cl,tr=new xn;function er(t,e,n,l,i,r){this.planes=[void 0!==t?t:new _l,void 0!==e?e:new _l,void 0!==n?n:new _l,void 0!==l?l:new _l,void 0!==i?i:new _l,void 0!==r?r:new _l]}Object.assign(er.prototype,{set:function(t,e,n,l,i,r){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(l),o[4].copy(i),o[5].copy(r),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromProjectionMatrix:function(t){const e=this.planes,n=t.elements,l=n[0],i=n[1],r=n[2],o=n[3],u=n[4],a=n[5],s=n[6],c=n[7],h=n[8],d=n[9],f=n[10],p=n[11],m=n[12],v=n[13],g=n[14],y=n[15];return e[0].setComponents(o-l,c-u,p-h,y-m).normalize(),e[1].setComponents(o+l,c+u,p+h,y+m).normalize(),e[2].setComponents(o+i,c+a,p+d,y+v).normalize(),e[3].setComponents(o-i,c-a,p-d,y-v).normalize(),e[4].setComponents(o-r,c-s,p-f,y-g).normalize(),e[5].setComponents(o+r,c+s,p+f,y+g).normalize(),this},intersectsObject:function(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Qi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Qi)},intersectsSprite:function(t){return Qi.center.set(0,0,0),Qi.radius=.7071067811865476,Qi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Qi)},intersectsSphere:function(t){const e=this.planes,n=t.center,l=-t.radius;for(let i=0;i<6;i++){const t=e[i].distanceToPoint(n);if(t<l)return!1}return!0},intersectsBox:function(t){const e=this.planes;for(let n=0;n<6;n++){const l=e[n];if(tr.x=l.normal.x>0?t.max.x:t.min.x,tr.y=l.normal.y>0?t.max.y:t.min.y,tr.z=l.normal.z>0?t.max.z:t.min.z,l.distanceToPoint(tr)<0)return!1}return!0},containsPoint:function(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}});const nr={common:{diffuse:{value:new jl(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new sn},uv2Transform:{value:new sn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new an(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new jl(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new jl(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new sn}},sprite:{diffuse:{value:new jl(15658734)},opacity:{value:1},center:{value:new an(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new sn}}};function lr(){let t=null,e=!1,n=null,l=null;function i(e,r){n(e,r),l=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(l=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(l),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function ir(t,e){const n=e.isWebGL2,l=new WeakMap;function i(e,n){const l=e.array,i=e.usage,r=t.createBuffer();t.bindBuffer(n,r),t.bufferData(n,l,i),e.onUploadCallback();let o=5126;return l instanceof Float32Array?o=5126:l instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):l instanceof Uint16Array?o=5123:l instanceof Int16Array?o=5122:l instanceof Uint32Array?o=5125:l instanceof Int32Array?o=5124:l instanceof Int8Array?o=5120:l instanceof Uint8Array&&(o=5121),{buffer:r,type:o,bytesPerElement:l.BYTES_PER_ELEMENT,version:e.version}}function r(e,l,i){const r=l.array,o=l.updateRange;t.bindBuffer(i,e),-1===o.count?t.bufferSubData(i,0,r):(n?t.bufferSubData(i,o.offset*r.BYTES_PER_ELEMENT,r,o.offset,o.count):t.bufferSubData(i,o.offset*r.BYTES_PER_ELEMENT,r.subarray(o.offset,o.offset+o.count)),o.count=-1)}function o(t){return t.isInterleavedBufferAttribute&&(t=t.data),l.get(t)}function u(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=l.get(e);n&&(t.deleteBuffer(n.buffer),l.delete(e))}function a(t,e){t.isInterleavedBufferAttribute&&(t=t.data);const n=l.get(t);void 0===n?l.set(t,i(t,e)):n.version<t.version&&(r(n.buffer,t,e),n.version=t.version)}return{get:o,remove:u,update:a}}function rr(t,e,n,l){ji.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:l},this.fromBufferGeometry(new or(t,e,n,l)),this.mergeVertices()}function or(t,e,n,l){di.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:l},t=t||1,e=e||1;const i=t/2,r=e/2,o=Math.floor(n)||1,u=Math.floor(l)||1,a=o+1,s=u+1,c=t/o,h=e/u,d=[],f=[],p=[],m=[];for(let v=0;v<s;v++){const t=v*h-r;for(let e=0;e<a;e++){const n=e*c-i;f.push(n,-t,0),p.push(0,0,1),m.push(e/o),m.push(1-v/u)}}for(let v=0;v<u;v++)for(let t=0;t<o;t++){const e=t+a*v,n=t+a*(v+1),l=t+1+a*(v+1),i=t+1+a*v;d.push(e,n,i),d.push(n,l,i)}this.setIndex(d),this.setAttribute("position",new ei(f,3)),this.setAttribute("normal",new ei(p,3)),this.setAttribute("uv",new ei(m,2))}rr.prototype=Object.create(ji.prototype),rr.prototype.constructor=rr,or.prototype=Object.create(di.prototype),or.prototype.constructor=or;var ur="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",ar="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",sr="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",cr="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",hr="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",dr="vec3 transformed = vec3( position );",fr="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",pr="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",mr="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",vr="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",gr="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",yr="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",br="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",xr="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",wr="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",_r="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",Mr="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",Sr="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",Tr="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",Er="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",Ar="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",Cr="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",Or="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",Lr="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",Pr="gl_FragColor = linearToOutputTexel( gl_FragColor );",Rr="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",kr="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",Ir="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",Dr="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",Nr="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",jr="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",Br="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",zr="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",Fr="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",Ur="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",Vr="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",Hr="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",Gr="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",Wr="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",$r="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",qr="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",Xr="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",Yr="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",Zr="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",Jr="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",Kr="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",Qr="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",to="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",eo="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",no="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",lo="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",io="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",ro="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",oo="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",uo="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",ao="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",so="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",co="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",ho="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",fo="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",po="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",mo="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",vo="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",go="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",yo="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",bo="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",xo="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",wo="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",_o="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",Mo="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",So="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",To="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",Eo="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",Ao="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",Co="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",Oo="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",Lo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",Po="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",Ro="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",ko="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",Io="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",Do="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",No="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",jo="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",Bo="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",zo="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",Fo="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",Uo="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",Vo="#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",Ho="#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",Go="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",Wo="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",$o="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",qo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",Xo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",Yo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",Zo="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",Jo="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Ko="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",Qo="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",tu="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",eu="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",nu="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",lu="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",iu="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",ru="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",ou="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",uu="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",au="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",su="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",cu="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",hu="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",du="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fu="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",pu="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",mu="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vu="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",gu="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",yu="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",bu="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",xu="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",wu="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",_u="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",Mu="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",Su="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",Tu="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Eu="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",Au="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Cu="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const Ou={alphamap_fragment:ur,alphamap_pars_fragment:ar,alphatest_fragment:sr,aomap_fragment:cr,aomap_pars_fragment:hr,begin_vertex:dr,beginnormal_vertex:fr,bsdfs:pr,bumpmap_pars_fragment:mr,clipping_planes_fragment:vr,clipping_planes_pars_fragment:gr,clipping_planes_pars_vertex:yr,clipping_planes_vertex:br,color_fragment:xr,color_pars_fragment:wr,color_pars_vertex:_r,color_vertex:Mr,common:Sr,cube_uv_reflection_fragment:Tr,defaultnormal_vertex:Er,displacementmap_pars_vertex:Ar,displacementmap_vertex:Cr,emissivemap_fragment:Or,emissivemap_pars_fragment:Lr,encodings_fragment:Pr,encodings_pars_fragment:Rr,envmap_fragment:kr,envmap_common_pars_fragment:Ir,envmap_pars_fragment:Dr,envmap_pars_vertex:Nr,envmap_physical_pars_fragment:qr,envmap_vertex:jr,fog_vertex:Br,fog_pars_vertex:zr,fog_fragment:Fr,fog_pars_fragment:Ur,gradientmap_pars_fragment:Vr,lightmap_fragment:Hr,lightmap_pars_fragment:Gr,lights_lambert_vertex:Wr,lights_pars_begin:$r,lights_toon_fragment:Xr,lights_toon_pars_fragment:Yr,lights_phong_fragment:Zr,lights_phong_pars_fragment:Jr,lights_physical_fragment:Kr,lights_physical_pars_fragment:Qr,lights_fragment_begin:to,lights_fragment_maps:eo,lights_fragment_end:no,logdepthbuf_fragment:lo,logdepthbuf_pars_fragment:io,logdepthbuf_pars_vertex:ro,logdepthbuf_vertex:oo,map_fragment:uo,map_pars_fragment:ao,map_particle_fragment:so,map_particle_pars_fragment:co,metalnessmap_fragment:ho,metalnessmap_pars_fragment:fo,morphnormal_vertex:po,morphtarget_pars_vertex:mo,morphtarget_vertex:vo,normal_fragment_begin:go,normal_fragment_maps:yo,normalmap_pars_fragment:bo,clearcoat_normal_fragment_begin:xo,clearcoat_normal_fragment_maps:wo,clearcoat_pars_fragment:_o,packing:Mo,premultiplied_alpha_fragment:So,project_vertex:To,dithering_fragment:Eo,dithering_pars_fragment:Ao,roughnessmap_fragment:Co,roughnessmap_pars_fragment:Oo,shadowmap_pars_fragment:Lo,shadowmap_pars_vertex:Po,shadowmap_vertex:Ro,shadowmask_pars_fragment:ko,skinbase_vertex:Io,skinning_pars_vertex:Do,skinning_vertex:No,skinnormal_vertex:jo,specularmap_fragment:Bo,specularmap_pars_fragment:zo,tonemapping_fragment:Fo,tonemapping_pars_fragment:Uo,transmissionmap_fragment:Vo,transmissionmap_pars_fragment:Ho,uv_pars_fragment:Go,uv_pars_vertex:Wo,uv_vertex:$o,uv2_pars_fragment:qo,uv2_pars_vertex:Xo,uv2_vertex:Yo,worldpos_vertex:Zo,background_frag:Jo,background_vert:Ko,cube_frag:Qo,cube_vert:tu,depth_frag:eu,depth_vert:nu,distanceRGBA_frag:lu,distanceRGBA_vert:iu,equirect_frag:ru,equirect_vert:ou,linedashed_frag:uu,linedashed_vert:au,meshbasic_frag:su,meshbasic_vert:cu,meshlambert_frag:hu,meshlambert_vert:du,meshmatcap_frag:fu,meshmatcap_vert:pu,meshtoon_frag:mu,meshtoon_vert:vu,meshphong_frag:gu,meshphong_vert:yu,meshphysical_frag:bu,meshphysical_vert:xu,normal_frag:wu,normal_vert:_u,points_frag:Mu,points_vert:Su,shadow_frag:Tu,shadow_vert:Eu,sprite_frag:Au,sprite_vert:Cu},Lu={basic:{uniforms:Ui([nr.common,nr.specularmap,nr.envmap,nr.aomap,nr.lightmap,nr.fog]),vertexShader:Ou.meshbasic_vert,fragmentShader:Ou.meshbasic_frag},lambert:{uniforms:Ui([nr.common,nr.specularmap,nr.envmap,nr.aomap,nr.lightmap,nr.emissivemap,nr.fog,nr.lights,{emissive:{value:new jl(0)}}]),vertexShader:Ou.meshlambert_vert,fragmentShader:Ou.meshlambert_frag},phong:{uniforms:Ui([nr.common,nr.specularmap,nr.envmap,nr.aomap,nr.lightmap,nr.emissivemap,nr.bumpmap,nr.normalmap,nr.displacementmap,nr.fog,nr.lights,{emissive:{value:new jl(0)},specular:{value:new jl(1118481)},shininess:{value:30}}]),vertexShader:Ou.meshphong_vert,fragmentShader:Ou.meshphong_frag},standard:{uniforms:Ui([nr.common,nr.envmap,nr.aomap,nr.lightmap,nr.emissivemap,nr.bumpmap,nr.normalmap,nr.displacementmap,nr.roughnessmap,nr.metalnessmap,nr.fog,nr.lights,{emissive:{value:new jl(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ou.meshphysical_vert,fragmentShader:Ou.meshphysical_frag},toon:{uniforms:Ui([nr.common,nr.aomap,nr.lightmap,nr.emissivemap,nr.bumpmap,nr.normalmap,nr.displacementmap,nr.gradientmap,nr.fog,nr.lights,{emissive:{value:new jl(0)}}]),vertexShader:Ou.meshtoon_vert,fragmentShader:Ou.meshtoon_frag},matcap:{uniforms:Ui([nr.common,nr.bumpmap,nr.normalmap,nr.displacementmap,nr.fog,{matcap:{value:null}}]),vertexShader:Ou.meshmatcap_vert,fragmentShader:Ou.meshmatcap_frag},points:{uniforms:Ui([nr.points,nr.fog]),vertexShader:Ou.points_vert,fragmentShader:Ou.points_frag},dashed:{uniforms:Ui([nr.common,nr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ou.linedashed_vert,fragmentShader:Ou.linedashed_frag},depth:{uniforms:Ui([nr.common,nr.displacementmap]),vertexShader:Ou.depth_vert,fragmentShader:Ou.depth_frag},normal:{uniforms:Ui([nr.common,nr.bumpmap,nr.normalmap,nr.displacementmap,{opacity:{value:1}}]),vertexShader:Ou.normal_vert,fragmentShader:Ou.normal_frag},sprite:{uniforms:Ui([nr.sprite,nr.fog]),vertexShader:Ou.sprite_vert,fragmentShader:Ou.sprite_frag},background:{uniforms:{uvTransform:{value:new sn},t2D:{value:null}},vertexShader:Ou.background_vert,fragmentShader:Ou.background_frag},cube:{uniforms:Ui([nr.envmap,{opacity:{value:1}}]),vertexShader:Ou.cube_vert,fragmentShader:Ou.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ou.equirect_vert,fragmentShader:Ou.equirect_frag},distanceRGBA:{uniforms:Ui([nr.common,nr.displacementmap,{referencePosition:{value:new xn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ou.distanceRGBA_vert,fragmentShader:Ou.distanceRGBA_frag},shadow:{uniforms:Ui([nr.lights,nr.fog,{color:{value:new jl(0)},opacity:{value:1}}]),vertexShader:Ou.shadow_vert,fragmentShader:Ou.shadow_frag}};function Pu(t,e,n,l){const i=new jl(0);let r,o,u=0,a=null,s=0,c=null;function h(e,l,h,m){let v=!0===l.isScene?l.background:null;const g=t.xr,y=g.getSession&&g.getSession();if(y&&"additive"===y.environmentBlendMode&&(v=null),null===v?p(i,u):v&&v.isColor&&(p(v,1),m=!0),(t.autoClear||m)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),v&&(v.isCubeTexture||v.isWebGLCubeRenderTarget||v.mapping===ot)){void 0===o&&(o=new Li(new zi(1,1,1),new Wi({name:"BackgroundCubeMaterial",uniforms:Fi(Lu.cube.uniforms),vertexShader:Lu.cube.vertexShader,fragmentShader:Lu.cube.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(o));const l=v.isWebGLCubeRenderTarget?v.texture:v;o.material.uniforms.envMap.value=l,o.material.uniforms.flipEnvMap.value=l.isCubeTexture?-1:1,a===v&&s===l.version&&c===t.toneMapping||(o.material.needsUpdate=!0,a=v,s=l.version,c=t.toneMapping),e.unshift(o,o.geometry,o.material,0,0,null)}else v&&v.isTexture&&(void 0===r&&(r=new Li(new or(2,2),new Wi({name:"BackgroundMaterial",uniforms:Fi(Lu.background.uniforms),vertexShader:Lu.background.vertexShader,fragmentShader:Lu.background.fragmentShader,side:d,depthTest:!1,depthWrite:!1,fog:!1})),r.geometry.deleteAttribute("normal"),Object.defineProperty(r.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(r)),r.material.uniforms.t2D.value=v,!0===v.matrixAutoUpdate&&v.updateMatrix(),r.material.uniforms.uvTransform.value.copy(v.matrix),a===v&&s===v.version&&c===t.toneMapping||(r.material.needsUpdate=!0,a=v,s=v.version,c=t.toneMapping),e.unshift(r,r.geometry,r.material,0,0,null))}function p(t,n){e.buffers.color.setClear(t.r,t.g,t.b,n,l)}return{getClearColor:function(){return i},setClearColor:function(t,e){i.set(t),u=void 0!==e?e:1,p(i,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,p(i,u)},render:h}}function Ru(t,e,n,l){const i=t.getParameter(34921),r=l.isWebGL2?null:e.get("OES_vertex_array_object"),o=l.isWebGL2||null!==r,u={},a=m(null);let s=a;function c(e,l,i,r,u){let a=!1;if(o){const t=p(r,i,l);s!==t&&(s=t,d(s.object)),a=v(r),a&&g(r)}else{const t=!0===l.wireframe;s.geometry===r.id&&s.program===i.id&&s.wireframe===t||(s.geometry=r.id,s.program=i.id,s.wireframe=t,a=!0)}!0===e.isInstancedMesh&&(a=!0),null!==u&&n.update(u,34963),a&&(M(e,l,i,r),null!==u&&t.bindBuffer(34963,n.get(u).buffer))}function h(){return l.isWebGL2?t.createVertexArray():r.createVertexArrayOES()}function d(e){return l.isWebGL2?t.bindVertexArray(e):r.bindVertexArrayOES(e)}function f(e){return l.isWebGL2?t.deleteVertexArray(e):r.deleteVertexArrayOES(e)}function p(t,e,n){const l=!0===n.wireframe;let i=u[t.id];void 0===i&&(i={},u[t.id]=i);let r=i[e.id];void 0===r&&(r={},i[e.id]=r);let o=r[l];return void 0===o&&(o=m(h()),r[l]=o),o}function m(t){const e=[],n=[],l=[];for(let r=0;r<i;r++)e[r]=0,n[r]=0,l[r]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:l,object:t,attributes:{}}}function v(t){const e=s.attributes,n=t.attributes;if(Object.keys(e).length!==Object.keys(n).length)return!0;for(const l in n){const t=e[l],i=n[l];if(t.attribute!==i)return!0;if(t.data!==i.data)return!0}return!1}function g(t){const e={},n=t.attributes;for(const l in n){const t=n[l],i={};i.attribute=t,t.data&&(i.data=t.data),e[l]=i}s.attributes=e}function y(){const t=s.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function b(t){x(t,0)}function x(n,i){const r=s.newAttributes,o=s.enabledAttributes,u=s.attributeDivisors;if(r[n]=1,0===o[n]&&(t.enableVertexAttribArray(n),o[n]=1),u[n]!==i){const r=l.isWebGL2?t:e.get("ANGLE_instanced_arrays");r[l.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),u[n]=i}}function w(){const e=s.newAttributes,n=s.enabledAttributes;for(let l=0,i=n.length;l<i;l++)n[l]!==e[l]&&(t.disableVertexAttribArray(l),n[l]=0)}function _(e,n,i,r,o,u){!0!==l.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,r,o,u):t.vertexAttribIPointer(e,n,i,o,u)}function M(i,r,o,u){if(!1===l.isWebGL2&&(i.isInstancedMesh||u.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;y();const a=u.attributes,s=o.getAttributes(),c=r.defaultAttributeValues;for(const e in s){const l=s[e];if(l>=0){const r=a[e];if(void 0!==r){const e=r.normalized,i=r.itemSize,o=n.get(r);if(void 0===o)continue;const a=o.buffer,s=o.type,c=o.bytesPerElement;if(r.isInterleavedBufferAttribute){const n=r.data,o=n.stride,h=r.offset;n&&n.isInstancedInterleavedBuffer?(x(l,n.meshPerAttribute),void 0===u._maxInstanceCount&&(u._maxInstanceCount=n.meshPerAttribute*n.count)):b(l),t.bindBuffer(34962,a),_(l,i,s,e,o*c,h*c)}else r.isInstancedBufferAttribute?(x(l,r.meshPerAttribute),void 0===u._maxInstanceCount&&(u._maxInstanceCount=r.meshPerAttribute*r.count)):b(l),t.bindBuffer(34962,a),_(l,i,s,e,0,0)}else if("instanceMatrix"===e){const e=n.get(i.instanceMatrix);if(void 0===e)continue;const r=e.buffer,o=e.type;x(l+0,1),x(l+1,1),x(l+2,1),x(l+3,1),t.bindBuffer(34962,r),t.vertexAttribPointer(l+0,4,o,!1,64,0),t.vertexAttribPointer(l+1,4,o,!1,64,16),t.vertexAttribPointer(l+2,4,o,!1,64,32),t.vertexAttribPointer(l+3,4,o,!1,64,48)}else if(void 0!==c){const n=c[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(l,n);break;case 3:t.vertexAttrib3fv(l,n);break;case 4:t.vertexAttrib4fv(l,n);break;default:t.vertexAttrib1fv(l,n)}}}}w()}function S(){A();for(const t in u){const e=u[t];for(const t in e){const n=e[t];for(const t in n)f(n[t].object),delete n[t];delete e[t]}delete u[t]}}function T(t){if(void 0===u[t.id])return;const e=u[t.id];for(const n in e){const t=e[n];for(const e in t)f(t[e].object),delete t[e];delete e[n]}delete u[t.id]}function E(t){for(const e in u){const n=u[e];if(void 0===n[t.id])continue;const l=n[t.id];for(const t in l)f(l[t].object),delete l[t];delete n[t.id]}}function A(){C(),s!==a&&(s=a,d(s.object))}function C(){a.geometry=null,a.program=null,a.wireframe=!1}return{setup:c,reset:A,resetDefaultState:C,dispose:S,releaseStatesOfGeometry:T,releaseStatesOfProgram:E,initAttributes:y,enableAttribute:b,disableUnusedAttributes:w}}function ku(t,e,n,l){const i=l.isWebGL2;let r;function o(t){r=t}function u(e,l){t.drawArrays(r,e,l),n.update(l,r,1)}function a(l,o,u){if(0===u)return;let a,s;if(i)a=t,s="drawArraysInstanced";else if(a=e.get("ANGLE_instanced_arrays"),s="drawArraysInstancedANGLE",null===a)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");a[s](r,l,o,u),n.update(o,r,u)}this.setMode=o,this.render=u,this.renderInstances=a}function Iu(t,e,n){let l;function i(){if(void 0!==l)return l;const n=e.get("EXT_texture_filter_anisotropic");return l=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,l}function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!==typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let u=void 0!==n.precision?n.precision:"highp";const a=r(u);a!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",a,"instead."),u=a);const s=!0===n.logarithmicDepthBuffer,c=t.getParameter(34930),h=t.getParameter(35660),d=t.getParameter(3379),f=t.getParameter(34076),p=t.getParameter(34921),m=t.getParameter(36347),v=t.getParameter(36348),g=t.getParameter(36349),y=h>0,b=o||!!e.get("OES_texture_float"),x=y&&b,w=o?t.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:i,getMaxPrecision:r,precision:u,logarithmicDepthBuffer:s,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:b,floatVertexTextures:x,maxSamples:w}}function Du(){const t=this;let e=null,n=0,l=!1,i=!1;const r=new _l,o=new sn,u={value:null,needsUpdate:!1};function a(){u.value!==e&&(u.value=e,u.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function s(e,n,l,i){let a=null!==e?e.length:0,s=null;if(0!==a){if(s=u.value,!0!==i||null===s){const t=l+4*a,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===s||s.length<t)&&(s=new Float32Array(t));for(let n=0,u=l;n!==a;++n,u+=4)r.copy(e[n]).applyMatrix4(i,o),r.normal.toArray(s,u),s[u+3]=r.constant}u.value=s,u.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,s}this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,r){const o=0!==t.length||i||0!==n||l;return l=i,e=s(t,r,0),n=t.length,o},this.beginShadows=function(){i=!0,s(null)},this.endShadows=function(){i=!1,a()},this.setState=function(t,r,o,c,h,d){if(!l||null===t||0===t.length||i&&!o)i?s(null):a();else{const l=i?0:n,o=4*l;let a=h.clippingState||null;u.value=a,a=s(t,c,o,d);for(let t=0;t!==o;++t)a[t]=e[t];h.clippingState=a,this.numIntersection=r?this.numPlanes:0,this.numPlanes+=l}}}function Nu(t){const e={};return{has:function(n){if(void 0!==e[n])return e[n];let l;switch(n){case"WEBGL_depth_texture":l=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":l=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":l=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":l=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:l=t.getExtension(n)}return e[n]=l,!!l},get:function(t){return this.has(t)||console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e[t]}}}function ju(t,e,n,l){const i=new WeakMap,r=new WeakMap;function o(t){const u=t.target,a=i.get(u);null!==a.index&&e.remove(a.index);for(const n in a.attributes)e.remove(a.attributes[n]);u.removeEventListener("dispose",o),i.delete(u);const s=r.get(a);s&&(e.remove(s),r.delete(a)),l.releaseStatesOfGeometry(u),!0===u.isInstancedBufferGeometry&&delete u._maxInstanceCount,n.memory.geometries--}function u(t,e){let l=i.get(e);return l||(e.addEventListener("dispose",o),e.isBufferGeometry?l=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new di).setFromObject(t)),l=e._bufferGeometry),i.set(e,l),n.memory.geometries++,l)}function a(t){const n=t.attributes;for(const i in n)e.update(n[i],34962);const l=t.morphAttributes;for(const i in l){const t=l[i];for(let n=0,l=t.length;n<l;n++)e.update(t[n],34962)}}function s(t){const n=[],l=t.index,i=t.attributes.position;let o=0;if(null!==l){const t=l.array;o=l.version;for(let e=0,l=t.length;e<l;e+=3){const l=t[e+0],i=t[e+1],r=t[e+2];n.push(l,i,i,r,r,l)}}else{const t=i.array;o=i.version;for(let e=0,l=t.length/3-1;e<l;e+=3){const t=e+0,l=e+1,i=e+2;n.push(t,l,l,i,i,t)}}const u=new(ii(n)>65535?ti:Kl)(n,1);u.version=o;const a=r.get(t);a&&e.remove(a),r.set(t,u)}function c(t){const e=r.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&s(t)}else s(t);return r.get(t)}return{get:u,update:a,getWireframeAttribute:c}}function Bu(t,e,n,l){const i=l.isWebGL2;let r,o,u;function a(t){r=t}function s(t){o=t.type,u=t.bytesPerElement}function c(e,l){t.drawElements(r,l,o,e*u),n.update(l,r,1)}function h(l,a,s){if(0===s)return;let c,h;if(i)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](r,a,o,l*u,s),n.update(a,r,s)}this.setMode=a,this.setIndex=s,this.render=c,this.renderInstances=h}function zu(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function l(t,e,l){switch(n.calls++,e){case 4:n.triangles+=l*(t/3);break;case 1:n.lines+=l*(t/2);break;case 3:n.lines+=l*(t-1);break;case 2:n.lines+=l*t;break;case 0:n.points+=l*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",e);break}}function i(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:i,update:l}}function Fu(t,e){return t[0]-e[0]}function Uu(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Vu(t){const e={},n=new Float32Array(8),l=[];for(let r=0;r<8;r++)l[r]=[r,0];function i(i,r,o,u){const a=i.morphTargetInfluences,s=void 0===a?0:a.length;let c=e[r.id];if(void 0===c){c=[];for(let t=0;t<s;t++)c[t]=[t,0];e[r.id]=c}for(let t=0;t<s;t++){const e=c[t];e[0]=t,e[1]=a[t]}c.sort(Uu);for(let t=0;t<8;t++)t<s&&c[t][1]?(l[t][0]=c[t][0],l[t][1]=c[t][1]):(l[t][0]=Number.MAX_SAFE_INTEGER,l[t][1]=0);l.sort(Fu);const h=o.morphTargets&&r.morphAttributes.position,d=o.morphNormals&&r.morphAttributes.normal;let f=0;for(let t=0;t<8;t++){const e=l[t],i=e[0],o=e[1];i!==Number.MAX_SAFE_INTEGER&&o?(h&&r.getAttribute("morphTarget"+t)!==h[i]&&r.setAttribute("morphTarget"+t,h[i]),d&&r.getAttribute("morphNormal"+t)!==d[i]&&r.setAttribute("morphNormal"+t,d[i]),n[t]=o,f+=o):(h&&void 0!==r.getAttribute("morphTarget"+t)&&r.deleteAttribute("morphTarget"+t),d&&void 0!==r.getAttribute("morphNormal"+t)&&r.deleteAttribute("morphNormal"+t),n[t]=0)}const p=r.morphTargetsRelative?1:1-f;u.getUniforms().setValue(t,"morphTargetBaseInfluence",p),u.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:i}}function Hu(t,e,n,l){let i=new WeakMap;function r(t){const r=l.render.frame,o=t.geometry,u=e.get(t,o);return i.get(u)!==r&&(o.isGeometry&&u.updateFromObject(t),e.update(u),i.set(u,r)),t.isInstancedMesh&&n.update(t.instanceMatrix,34962),u}function o(){i=new WeakMap}return{update:r,dispose:o}}function Gu(t,e,n,l,i,r,o,u,a,s){t=void 0!==t?t:[],e=void 0!==e?e:nt,o=void 0!==o?o:Lt,fn.call(this,t,e,n,l,i,r,o,u,a,s),this.flipY=!1}function Wu(t,e,n,l){fn.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:l||1},this.magFilter=ht,this.minFilter=ht,this.wrapR=st,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function $u(t,e,n,l){fn.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:l||1},this.magFilter=ht,this.minFilter=ht,this.wrapR=st,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Lu.physical={uniforms:Ui([Lu.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new an(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new jl(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ou.meshphysical_vert,fragmentShader:Ou.meshphysical_frag},Gu.prototype=Object.create(fn.prototype),Gu.prototype.constructor=Gu,Gu.prototype.isCubeTexture=!0,Object.defineProperty(Gu.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),Wu.prototype=Object.create(fn.prototype),Wu.prototype.constructor=Wu,Wu.prototype.isDataTexture2DArray=!0,$u.prototype=Object.create(fn.prototype),$u.prototype.constructor=$u,$u.prototype.isDataTexture3D=!0;const qu=new fn,Xu=new Wu,Yu=new $u,Zu=new Gu,Ju=[],Ku=[],Qu=new Float32Array(16),ta=new Float32Array(9),ea=new Float32Array(4);function na(t,e,n){const l=t[0];if(l<=0||l>0)return t;let i=e*n,r=Ju[i];if(void 0===r&&(r=new Float32Array(i),Ju[i]=r),0!==e){l.toArray(r,0);for(let l=1,i=0;l!==e;++l)i+=n,t[l].toArray(r,i)}return r}function la(t,e){if(t.length!==e.length)return!1;for(let n=0,l=t.length;n<l;n++)if(t[n]!==e[n])return!1;return!0}function ia(t,e){for(let n=0,l=e.length;n<l;n++)t[n]=e[n]}function ra(t,e){let n=Ku[e];void 0===n&&(n=new Int32Array(e),Ku[e]=n);for(let l=0;l!==e;++l)n[l]=t.allocateTextureUnit();return n}function oa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ua(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(la(n,e))return;t.uniform2fv(this.addr,e),ia(n,e)}}function aa(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(la(n,e))return;t.uniform3fv(this.addr,e),ia(n,e)}}function sa(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(la(n,e))return;t.uniform4fv(this.addr,e),ia(n,e)}}function ca(t,e){const n=this.cache,l=e.elements;if(void 0===l){if(la(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),ia(n,e)}else{if(la(n,l))return;ea.set(l),t.uniformMatrix2fv(this.addr,!1,ea),ia(n,l)}}function ha(t,e){const n=this.cache,l=e.elements;if(void 0===l){if(la(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),ia(n,e)}else{if(la(n,l))return;ta.set(l),t.uniformMatrix3fv(this.addr,!1,ta),ia(n,l)}}function da(t,e){const n=this.cache,l=e.elements;if(void 0===l){if(la(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),ia(n,e)}else{if(la(n,l))return;Qu.set(l),t.uniformMatrix4fv(this.addr,!1,Qu),ia(n,l)}}function fa(t,e,n){const l=this.cache,i=n.allocateTextureUnit();l[0]!==i&&(t.uniform1i(this.addr,i),l[0]=i),n.safeSetTexture2D(e||qu,i)}function pa(t,e,n){const l=this.cache,i=n.allocateTextureUnit();l[0]!==i&&(t.uniform1i(this.addr,i),l[0]=i),n.setTexture2DArray(e||Xu,i)}function ma(t,e,n){const l=this.cache,i=n.allocateTextureUnit();l[0]!==i&&(t.uniform1i(this.addr,i),l[0]=i),n.setTexture3D(e||Yu,i)}function va(t,e,n){const l=this.cache,i=n.allocateTextureUnit();l[0]!==i&&(t.uniform1i(this.addr,i),l[0]=i),n.safeSetTextureCube(e||Zu,i)}function ga(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ya(t,e){const n=this.cache;la(n,e)||(t.uniform2iv(this.addr,e),ia(n,e))}function ba(t,e){const n=this.cache;la(n,e)||(t.uniform3iv(this.addr,e),ia(n,e))}function xa(t,e){const n=this.cache;la(n,e)||(t.uniform4iv(this.addr,e),ia(n,e))}function wa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function _a(t){switch(t){case 5126:return oa;case 35664:return ua;case 35665:return aa;case 35666:return sa;case 35674:return ca;case 35675:return ha;case 35676:return da;case 5124:case 35670:return ga;case 35667:case 35671:return ya;case 35668:case 35672:return ba;case 35669:case 35673:return xa;case 5125:return wa;case 35678:case 36198:case 36298:case 36306:case 35682:return fa;case 35679:case 36299:case 36307:return ma;case 35680:case 36300:case 36308:case 36293:return va;case 36289:case 36303:case 36311:case 36292:return pa}}function Ma(t,e){t.uniform1fv(this.addr,e)}function Sa(t,e){t.uniform1iv(this.addr,e)}function Ta(t,e){t.uniform2iv(this.addr,e)}function Ea(t,e){t.uniform3iv(this.addr,e)}function Aa(t,e){t.uniform4iv(this.addr,e)}function Ca(t,e){const n=na(e,this.size,2);t.uniform2fv(this.addr,n)}function Oa(t,e){const n=na(e,this.size,3);t.uniform3fv(this.addr,n)}function La(t,e){const n=na(e,this.size,4);t.uniform4fv(this.addr,n)}function Pa(t,e){const n=na(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Ra(t,e){const n=na(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function ka(t,e){const n=na(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ia(t,e,n){const l=e.length,i=ra(n,l);t.uniform1iv(this.addr,i);for(let r=0;r!==l;++r)n.safeSetTexture2D(e[r]||qu,i[r])}function Da(t,e,n){const l=e.length,i=ra(n,l);t.uniform1iv(this.addr,i);for(let r=0;r!==l;++r)n.safeSetTextureCube(e[r]||Zu,i[r])}function Na(t){switch(t){case 5126:return Ma;case 35664:return Ca;case 35665:return Oa;case 35666:return La;case 35674:return Pa;case 35675:return Ra;case 35676:return ka;case 5124:case 35670:return Sa;case 35667:case 35671:return Ta;case 35668:case 35672:return Ea;case 35669:case 35673:return Aa;case 35678:case 36198:case 36298:case 36306:case 35682:return Ia;case 35680:case 36300:case 36308:case 36293:return Da}}function ja(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=_a(e.type)}function Ba(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Na(e.type)}function za(t){this.id=t,this.seq=[],this.map={}}Ba.prototype.updateCache=function(t){let e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),ia(e,t)},za.prototype.setValue=function(t,e,n){const l=this.seq;for(let i=0,r=l.length;i!==r;++i){const r=l[i];r.setValue(t,e[r.id],n)}};const Fa=/([\w\d_]+)(\])?(\[|\.)?/g;function Ua(t,e){t.seq.push(e),t.map[e.id]=e}function Va(t,e,n){const l=t.name,i=l.length;Fa.lastIndex=0;while(1){const r=Fa.exec(l),o=Fa.lastIndex;let u=r[1],a="]"===r[2],s=r[3];if(a&&(u|=0),void 0===s||"["===s&&o+2===i){Ua(n,void 0===s?new ja(u,t,e):new Ba(u,t,e));break}{const t=n.map;let e=t[u];void 0===e&&(e=new za(u),Ua(n,e)),n=e}}}function Ha(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let l=0;l<n;++l){const n=t.getActiveUniform(e,l),i=t.getUniformLocation(e,n.name);Va(n,i,this)}}function Ga(t,e,n){const l=t.createShader(e);return t.shaderSource(l,n),t.compileShader(l),l}Ha.prototype.setValue=function(t,e,n,l){const i=this.map[e];void 0!==i&&i.setValue(t,n,l)},Ha.prototype.setOptional=function(t,e,n){const l=e[n];void 0!==l&&this.setValue(t,n,l)},Ha.upload=function(t,e,n,l){for(let i=0,r=e.length;i!==r;++i){const r=e[i],o=n[r.id];!1!==o.needsUpdate&&r.setValue(t,o.value,l)}},Ha.seqWithValue=function(t,e){const n=[];for(let l=0,i=t.length;l!==i;++l){const i=t[l];i.id in e&&n.push(i)}return n};let Wa=0;function $a(t){const e=t.split("\n");for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join("\n")}function qa(t){switch(t){case Ue:return["Linear","( value )"];case Ve:return["sRGB","( value )"];case Ge:return["RGBE","( value )"];case $e:return["RGBM","( value, 7.0 )"];case qe:return["RGBM","( value, 16.0 )"];case Xe:return["RGBD","( value, 256.0 )"];case He:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case We:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Xa(t,e,n){const l=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();if(l&&""===i)return"";const r=t.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+i+$a(r)}function Ya(t,e){const n=qa(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Za(t,e){const n=qa(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Ja(t,e){let n;switch(e){case Z:n="Linear";break;case J:n="Reinhard";break;case K:n="OptimizedCineon";break;case Q:n="ACESFilmic";break;case tt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ka(t){const e=[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return e.filter(es).join("\n")}function Qa(t){const e=[];for(const n in t){const l=t[n];!1!==l&&e.push("#define "+n+" "+l)}return e.join("\n")}function ts(t,e){const n={},l=t.getProgramParameter(e,35721);for(let i=0;i<l;i++){const l=t.getActiveAttrib(e,i),r=l.name;n[r]=t.getAttribLocation(e,r)}return n}function es(t){return""!==t}function ns(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ls(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const is=/^[ \t]*#include +<([\w\d./]+)>/gm;function rs(t){return t.replace(is,os)}function os(t,e){const n=Ou[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return rs(n)}const us=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,as=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function ss(t){return t.replace(as,hs).replace(us,cs)}function cs(t,e,n,l){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),hs(t,e,n,l)}function hs(t,e,n,l){let i="";for(let r=parseInt(e);r<parseInt(n);r++)i+=l.replace(/\[ i \]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function ds(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function fs(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===s?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===c?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===h&&(e="SHADOWMAP_TYPE_VSM"),e}function ps(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case nt:case lt:e="ENVMAP_TYPE_CUBE";break;case ot:case ut:e="ENVMAP_TYPE_CUBE_UV";break;case it:case rt:e="ENVMAP_TYPE_EQUIREC";break}return e}function ms(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case lt:case rt:case ut:e="ENVMAP_MODE_REFRACTION";break}return e}function vs(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case $:e="ENVMAP_BLENDING_MULTIPLY";break;case q:e="ENVMAP_BLENDING_MIX";break;case X:e="ENVMAP_BLENDING_ADD";break}return e}function gs(t,e,n,l){const i=t.getContext(),r=n.defines;let o=n.vertexShader,u=n.fragmentShader;const a=fs(n),s=ps(n),c=ms(n),h=vs(n),d=t.gammaFactor>0?t.gammaFactor:1,f=n.isWebGL2?"":Ka(n),p=Qa(r),m=i.createProgram();let v,g;n.isRawShaderMaterial?(v=[p].filter(es).join("\n"),v.length>0&&(v+="\n"),g=[f,p].filter(es).join("\n"),g.length>0&&(g+="\n")):(v=[ds(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+a:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(es).join("\n"),g=[f,ds(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+s:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+a:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Y?"#define TONE_MAPPING":"",n.toneMapping!==Y?Ou["tonemapping_pars_fragment"]:"",n.toneMapping!==Y?Ja("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Ou["encodings_pars_fragment"],n.map?Ya("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ya("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ya("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ya("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Ya("lightMapTexelToLinear",n.lightMapEncoding):"",Za("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(es).join("\n")),o=rs(o),o=ns(o,n),o=ls(o,n),u=rs(u),u=ns(u,n),u=ls(u,n),o=ss(o),u=ss(u),n.isWebGL2&&!n.isRawShaderMaterial&&(v=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,g=["#version 300 es\n","#define varying in","out highp vec4 pc_fragColor;","#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);const y=v+o,b=g+u,x=Ga(i,35633,y),w=Ga(i,35632,b);if(i.attachShader(m,x),i.attachShader(m,w),void 0!==n.index0AttributeName?i.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(m).trim(),e=i.getShaderInfoLog(x).trim(),n=i.getShaderInfoLog(w).trim();let l=!0,r=!0;if(!1===i.getProgramParameter(m,35714)){l=!1;const e=Xa(i,x,"vertex"),n=Xa(i,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(r=!1);r&&(this.diagnostics={runnable:l,programLog:t,vertexShader:{log:e,prefix:v},fragmentShader:{log:n,prefix:g}})}let _,M;return i.deleteShader(x),i.deleteShader(w),this.getUniforms=function(){return void 0===_&&(_=new Ha(i,m)),_},this.getAttributes=function(){return void 0===M&&(M=ts(i,m)),M},this.destroy=function(){l.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=Wa++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=x,this.fragmentShader=w,this}function ys(t,e,n,l){const i=[],r=n.isWebGL2,o=n.logarithmicDepthBuffer,u=n.floatVertexTextures,a=n.maxVertexUniforms,s=n.vertexTextures;let c=n.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},d=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){const e=t.skeleton,n=e.bones;if(u)return 1024;{const t=a,e=Math.floor((t-20)/4),l=Math.min(e,n.length);return l<n.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+n.length+" bones. This GPU supports "+l+"."),0):l}}function v(t){let e;return t?t.isTexture?e=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Ue,e}function g(l,i,a,d,g,y,b){const x=d.fog,w=l.isMeshStandardMaterial?d.environment:null,_=l.envMap||w,M=h[l.type],S=b.isSkinnedMesh?m(b):0;let T,E;if(null!==l.precision&&(c=n.getMaxPrecision(l.precision),c!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",c,"instead.")),M){const t=Lu[M];T=t.vertexShader,E=t.fragmentShader}else T=l.vertexShader,E=l.fragmentShader;const A=t.getRenderTarget(),C={isWebGL2:r,shaderID:M,shaderName:l.type,vertexShader:T,fragmentShader:E,defines:l.defines,isRawShaderMaterial:l.isRawShaderMaterial,isShaderMaterial:l.isShaderMaterial,precision:c,instancing:!0===b.isInstancedMesh,supportsVertexTextures:s,outputEncoding:null!==A?v(A.texture):t.outputEncoding,map:!!l.map,mapEncoding:v(l.map),matcap:!!l.matcap,matcapEncoding:v(l.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:v(_),envMapCubeUV:!!_&&(_.mapping===ot||_.mapping===ut),lightMap:!!l.lightMap,lightMapEncoding:v(l.lightMap),aoMap:!!l.aoMap,emissiveMap:!!l.emissiveMap,emissiveMapEncoding:v(l.emissiveMap),bumpMap:!!l.bumpMap,normalMap:!!l.normalMap,objectSpaceNormalMap:l.normalMapType===Ke,tangentSpaceNormalMap:l.normalMapType===Je,clearcoatMap:!!l.clearcoatMap,clearcoatRoughnessMap:!!l.clearcoatRoughnessMap,clearcoatNormalMap:!!l.clearcoatNormalMap,displacementMap:!!l.displacementMap,roughnessMap:!!l.roughnessMap,metalnessMap:!!l.metalnessMap,specularMap:!!l.specularMap,alphaMap:!!l.alphaMap,gradientMap:!!l.gradientMap,sheen:!!l.sheen,transmissionMap:!!l.transmissionMap,combine:l.combine,vertexTangents:l.normalMap&&l.vertexTangents,vertexColors:l.vertexColors,vertexUvs:!!l.map||!!l.bumpMap||!!l.normalMap||!!l.specularMap||!!l.alphaMap||!!l.emissiveMap||!!l.roughnessMap||!!l.metalnessMap||!!l.clearcoatMap||!!l.clearcoatRoughnessMap||!!l.clearcoatNormalMap||!!l.displacementMap||!!l.transmissionMap,uvsVertexOnly:!(l.map||l.bumpMap||l.normalMap||l.specularMap||l.alphaMap||l.emissiveMap||l.roughnessMap||l.metalnessMap||l.clearcoatNormalMap||l.transmissionMap)&&!!l.displacementMap,fog:!!x,useFog:l.fog,fogExp2:x&&x.isFogExp2,flatShading:l.flatShading,sizeAttenuation:l.sizeAttenuation,logarithmicDepthBuffer:o,skinning:l.skinning&&S>0,maxBones:S,useVertexTexture:u,morphTargets:l.morphTargets,morphNormals:l.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numDirLightShadows:i.directionalShadowMap.length,numPointLightShadows:i.pointShadowMap.length,numSpotLightShadows:i.spotShadowMap.length,numClippingPlanes:g,numClipIntersection:y,dithering:l.dithering,shadowMapEnabled:t.shadowMap.enabled&&a.length>0,shadowMapType:t.shadowMap.type,toneMapping:l.toneMapped?t.toneMapping:Y,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:l.premultipliedAlpha,alphaTest:l.alphaTest,doubleSided:l.side===p,flipSided:l.side===f,depthPacking:void 0!==l.depthPacking&&l.depthPacking,index0AttributeName:l.index0AttributeName,extensionDerivatives:l.extensions&&l.extensions.derivatives,extensionFragDepth:l.extensions&&l.extensions.fragDepth,extensionDrawBuffers:l.extensions&&l.extensions.drawBuffers,extensionShaderTextureLOD:l.extensions&&l.extensions.shaderTextureLOD,rendererExtensionFragDepth:r||null!==e.get("EXT_frag_depth"),rendererExtensionDrawBuffers:r||null!==e.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:r||null!==e.get("EXT_shader_texture_lod"),customProgramCacheKey:l.customProgramCacheKey()};return C}function y(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(void 0===e.isRawShaderMaterial){for(let t=0;t<d.length;t++)n.push(e[d[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()}function b(t){const e=h[t.type];let n;if(e){const t=Lu[e];n=Vi.clone(t.uniforms)}else n=t.uniforms;return n}function x(e,n){let r;for(let t=0,l=i.length;t<l;t++){const e=i[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new gs(t,n,e,l),i.push(r)),r}function w(t){if(0===--t.usedTimes){const e=i.indexOf(t);i[e]=i[i.length-1],i.pop(),t.destroy()}}return{getParameters:g,getProgramCacheKey:y,getUniforms:b,acquireProgram:x,releaseProgram:w,programs:i}}function bs(){let t=new WeakMap;function e(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n}function n(e){t.delete(e)}function l(e,n,l){t.get(e)[n]=l}function i(){t=new WeakMap}return{get:e,remove:n,update:l,dispose:i}}function xs(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ws(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function _s(t){const e=[];let n=0;const l=[],i=[],r={id:-1};function o(){n=0,l.length=0,i.length=0}function u(l,i,o,u,a,s){let c=e[n];const h=t.get(o);return void 0===c?(c={id:l.id,object:l,geometry:i,material:o,program:h.program||r,groupOrder:u,renderOrder:l.renderOrder,z:a,group:s},e[n]=c):(c.id=l.id,c.object=l,c.geometry=i,c.material=o,c.program=h.program||r,c.groupOrder=u,c.renderOrder=l.renderOrder,c.z=a,c.group=s),n++,c}function a(t,e,n,r,o,a){const s=u(t,e,n,r,o,a);(!0===n.transparent?i:l).push(s)}function s(t,e,n,r,o,a){const s=u(t,e,n,r,o,a);(!0===n.transparent?i:l).unshift(s)}function c(t,e){l.length>1&&l.sort(t||xs),i.length>1&&i.sort(e||ws)}function h(){for(let t=n,l=e.length;t<l;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}}return{opaque:l,transparent:i,init:o,push:a,unshift:s,finish:h,sort:c}}function Ms(t){let e=new WeakMap;function n(t){const l=t.target;l.removeEventListener("dispose",n),e.delete(l)}function l(l,i){const r=e.get(l);let o;return void 0===r?(o=new _s(t),e.set(l,new WeakMap),e.get(l).set(i,o),l.addEventListener("dispose",n)):(o=r.get(i),void 0===o&&(o=new _s(t),r.set(i,o))),o}function i(){e=new WeakMap}return{get:l,dispose:i}}function Ss(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new xn,color:new jl};break;case"SpotLight":n={position:new xn,direction:new xn,color:new jl,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new xn,color:new jl,distance:0,decay:0};break;case"HemisphereLight":n={direction:new xn,skyColor:new jl,groundColor:new jl};break;case"RectAreaLight":n={color:new jl,position:new xn,halfWidth:new xn,halfHeight:new xn};break}return t[e.id]=n,n}}}function Ts(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new an};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new an};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new an,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let Es=0;function As(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Cs(){const t=new Ss,e=Ts(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)n.probe.push(new xn);const l=new xn,i=new Cn,r=new Cn;function o(o,u,a){let s=0,c=0,h=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let d=0,f=0,p=0,m=0,v=0,g=0,y=0,b=0;const x=a.matrixWorldInverse;o.sort(As);for(let _=0,M=o.length;_<M;_++){const u=o[_],a=u.color,w=u.intensity,M=u.distance,S=u.shadow&&u.shadow.map?u.shadow.map.texture:null;if(u.isAmbientLight)s+=a.r*w,c+=a.g*w,h+=a.b*w;else if(u.isLightProbe)for(let t=0;t<9;t++)n.probe[t].addScaledVector(u.sh.coefficients[t],w);else if(u.isDirectionalLight){const i=t.get(u);if(i.color.copy(u.color).multiplyScalar(u.intensity),i.direction.setFromMatrixPosition(u.matrixWorld),l.setFromMatrixPosition(u.target.matrixWorld),i.direction.sub(l),i.direction.transformDirection(x),u.castShadow){const t=u.shadow,l=e.get(u);l.shadowBias=t.bias,l.shadowNormalBias=t.normalBias,l.shadowRadius=t.radius,l.shadowMapSize=t.mapSize,n.directionalShadow[d]=l,n.directionalShadowMap[d]=S,n.directionalShadowMatrix[d]=u.shadow.matrix,g++}n.directional[d]=i,d++}else if(u.isSpotLight){const i=t.get(u);if(i.position.setFromMatrixPosition(u.matrixWorld),i.position.applyMatrix4(x),i.color.copy(a).multiplyScalar(w),i.distance=M,i.direction.setFromMatrixPosition(u.matrixWorld),l.setFromMatrixPosition(u.target.matrixWorld),i.direction.sub(l),i.direction.transformDirection(x),i.coneCos=Math.cos(u.angle),i.penumbraCos=Math.cos(u.angle*(1-u.penumbra)),i.decay=u.decay,u.castShadow){const t=u.shadow,l=e.get(u);l.shadowBias=t.bias,l.shadowNormalBias=t.normalBias,l.shadowRadius=t.radius,l.shadowMapSize=t.mapSize,n.spotShadow[p]=l,n.spotShadowMap[p]=S,n.spotShadowMatrix[p]=u.shadow.matrix,b++}n.spot[p]=i,p++}else if(u.isRectAreaLight){const e=t.get(u);e.color.copy(a).multiplyScalar(w),e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(x),r.identity(),i.copy(u.matrixWorld),i.premultiply(x),r.extractRotation(i),e.halfWidth.set(.5*u.width,0,0),e.halfHeight.set(0,.5*u.height,0),e.halfWidth.applyMatrix4(r),e.halfHeight.applyMatrix4(r),n.rectArea[m]=e,m++}else if(u.isPointLight){const l=t.get(u);if(l.position.setFromMatrixPosition(u.matrixWorld),l.position.applyMatrix4(x),l.color.copy(u.color).multiplyScalar(u.intensity),l.distance=u.distance,l.decay=u.decay,u.castShadow){const t=u.shadow,l=e.get(u);l.shadowBias=t.bias,l.shadowNormalBias=t.normalBias,l.shadowRadius=t.radius,l.shadowMapSize=t.mapSize,l.shadowCameraNear=t.camera.near,l.shadowCameraFar=t.camera.far,n.pointShadow[f]=l,n.pointShadowMap[f]=S,n.pointShadowMatrix[f]=u.shadow.matrix,y++}n.point[f]=l,f++}else if(u.isHemisphereLight){const e=t.get(u);e.direction.setFromMatrixPosition(u.matrixWorld),e.direction.transformDirection(x),e.direction.normalize(),e.skyColor.copy(u.color).multiplyScalar(w),e.groundColor.copy(u.groundColor).multiplyScalar(w),n.hemi[v]=e,v++}}n.ambient[0]=s,n.ambient[1]=c,n.ambient[2]=h;const w=n.hash;w.directionalLength===d&&w.pointLength===f&&w.spotLength===p&&w.rectAreaLength===m&&w.hemiLength===v&&w.numDirectionalShadows===g&&w.numPointShadows===y&&w.numSpotShadows===b||(n.directional.length=d,n.spot.length=p,n.rectArea.length=m,n.point.length=f,n.hemi.length=v,n.directionalShadow.length=g,n.directionalShadowMap.length=g,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=b,n.spotShadowMap.length=b,n.directionalShadowMatrix.length=g,n.pointShadowMatrix.length=y,n.spotShadowMatrix.length=b,w.directionalLength=d,w.pointLength=f,w.spotLength=p,w.rectAreaLength=m,w.hemiLength=v,w.numDirectionalShadows=g,w.numPointShadows=y,w.numSpotShadows=b,n.version=Es++)}return{setup:o,state:n}}function Os(){const t=new Cs,e=[],n=[];function l(){e.length=0,n.length=0}function i(t){e.push(t)}function r(t){n.push(t)}function o(l){t.setup(e,n,l)}const u={lightsArray:e,shadowsArray:n,lights:t};return{init:l,state:u,setupLights:o,pushLight:i,pushShadow:r}}function Ls(){let t=new WeakMap;function e(n){const l=n.target;l.removeEventListener("dispose",e),t.delete(l)}function n(n,l){let i;return!1===t.has(n)?(i=new Os,t.set(n,new WeakMap),t.get(n).set(l,i),n.addEventListener("dispose",e)):!1===t.get(n).has(l)?(i=new Os,t.get(n).set(l,i)):i=t.get(n).get(l),i}function l(){t=new WeakMap}return{get:n,dispose:l}}function Ps(t){Hl.call(this),this.type="MeshDepthMaterial",this.depthPacking=Ye,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function Rs(t){Hl.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new xn,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Ps.prototype=Object.create(Hl.prototype),Ps.prototype.constructor=Ps,Ps.prototype.isMeshDepthMaterial=!0,Ps.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},Rs.prototype=Object.create(Hl.prototype),Rs.prototype.constructor=Rs,Rs.prototype.isMeshDistanceMaterial=!0,Rs.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var ks="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",Is="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function Ds(t,e,n){let l=new er;const i=new an,r=new an,o=new pn,u=[],a=[],c={},m={0:f,1:d,2:p},g=new Wi({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new an},radius:{value:4}},vertexShader:Is,fragmentShader:ks}),y=g.clone();y.defines.HORIZONAL_PASS=1;const b=new di;b.setAttribute("position",new ql(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Li(b,g),w=this;function _(n,l){const i=e.update(x);g.uniforms.shadow_pass.value=n.map.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(l,null,i,g,x,null),y.uniforms.shadow_pass.value=n.mapPass.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(l,null,i,y,x,null)}function M(t,e,n){const l=t<<0|e<<1|n<<2;let i=u[l];return void 0===i&&(i=new Ps({depthPacking:Ze,morphTargets:t,skinning:e}),u[l]=i),i}function S(t,e,n){const l=t<<0|e<<1|n<<2;let i=a[l];return void 0===i&&(i=new Rs({morphTargets:t,skinning:e}),a[l]=i),i}function T(e,n,l,i,r,o,u){let a=null,s=M,d=e.customDepthMaterial;if(!0===i.isPointLight&&(s=S,d=e.customDistanceMaterial),void 0===d){let t=!1;!0===l.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let i=!1;!0===e.isSkinnedMesh&&(!0===l.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e));const r=!0===e.isInstancedMesh;a=s(t,i,r)}else a=d;if(t.localClippingEnabled&&!0===l.clipShadows&&0!==l.clippingPlanes.length){const t=a.uuid,e=l.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let i=n[e];void 0===i&&(i=a.clone(),n[e]=i),a=i}return a.visible=l.visible,a.wireframe=l.wireframe,a.side=u===h?null!==l.shadowSide?l.shadowSide:l.side:null!==l.shadowSide?l.shadowSide:m[l.side],a.clipShadows=l.clipShadows,a.clippingPlanes=l.clippingPlanes,a.clipIntersection=l.clipIntersection,a.wireframeLinewidth=l.wireframeLinewidth,a.linewidth=l.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial&&(a.referencePosition.setFromMatrixPosition(i.matrixWorld),a.nearDistance=r,a.farDistance=o),a}function E(n,i,r,o,u){if(!1===n.visible)return;const a=n.layers.test(i.layers);if(a&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&u===h)&&(!n.frustumCulled||l.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const l=e.update(n),i=n.material;if(Array.isArray(i)){const e=l.groups;for(let a=0,s=e.length;a<s;a++){const s=e[a],c=i[s.materialIndex];if(c&&c.visible){const e=T(n,l,c,o,r.near,r.far,u);t.renderBufferDirect(r,null,l,e,n,s)}}}else if(i.visible){const e=T(n,l,i,o,r.near,r.far,u);t.renderBufferDirect(r,null,l,e,n,null)}}const s=n.children;for(let t=0,e=s.length;t<e;t++)E(s[t],i,r,o,u)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=s,this.render=function(e,u,a){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===e.length)return;const s=t.getRenderTarget(),c=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),f=t.state;f.setBlending(v),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let p=0,m=e.length;p<m;p++){const s=e[p],c=s.shadow;if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;if(void 0===c){console.warn("THREE.WebGLShadowMap:",s,"has no shadow.");continue}i.copy(c.mapSize);const d=c.getFrameExtents();if(i.multiply(d),r.copy(c.mapSize),(i.x>n||i.y>n)&&(i.x>n&&(r.x=Math.floor(n/d.x),i.x=r.x*d.x,c.mapSize.x=r.x),i.y>n&&(r.y=Math.floor(n/d.y),i.y=r.y*d.y,c.mapSize.y=r.y)),null===c.map&&!c.isPointLightShadow&&this.type===h){const t={minFilter:pt,magFilter:pt,format:Pt,stencilBuffer:!1};c.map=new mn(i.x,i.y,t),c.map.texture.name=s.name+".shadowMap",c.mapPass=new mn(i.x,i.y,t),c.camera.updateProjectionMatrix()}if(null===c.map){const t={minFilter:ht,magFilter:ht,format:Pt,stencilBuffer:!1};c.map=new mn(i.x,i.y,t),c.map.texture.name=s.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const m=c.getViewportCount();for(let t=0;t<m;t++){const e=c.getViewport(t);o.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),f.viewport(o),c.updateMatrices(s,t),l=c.getFrustum(),E(u,a,c.camera,s,this.type)}c.isPointLightShadow||this.type!==h||_(c,a),c.needsUpdate=!1}w.needsUpdate=!1,t.setRenderTarget(s,c,d)}}function Ns(t,e,n){const l=n.isWebGL2;function i(){let e=!1;const n=new pn;let l=null;const i=new pn(0,0,0,0);return{setMask:function(n){l===n||e||(t.colorMask(n,n,n,n),l=n)},setLocked:function(t){e=t},setClear:function(e,l,r,o,u){!0===u&&(e*=o,l*=o,r*=o),n.set(e,l,r,o),!1===i.equals(n)&&(t.clearColor(e,l,r,o),i.copy(n))},reset:function(){e=!1,l=null,i.set(-1,0,0,0)}}}function r(){let e=!1,n=null,l=null,i=null;return{setTest:function(t){t?gt(2929):yt(2929)},setMask:function(l){n===l||e||(t.depthMask(l),n=l)},setFunc:function(e){if(l!==e){if(e)switch(e){case B:t.depthFunc(512);break;case z:t.depthFunc(519);break;case F:t.depthFunc(513);break;case U:t.depthFunc(515);break;case V:t.depthFunc(514);break;case H:t.depthFunc(518);break;case G:t.depthFunc(516);break;case W:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);l=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,l=null,i=null}}}function s(){let e=!1,n=null,l=null,i=null,r=null,o=null,u=null,a=null,s=null;return{setTest:function(t){e||(t?gt(2960):yt(2960))},setMask:function(l){n===l||e||(t.stencilMask(l),n=l)},setFunc:function(e,n,o){l===e&&i===n&&r===o||(t.stencilFunc(e,n,o),l=e,i=n,r=o)},setOp:function(e,n,l){o===e&&u===n&&a===l||(t.stencilOp(e,n,l),o=e,u=n,a=l)},setLocked:function(t){e=t},setClear:function(e){s!==e&&(t.clearStencil(e),s=e)},reset:function(){e=!1,n=null,l=null,i=null,r=null,o=null,u=null,a=null,s=null}}}const c=new i,h=new r,d=new s;let m={},$=null,q=null,X=null,Y=null,Z=null,J=null,K=null,Q=null,tt=null,et=!1,nt=null,lt=null,it=null,rt=null,ot=null;const ut=t.getParameter(35661);let at=!1,st=0;const ct=t.getParameter(7938);-1!==ct.indexOf("WebGL")?(st=parseFloat(/^WebGL\ ([0-9])/.exec(ct)[1]),at=st>=1):-1!==ct.indexOf("OpenGL ES")&&(st=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ct)[1]),at=st>=2);let ht=null,dt={};const ft=new pn,pt=new pn;function mt(e,n,l){const i=new Uint8Array(4),r=t.createTexture();t.bindTexture(e,r),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let o=0;o<l;o++)t.texImage2D(n+o,0,6408,1,1,0,6408,5121,i);return r}const vt={};function gt(e){!0!==m[e]&&(t.enable(e),m[e]=!0)}function yt(e){!1!==m[e]&&(t.disable(e),m[e]=!1)}function bt(e){return $!==e&&(t.useProgram(e),$=e,!0)}vt[3553]=mt(3553,3553,1),vt[34067]=mt(34067,34069,6),c.setClear(0,0,0,1),h.setClear(1),d.setClear(0),gt(2929),h.setFunc(U),St(!1),Tt(u),gt(2884),_t(v);const xt={[_]:32774,[M]:32778,[S]:32779};if(l)xt[T]=32775,xt[E]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(xt[T]=t.MIN_EXT,xt[E]=t.MAX_EXT)}const wt={[A]:0,[C]:1,[O]:768,[P]:770,[j]:776,[D]:774,[k]:772,[L]:769,[R]:771,[N]:775,[I]:773};function _t(e,n,l,i,r,o,u,a){if(e!==v){if(q||(gt(3042),q=!0),e===w)r=r||n,o=o||l,u=u||i,n===Y&&r===K||(t.blendEquationSeparate(xt[n],xt[r]),Y=n,K=r),l===Z&&i===J&&o===Q&&u===tt||(t.blendFuncSeparate(wt[l],wt[i],wt[o],wt[u]),Z=l,J=i,Q=o,tt=u),X=e,et=null;else if(e!==X||a!==et){if(Y===_&&K===_||(t.blendEquation(32774),Y=_,K=_),a)switch(e){case g:t.blendFuncSeparate(1,771,1,771);break;case y:t.blendFunc(1,1);break;case b:t.blendFuncSeparate(0,0,769,771);break;case x:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case g:t.blendFuncSeparate(770,771,1,771);break;case y:t.blendFunc(770,1);break;case b:t.blendFunc(0,769);break;case x:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}Z=null,J=null,Q=null,tt=null,X=e,et=a}}else q&&(yt(3042),q=!1)}function Mt(t,e){t.side===p?yt(2884):gt(2884);let n=t.side===f;e&&(n=!n),St(n),t.blending===g&&!1===t.transparent?_t(v):_t(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),h.setFunc(t.depthFunc),h.setTest(t.depthTest),h.setMask(t.depthWrite),c.setMask(t.colorWrite);const l=t.stencilWrite;d.setTest(l),l&&(d.setMask(t.stencilWriteMask),d.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),d.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),At(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function St(e){nt!==e&&(e?t.frontFace(2304):t.frontFace(2305),nt=e)}function Tt(e){e!==o?(gt(2884),e!==lt&&(e===u?t.cullFace(1029):e===a?t.cullFace(1028):t.cullFace(1032))):yt(2884),lt=e}function Et(e){e!==it&&(at&&t.lineWidth(e),it=e)}function At(e,n,l){e?(gt(32823),rt===n&&ot===l||(t.polygonOffset(n,l),rt=n,ot=l)):yt(32823)}function Ct(t){t?gt(3089):yt(3089)}function Ot(e){void 0===e&&(e=33984+ut-1),ht!==e&&(t.activeTexture(e),ht=e)}function Lt(e,n){null===ht&&Ot();let l=dt[ht];void 0===l&&(l={type:void 0,texture:void 0},dt[ht]=l),l.type===e&&l.texture===n||(t.bindTexture(e,n||vt[e]),l.type=e,l.texture=n)}function Pt(){const e=dt[ht];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)}function Rt(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function kt(){try{t.texImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function It(){try{t.texImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Dt(e){!1===ft.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),ft.copy(e))}function Nt(e){!1===pt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),pt.copy(e))}function jt(){m={},ht=null,dt={},$=null,X=null,nt=null,lt=null,c.reset(),h.reset(),d.reset()}return{buffers:{color:c,depth:h,stencil:d},enable:gt,disable:yt,useProgram:bt,setBlending:_t,setMaterial:Mt,setFlipSided:St,setCullFace:Tt,setLineWidth:Et,setPolygonOffset:At,setScissorTest:Ct,activeTexture:Ot,bindTexture:Lt,unbindTexture:Pt,compressedTexImage2D:Rt,texImage2D:kt,texImage3D:It,scissor:Dt,viewport:Nt,reset:jt}}function js(t,e,n,l,i,r,o){const u=i.isWebGL2,a=i.maxTextures,s=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,d=new WeakMap;let f,p=!1;try{p="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(Q){}function m(t,e){return p?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(t,e,n,l){let i=1;if((t.width>l||t.height>l)&&(i=l/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap){const l=e?un.floorPowerOfTwo:Math.floor,r=l(i*t.width),o=l(i*t.height);void 0===f&&(f=m(r,o));const u=n?m(r,o):f;u.width=r,u.height=o;const a=u.getContext("2d");return a.drawImage(t,0,0,r,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+r+"x"+o+")."),u}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function g(t){return un.isPowerOfTwo(t.width)&&un.isPowerOfTwo(t.height)}function y(t){return!u&&(t.wrapS!==st||t.wrapT!==st||t.minFilter!==ht&&t.minFilter!==pt)}function b(t,e){return t.generateMipmaps&&e&&t.minFilter!==ht&&t.minFilter!==pt}function x(e,n,i,r){t.generateMipmap(e);const o=l.get(n);o.__maxMipLevel=Math.log(Math.max(i,r))*Math.LOG2E}function w(n,l,i){if(!1===u)return l;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let r=l;return 6403===l&&(5126===i&&(r=33326),5131===i&&(r=33325),5121===i&&(r=33321)),6407===l&&(5126===i&&(r=34837),5131===i&&(r=34843),5121===i&&(r=32849)),6408===l&&(5126===i&&(r=34836),5131===i&&(r=34842),5121===i&&(r=32856)),33325!==r&&33326!==r&&34842!==r&&34836!==r||e.get("EXT_color_buffer_float"),r}function _(t){return t===ht||t===dt||t===ft?9728:9729}function M(t){const e=t.target;e.removeEventListener("dispose",M),T(e),e.isVideoTexture&&d.delete(e),o.memory.textures--}function S(t){const e=t.target;e.removeEventListener("dispose",S),E(e),o.memory.textures--}function T(e){const n=l.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),l.remove(e))}function E(e){const n=l.get(e),i=l.get(e.texture);if(e){if(void 0!==i.__webglTexture&&t.deleteTexture(i.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);l.remove(e.texture),l.remove(e)}}let A=0;function C(){A=0}function O(){const t=A;return t>=a&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+a),A+=1,t}function L(t,e){const i=l.get(t);if(t.isVideoTexture&&X(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void z(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function P(t,e){const i=l.get(t);t.version>0&&i.__version!==t.version?z(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))}function R(t,e){const i=l.get(t);t.version>0&&i.__version!==t.version?z(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))}function k(e,i){if(6!==e.image.length)return;const o=l.get(e);if(e.version>0&&o.__version!==e.version){B(o,e),n.activeTexture(33984+i),n.bindTexture(34067,o.__webglTexture),t.pixelStorei(37440,e.flipY);const l=e&&(e.isCompressedTexture||e.image[0].isCompressedTexture),a=e.image[0]&&e.image[0].isDataTexture,c=[];for(let t=0;t<6;t++)c[t]=l||a?a?e.image[t].image:e.image[t]:v(e.image[t],!1,!0,s);const h=c[0],d=g(h)||u,f=r.convert(e.format),p=r.convert(e.type),m=w(e.internalFormat,f,p);let y;if(j(34067,e,d),l){for(let t=0;t<6;t++){y=c[t].mipmaps;for(let l=0;l<y.length;l++){const i=y[l];e.format!==Pt&&e.format!==Lt?null!==f?n.compressedTexImage2D(34069+t,l,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,l,m,i.width,i.height,0,f,p,i.data)}}o.__maxMipLevel=y.length-1}else{y=e.mipmaps;for(let t=0;t<6;t++)if(a){n.texImage2D(34069+t,0,m,c[t].width,c[t].height,0,f,p,c[t].data);for(let e=0;e<y.length;e++){const l=y[e],i=l.image[t].image;n.texImage2D(34069+t,e+1,m,i.width,i.height,0,f,p,i.data)}}else{n.texImage2D(34069+t,0,m,f,p,c[t]);for(let e=0;e<y.length;e++){const l=y[e];n.texImage2D(34069+t,e+1,m,f,p,l.image[t])}}o.__maxMipLevel=y.length}b(e,d)&&x(34067,e,h.width,h.height),o.__version=e.version,e.onUpdate&&e.onUpdate(e)}else n.activeTexture(33984+i),n.bindTexture(34067,o.__webglTexture)}function I(t,e){n.activeTexture(33984+e),n.bindTexture(34067,l.get(t).__webglTexture)}const D={[at]:10497,[st]:33071,[ct]:33648},N={[ht]:9728,[dt]:9984,[ft]:9986,[pt]:9729,[mt]:9985,[vt]:9987};function j(n,r,o){o?(t.texParameteri(n,10242,D[r.wrapS]),t.texParameteri(n,10243,D[r.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,D[r.wrapR]),t.texParameteri(n,10240,N[r.magFilter]),t.texParameteri(n,10241,N[r.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),r.wrapS===st&&r.wrapT===st||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,_(r.magFilter)),t.texParameteri(n,10241,_(r.minFilter)),r.minFilter!==ht&&r.minFilter!==pt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const a=e.get("EXT_texture_filter_anisotropic");if(a){if(r.type===Mt&&null===e.get("OES_texture_float_linear"))return;if(r.type===St&&null===(u||e.get("OES_texture_half_float_linear")))return;(r.anisotropy>1||l.get(r).__currentAnisotropy)&&(t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,i.getMaxAnisotropy())),l.get(r).__currentAnisotropy=r.anisotropy)}}function B(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",M),e.__webglTexture=t.createTexture(),o.memory.textures++)}function z(e,l,i){let o=3553;l.isDataTexture2DArray&&(o=35866),l.isDataTexture3D&&(o=32879),B(e,l),n.activeTexture(33984+i),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,l.flipY),t.pixelStorei(37441,l.premultiplyAlpha),t.pixelStorei(3317,l.unpackAlignment);const a=y(l)&&!1===g(l.image),s=v(l.image,a,!1,c),h=g(s)||u,d=r.convert(l.format);let f,p=r.convert(l.type),m=w(l.internalFormat,d,p);j(o,l,h);const _=l.mipmaps;if(l.isDepthTexture)m=6402,u?m=l.type===Mt?36012:l.type===_t?33190:l.type===Ct?35056:33189:l.type===Mt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),l.format===Dt&&6402===m&&l.type!==xt&&l.type!==_t&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),l.type=xt,p=r.convert(l.type)),l.format===Nt&&6402===m&&(m=34041,l.type!==Ct&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),l.type=Ct,p=r.convert(l.type))),n.texImage2D(3553,0,m,s.width,s.height,0,d,p,null);else if(l.isDataTexture)if(_.length>0&&h){for(let t=0,e=_.length;t<e;t++)f=_[t],n.texImage2D(3553,t,m,f.width,f.height,0,d,p,f.data);l.generateMipmaps=!1,e.__maxMipLevel=_.length-1}else n.texImage2D(3553,0,m,s.width,s.height,0,d,p,s.data),e.__maxMipLevel=0;else if(l.isCompressedTexture){for(let t=0,e=_.length;t<e;t++)f=_[t],l.format!==Pt&&l.format!==Lt?null!==d?n.compressedTexImage2D(3553,t,m,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,m,f.width,f.height,0,d,p,f.data);e.__maxMipLevel=_.length-1}else if(l.isDataTexture2DArray)n.texImage3D(35866,0,m,s.width,s.height,s.depth,0,d,p,s.data),e.__maxMipLevel=0;else if(l.isDataTexture3D)n.texImage3D(32879,0,m,s.width,s.height,s.depth,0,d,p,s.data),e.__maxMipLevel=0;else if(_.length>0&&h){for(let t=0,e=_.length;t<e;t++)f=_[t],n.texImage2D(3553,t,m,d,p,f);l.generateMipmaps=!1,e.__maxMipLevel=_.length-1}else n.texImage2D(3553,0,m,d,p,s),e.__maxMipLevel=0;b(l,h)&&x(o,l,s.width,s.height),e.__version=l.version,l.onUpdate&&l.onUpdate(l)}function F(e,i,o,u){const a=r.convert(i.texture.format),s=r.convert(i.texture.type),c=w(i.texture.internalFormat,a,s);n.texImage2D(u,0,c,i.width,i.height,0,a,s,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,u,l.get(i.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function U(e,n,l){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(l){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Mt?i=36012:e.type===_t&&(i=33190));const l=q(n);t.renderbufferStorageMultisample(36161,l,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(l){const e=q(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=r.convert(n.texture.format),i=r.convert(n.texture.type),o=w(n.texture.internalFormat,e,i);if(l){const e=q(n);t.renderbufferStorageMultisample(36161,e,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function V(e,n){const i=n&&n.isWebGLCubeRenderTarget;if(i)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");l.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),L(n.depthTexture,0);const r=l.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Dt)t.framebufferTexture2D(36160,36096,3553,r,0);else{if(n.depthTexture.format!==Nt)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,r,0)}}function H(e){const n=l.get(e),i=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");V(n.__webglFramebuffer,e)}else if(i){n.__webglDepthbuffer=[];for(let l=0;l<6;l++)t.bindFramebuffer(36160,n.__webglFramebuffer[l]),n.__webglDepthbuffer[l]=t.createRenderbuffer(),U(n.__webglDepthbuffer[l],e,!1)}else t.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),U(n.__webglDepthbuffer,e,!1);t.bindFramebuffer(36160,null)}function G(e){const i=l.get(e),a=l.get(e.texture);e.addEventListener("dispose",S),a.__webglTexture=t.createTexture(),o.memory.textures++;const s=!0===e.isWebGLCubeRenderTarget,c=!0===e.isWebGLMultisampleRenderTarget,h=g(e)||u;if(!u||e.texture.format!==Lt||e.texture.type!==Mt&&e.texture.type!==St||(e.texture.format=Pt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),s){i.__webglFramebuffer=[];for(let e=0;e<6;e++)i.__webglFramebuffer[e]=t.createFramebuffer()}else if(i.__webglFramebuffer=t.createFramebuffer(),c)if(u){i.__webglMultisampledFramebuffer=t.createFramebuffer(),i.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const n=r.convert(e.texture.format),l=r.convert(e.texture.type),o=w(e.texture.internalFormat,n,l),u=q(e);t.renderbufferStorageMultisample(36161,u,o,e.width,e.height),t.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(i.__webglDepthRenderbuffer=t.createRenderbuffer(),U(i.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(s){n.bindTexture(34067,a.__webglTexture),j(34067,e.texture,h);for(let t=0;t<6;t++)F(i.__webglFramebuffer[t],e,36064,34069+t);b(e.texture,h)&&x(34067,e.texture,e.width,e.height),n.bindTexture(34067,null)}else n.bindTexture(3553,a.__webglTexture),j(3553,e.texture,h),F(i.__webglFramebuffer,e,36064,3553),b(e.texture,h)&&x(3553,e.texture,e.width,e.height),n.bindTexture(3553,null);e.depthBuffer&&H(e)}function W(t){const e=t.texture,i=g(t)||u;if(b(e,i)){const i=t.isWebGLCubeRenderTarget?34067:3553,r=l.get(e).__webglTexture;n.bindTexture(i,r),x(i,e,t.width,t.height),n.bindTexture(i,null)}}function $(e){if(e.isWebGLMultisampleRenderTarget)if(u){const n=l.get(e);t.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,n.__webglFramebuffer);const i=e.width,r=e.height;let o=16384;e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024),t.blitFramebuffer(0,0,i,r,0,0,i,r,o,9728),t.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function q(t){return u&&t.isWebGLMultisampleRenderTarget?Math.min(h,t.samples):0}function X(t){const e=o.render.frame;d.get(t)!==e&&(d.set(t,e),t.update())}let Y=!1,Z=!1;function J(t,e){t&&t.isWebGLRenderTarget&&(!1===Y&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Y=!0),t=t.texture),L(t,e)}function K(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===Z&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),Z=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?k(t,e):I(t,e)}this.allocateTextureUnit=O,this.resetTextureUnits=C,this.setTexture2D=L,this.setTexture2DArray=P,this.setTexture3D=R,this.setTextureCube=k,this.setTextureCubeDynamic=I,this.setupRenderTarget=G,this.updateRenderTargetMipmap=W,this.updateMultisampleRenderTarget=$,this.safeSetTexture2D=J,this.safeSetTextureCube=K}function Bs(t,e,n){const l=n.isWebGL2;function i(t){let n;if(t===gt)return 5121;if(t===Tt)return 32819;if(t===Et)return 32820;if(t===At)return 33635;if(t===yt)return 5120;if(t===bt)return 5122;if(t===xt)return 5123;if(t===wt)return 5124;if(t===_t)return 5125;if(t===Mt)return 5126;if(t===St)return l?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===Ot)return 6406;if(t===Lt)return 6407;if(t===Pt)return 6408;if(t===Rt)return 6409;if(t===kt)return 6410;if(t===Dt)return 6402;if(t===Nt)return 34041;if(t===jt)return 6403;if(t===Bt)return 36244;if(t===zt)return 33319;if(t===Ft)return 33320;if(t===Ut)return 36248;if(t===Vt)return 36249;if(t===Ht||t===Gt||t===Wt||t===$t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===Ht)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Gt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Wt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===$t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===qt||t===Xt||t===Yt||t===Zt){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===qt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===Xt)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Yt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Zt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Jt)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===Kt||t===Qt)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===Kt)return n.COMPRESSED_RGB8_ETC2;if(t===Qt)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===te||t===ee||t===ne||t===le||t===ie||t===re||t===oe||t===ue||t===ae||t===se||t===ce||t===he||t===de||t===fe||t===me||t===ve||t===ge||t===ye||t===be||t===xe||t===we||t===_e||t===Me||t===Se||t===Te||t===Ee||t===Ae||t===Ce?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===pe?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===Ct?l?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}return{convert:i}}function zs(t){qi.call(this),this.cameras=t||[]}function Fs(){$n.call(this),this.type="Group"}function Us(){this._targetRay=null,this._grip=null,this._hand=null}function Vs(t,e){const n=this;let l=null,i=1,r=null,o="local-floor",u=null;const a=[],s=new Map,c=new qi;c.layers.enable(1),c.viewport=new pn;const h=new qi;h.layers.enable(2),h.viewport=new pn;const d=[c,h],f=new zs;f.layers.enable(1),f.layers.enable(2);let p=null,m=null;function v(t){const e=s.get(t.inputSource);e&&e.dispatchEvent({type:t.type})}function g(){s.forEach((function(t,e){t.disconnect(e)})),s.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),E.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function y(t){r=t,E.setContext(l),E.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function b(t){const e=l.inputSources;for(let n=0;n<a.length;n++)s.set(e[n],a[n]);for(let n=0;n<t.removed.length;n++){const e=t.removed[n],l=s.get(e);l&&(l.dispatchEvent({type:"disconnected",data:e}),s.delete(e))}for(let n=0;n<t.added.length;n++){const e=t.added[n],l=s.get(e);l&&l.dispatchEvent({type:"connected",data:e})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=a[t];return void 0===e&&(e=new Us,a[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=a[t];return void 0===e&&(e=new Us,a[t]=e),e.getGripSpace()},this.getHand=function(t){let e=a[t];return void 0===e&&(e=new Us,a[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return r},this.getSession=function(){return l},this.setSession=function(t){if(l=t,null!==l){l.addEventListener("select",v),l.addEventListener("selectstart",v),l.addEventListener("selectend",v),l.addEventListener("squeeze",v),l.addEventListener("squeezestart",v),l.addEventListener("squeezeend",v),l.addEventListener("end",g);const t=e.getContextAttributes();!0!==t.xrCompatible&&e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:i},r=new XRWebGLLayer(l,e,n);l.updateRenderState({baseLayer:r}),l.requestReferenceSpace(o).then(y),l.addEventListener("inputsourceschange",b)}};const x=new xn,w=new xn;function _(t,e,n){x.setFromMatrixPosition(e.matrixWorld),w.setFromMatrixPosition(n.matrixWorld);const l=x.distanceTo(w),i=e.projectionMatrix.elements,r=n.projectionMatrix.elements,o=i[14]/(i[10]-1),u=i[14]/(i[10]+1),a=(i[9]+1)/i[5],s=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(r[8]+1)/r[0],d=o*c,f=o*h,p=l/(-c+h),m=p*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);const v=o+p,g=u+p,y=d-m,b=f+(l-m),_=a*u/g*v,M=s*u/g*v;t.projectionMatrix.makePerspective(y,b,_,M,v,g)}function M(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}this.getCamera=function(t){f.near=h.near=c.near=t.near,f.far=h.far=c.far=t.far,p===f.near&&m===f.far||(l.updateRenderState({depthNear:f.near,depthFar:f.far}),p=f.near,m=f.far);const e=t.parent,n=f.cameras;M(f,e);for(let l=0;l<n.length;l++)M(n[l],e);t.matrixWorld.copy(f.matrixWorld);const i=t.children;for(let l=0,r=i.length;l<r;l++)i[l].updateMatrixWorld(!0);return 2===n.length?_(f,c,h):f.projectionMatrix.copy(c.projectionMatrix),f};let S=null;function T(e,n){if(u=n.getViewerPose(r),null!==u){const e=u.views,n=l.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let i=!1;e.length!==f.cameras.length&&(f.cameras.length=0,i=!0);for(let t=0;t<e.length;t++){const l=e[t],r=n.getViewport(l),o=d[t];o.matrix.fromArray(l.transform.matrix),o.projectionMatrix.fromArray(l.projectionMatrix),o.viewport.set(r.x,r.y,r.width,r.height),0===t&&f.matrix.copy(o.matrix),!0===i&&f.cameras.push(o)}}const i=l.inputSources;for(let t=0;t<a.length;t++){const e=a[t],l=i[t];e.update(l,n,r)}S&&S(e,n)}const E=new lr;E.setAnimationLoop(T),this.setAnimationLoop=function(t){S=t},this.dispose=function(){}}function Hs(t){function e(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}function n(t,e,n,f,y){e.isMeshBasicMaterial?l(t,e):e.isMeshLambertMaterial?(l(t,e),a(t,e)):e.isMeshToonMaterial?(l(t,e),c(t,e)):e.isMeshPhongMaterial?(l(t,e),s(t,e)):e.isMeshStandardMaterial?(l(t,e,n),e.isMeshPhysicalMaterial?d(t,e,n):h(t,e,n)):e.isMeshMatcapMaterial?(l(t,e),p(t,e)):e.isMeshDepthMaterial?(l(t,e),m(t,e)):e.isMeshDistanceMaterial?(l(t,e),v(t,e)):e.isMeshNormalMaterial?(l(t,e),g(t,e)):e.isLineBasicMaterial?(i(t,e),e.isLineDashedMaterial&&r(t,e)):e.isPointsMaterial?o(t,e,f,y):e.isSpriteMaterial?u(t,e):e.isShadowMaterial?(t.color.value.copy(e.color),t.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}function l(e,n,l){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=n.envMap||l;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;var r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let o,u;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?o=n.map:n.specularMap?o=n.specularMap:n.displacementMap?o=n.displacementMap:n.normalMap?o=n.normalMap:n.bumpMap?o=n.bumpMap:n.roughnessMap?o=n.roughnessMap:n.metalnessMap?o=n.metalnessMap:n.alphaMap?o=n.alphaMap:n.emissiveMap&&(o=n.emissiveMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix)),n.aoMap?u=n.aoMap:n.lightMap&&(u=n.lightMap),void 0!==u&&(u.isWebGLRenderTarget&&(u=u.texture),!0===u.matrixAutoUpdate&&u.updateMatrix(),e.uv2Transform.value.copy(u.matrix))}function i(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}function r(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function o(t,e,n,l){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*l,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}function u(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}function a(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}function s(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function c(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function h(t,e,n){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),(e.envMap||n)&&(t.envMapIntensity.value=e.envMapIntensity)}function d(t,e,n){h(t,e,n),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===f&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}function p(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function m(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function v(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}function g(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function Gs(t){t=t||{};const e=void 0!==t.canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=void 0!==t.context?t.context:null,l=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,u=void 0===t.premultipliedAlpha||t.premultipliedAlpha,a=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,s=void 0!==t.powerPreference?t.powerPreference:"default",c=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let h=null,d=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Ue,this.physicallyCorrectLights=!1,this.toneMapping=Y,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const f=this;let p=!1,m=null,v=0,g=0,y=null,b=null,x=-1,w=null,_=null;const M=new pn,S=new pn;let T=null,E=e.width,A=e.height,C=1,O=null,L=null;const P=new pn(0,0,E,A),R=new pn(0,0,E,A);let k=!1;const I=new er,D=new Du;let N=!1,j=!1;const B=new Cn,z=new xn,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function U(){return null===y?C:1}let V,H,G,W,$,q,X,Z,J,K,Q,tt,et,nt,lt,it,rt,ot,ut,at=n;function st(t,n){for(let l=0;l<t.length;l++){const i=t[l],r=e.getContext(i,n);if(null!==r)return r}return null}try{const t={alpha:l,depth:i,stencil:r,antialias:o,premultipliedAlpha:u,preserveDrawingBuffer:a,powerPreference:s,failIfMajorPerformanceCaveat:c};if(e.addEventListener("webglcontextlost",ft,!1),e.addEventListener("webglcontextrestored",pt,!1),null===at){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),at=st(e,t),null===at)throw st(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===at.getShaderPrecisionFormat&&(at.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(kt){throw console.error("THREE.WebGLRenderer: "+kt.message),kt}function ct(){V=new Nu(at),H=new Iu(at,V,t),!1===H.isWebGL2&&(V.get("WEBGL_depth_texture"),V.get("OES_texture_float"),V.get("OES_texture_half_float"),V.get("OES_texture_half_float_linear"),V.get("OES_standard_derivatives"),V.get("OES_element_index_uint"),V.get("OES_vertex_array_object"),V.get("ANGLE_instanced_arrays")),V.get("OES_texture_float_linear"),ot=new Bs(at,V,H),G=new Ns(at,V,H),G.scissor(S.copy(R).multiplyScalar(C).floor()),G.viewport(M.copy(P).multiplyScalar(C).floor()),W=new zu(at),$=new bs,q=new js(at,V,G,$,H,ot,W),X=new ir(at,H),ut=new Ru(at,V,X,H),Z=new ju(at,X,W,ut),J=new Hu(at,Z,X,W),lt=new Vu(at),K=new ys(f,V,H,ut),Q=new Hs($),tt=new Ms($),et=new Ls,nt=new Pu(f,G,J,u),it=new ku(at,V,W,H),rt=new Bu(at,V,W,H),W.programs=K.programs,f.capabilities=H,f.extensions=V,f.properties=$,f.renderLists=tt,f.state=G,f.info=W}ct();const ht=new Vs(f,at);this.xr=ht;const dt=new Ds(f,J,H.maxTextureSize);function ft(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function pt(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1,ct()}function mt(t){const e=t.target;e.removeEventListener("dispose",mt),vt(e)}function vt(t){yt(t),$.remove(t)}function yt(t){const e=$.get(t).program;void 0!==e&&K.releaseProgram(e)}function bt(t,e){t.render((function(t){f.renderBufferImmediate(t,e)}))}this.shadowMap=dt,this.getContext=function(){return at},this.getContextAttributes=function(){return at.getContextAttributes()},this.forceContextLoss=function(){const t=V.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=V.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(t){void 0!==t&&(C=t,this.setSize(E,A,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new an),t.set(E,A)},this.setSize=function(t,n,l){ht.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=t,A=n,e.width=Math.floor(t*C),e.height=Math.floor(n*C),!1!==l&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new an),t.set(E*C,A*C).floor()},this.setDrawingBufferSize=function(t,n,l){E=t,A=n,C=l,e.width=Math.floor(t*l),e.height=Math.floor(n*l),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new pn),t.copy(M)},this.getViewport=function(t){return t.copy(P)},this.setViewport=function(t,e,n,l){t.isVector4?P.set(t.x,t.y,t.z,t.w):P.set(t,e,n,l),G.viewport(M.copy(P).multiplyScalar(C).floor())},this.getScissor=function(t){return t.copy(R)},this.setScissor=function(t,e,n,l){t.isVector4?R.set(t.x,t.y,t.z,t.w):R.set(t,e,n,l),G.scissor(S.copy(R).multiplyScalar(C).floor())},this.getScissorTest=function(){return k},this.setScissorTest=function(t){G.setScissorTest(k=t)},this.setOpaqueSort=function(t){O=t},this.setTransparentSort=function(t){L=t},this.getClearColor=function(){return nt.getClearColor()},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,n){let l=0;(void 0===t||t)&&(l|=16384),(void 0===e||e)&&(l|=256),(void 0===n||n)&&(l|=1024),at.clear(l)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ft,!1),e.removeEventListener("webglcontextrestored",pt,!1),tt.dispose(),et.dispose(),$.dispose(),J.dispose(),ut.dispose(),ht.dispose(),_t.stop()},this.renderBufferImmediate=function(t,e){ut.initAttributes();const n=$.get(t);t.hasPositions&&!n.position&&(n.position=at.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=at.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=at.createBuffer()),t.hasColors&&!n.color&&(n.color=at.createBuffer());const l=e.getAttributes();t.hasPositions&&(at.bindBuffer(34962,n.position),at.bufferData(34962,t.positionArray,35048),ut.enableAttribute(l.position),at.vertexAttribPointer(l.position,3,5126,!1,0,0)),t.hasNormals&&(at.bindBuffer(34962,n.normal),at.bufferData(34962,t.normalArray,35048),ut.enableAttribute(l.normal),at.vertexAttribPointer(l.normal,3,5126,!1,0,0)),t.hasUvs&&(at.bindBuffer(34962,n.uv),at.bufferData(34962,t.uvArray,35048),ut.enableAttribute(l.uv),at.vertexAttribPointer(l.uv,2,5126,!1,0,0)),t.hasColors&&(at.bindBuffer(34962,n.color),at.bufferData(34962,t.colorArray,35048),ut.enableAttribute(l.color),at.vertexAttribPointer(l.color,3,5126,!1,0,0)),ut.disableUnusedAttributes(),at.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,l,i,r){null===e&&(e=F);const o=i.isMesh&&i.matrixWorld.determinant()<0,u=Ot(t,e,l,i);G.setMaterial(l,o);let a=n.index;const s=n.attributes.position;if(null===a){if(void 0===s||0===s.count)return}else if(0===a.count)return;let c,h=1;!0===l.wireframe&&(a=Z.getWireframeAttribute(n),h=2),(l.morphTargets||l.morphNormals)&&lt.update(i,n,l,u),ut.setup(i,l,u,n,a);let d=it;null!==a&&(c=X.get(a),d=rt,d.setIndex(c));const f=null!==a?a.count:s.count,p=n.drawRange.start*h,m=n.drawRange.count*h,v=null!==r?r.start*h:0,g=null!==r?r.count*h:1/0,y=Math.max(p,v),b=Math.min(f,p+m,v+g)-1,x=Math.max(0,b-y+1);if(0!==x){if(i.isMesh)!0===l.wireframe?(G.setLineWidth(l.wireframeLinewidth*U()),d.setMode(1)):d.setMode(4);else if(i.isLine){let t=l.linewidth;void 0===t&&(t=1),G.setLineWidth(t*U()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(y,x,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,x,t)}else d.render(y,x)}},this.compile=function(t,e){d=et.get(t,e),d.init(),t.traverse((function(t){t.isLight&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights(e);const n=new WeakMap;t.traverse((function(e){let l=e.material;if(l)if(Array.isArray(l))for(let i=0;i<l.length;i++){let r=l[i];!1===n.has(r)&&(Ct(r,t,e),n.set(r))}else!1===n.has(l)&&(Ct(l,t,e),n.set(l))}))};let xt=null;function wt(t){ht.isPresenting||xt&&xt(t)}const _t=new lr;function Tt(t,e,n,l){if(!1===t.visible)return;const i=t.layers.test(e.layers);if(i)if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||I.intersectsSprite(t)){l&&z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(B);const e=J.update(t),i=t.material;i.visible&&h.push(t,e,i,n,z.z,null)}}else if(t.isImmediateRenderObject)l&&z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(B),h.push(t,null,t.material,n,z.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==W.render.frame&&(t.skeleton.update(),t.skeleton.frame=W.render.frame),!t.frustumCulled||I.intersectsObject(t))){l&&z.setFromMatrixPosition(t.matrixWorld).applyMatrix4(B);const e=J.update(t),i=t.material;if(Array.isArray(i)){const l=e.groups;for(let r=0,o=l.length;r<o;r++){const o=l[r],u=i[o.materialIndex];u&&u.visible&&h.push(t,e,u,n,z.z,o)}}else i.visible&&h.push(t,e,i,n,z.z,null)}const r=t.children;for(let o=0,u=r.length;o<u;o++)Tt(r[o],e,n,l)}function Et(t,e,n){const l=!0===e.isScene?e.overrideMaterial:null;for(let i=0,r=t.length;i<r;i++){const r=t[i],o=r.object,u=r.geometry,a=null===l?r.material:l,s=r.group;if(n.isArrayCamera){_=n;const t=n.cameras;for(let n=0,l=t.length;n<l;n++){const l=t[n];o.layers.test(l.layers)&&(G.viewport(M.copy(l.viewport)),d.setupLights(l),At(o,e,l,u,a,s))}}else _=null,At(o,e,n,u,a,s)}}function At(t,e,n,l,i,r){if(t.onBeforeRender(f,e,n,l,i,r),d=et.get(e,_||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const l=Ot(n,e,i,t);G.setMaterial(i),ut.reset(),bt(t,l)}else f.renderBufferDirect(n,e,l,i,t,r);t.onAfterRender(f,e,n,l,i,r),d=et.get(e,_||n)}function Ct(t,e,n){!0!==e.isScene&&(e=F);const l=$.get(t),i=d.state.lights,r=d.state.shadowsArray,o=i.state.version,u=K.getParameters(t,i.state,r,e,D.numPlanes,D.numIntersection,n),a=K.getProgramCacheKey(u);let s=l.program,c=!0;if(void 0===s)t.addEventListener("dispose",mt);else if(s.cacheKey!==a)yt(t);else if(l.lightsStateVersion!==o)l.lightsStateVersion=o,c=!1;else{if(void 0!==u.shaderID)return;c=!1}c&&(u.uniforms=K.getUniforms(t,u),t.onBeforeCompile(u,f),s=K.acquireProgram(u,a),l.program=s,l.uniforms=u.uniforms,l.outputEncoding=u.outputEncoding);const h=s.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(let e=0;e<f.maxMorphTargets;e++)h["morphTarget"+e]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(let e=0;e<f.maxMorphNormals;e++)h["morphNormal"+e]>=0&&t.numSupportedMorphNormals++}const p=l.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(l.numClippingPlanes=D.numPlanes,l.numIntersection=D.numIntersection,p.clippingPlanes=D.uniform),l.environment=t.isMeshStandardMaterial?e.environment:null,l.fog=e.fog,l.needsLights=Rt(t),l.lightsStateVersion=o,l.needsLights&&(p.ambientLightColor.value=i.state.ambient,p.lightProbe.value=i.state.probe,p.directionalLights.value=i.state.directional,p.directionalLightShadows.value=i.state.directionalShadow,p.spotLights.value=i.state.spot,p.spotLightShadows.value=i.state.spotShadow,p.rectAreaLights.value=i.state.rectArea,p.pointLights.value=i.state.point,p.pointLightShadows.value=i.state.pointShadow,p.hemisphereLights.value=i.state.hemi,p.directionalShadowMap.value=i.state.directionalShadowMap,p.directionalShadowMatrix.value=i.state.directionalShadowMatrix,p.spotShadowMap.value=i.state.spotShadowMap,p.spotShadowMatrix.value=i.state.spotShadowMatrix,p.pointShadowMap.value=i.state.pointShadowMap,p.pointShadowMatrix.value=i.state.pointShadowMatrix);const m=l.program.getUniforms(),v=Ha.seqWithValue(m.seq,p);l.uniformsList=v}function Ot(t,e,n,l){!0!==e.isScene&&(e=F),q.resetTextureUnits();const i=e.fog,r=n.isMeshStandardMaterial?e.environment:null,o=null===y?f.outputEncoding:y.texture.encoding,u=$.get(n),a=d.state.lights;if(!0===N&&(!0===j||t!==w)){const e=t===w&&n.id===x;D.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,t,u,e)}n.version===u.__version?void 0===u.program||n.fog&&u.fog!==i||u.environment!==r||u.needsLights&&u.lightsStateVersion!==a.state.version?Ct(n,e,l):void 0===u.numClippingPlanes||u.numClippingPlanes===D.numPlanes&&u.numIntersection===D.numIntersection?u.outputEncoding!==o&&Ct(n,e,l):Ct(n,e,l):(Ct(n,e,l),u.__version=n.version);let s=!1,c=!1,h=!1;const p=u.program,m=p.getUniforms(),v=u.uniforms;if(G.useProgram(p.program)&&(s=!0,c=!0,h=!0),n.id!==x&&(x=n.id,c=!0),s||w!==t){if(m.setValue(at,"projectionMatrix",t.projectionMatrix),H.logarithmicDepthBuffer&&m.setValue(at,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),w!==t&&(w=t,c=!0,h=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=m.map.cameraPosition;void 0!==e&&e.setValue(at,z.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&m.setValue(at,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&m.setValue(at,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){m.setOptional(at,l,"bindMatrix"),m.setOptional(at,l,"bindMatrixInverse");const t=l.skeleton;if(t){const e=t.bones;if(H.floatVertexTextures){if(void 0===t.boneTexture){let n=Math.sqrt(4*e.length);n=un.ceilPowerOfTwo(n),n=Math.max(n,4);const l=new Float32Array(n*n*4);l.set(t.boneMatrices);const i=new Ki(l,n,n,Pt,Mt);t.boneMatrices=l,t.boneTexture=i,t.boneTextureSize=n}m.setValue(at,"boneTexture",t.boneTexture,q),m.setValue(at,"boneTextureSize",t.boneTextureSize)}else m.setOptional(at,t,"boneMatrices")}}return(c||u.receiveShadow!==l.receiveShadow)&&(u.receiveShadow=l.receiveShadow,m.setValue(at,"receiveShadow",l.receiveShadow)),c&&(m.setValue(at,"toneMappingExposure",f.toneMappingExposure),u.needsLights&&Lt(v,h),i&&n.fog&&Q.refreshFogUniforms(v,i),Q.refreshMaterialUniforms(v,n,r,C,A),void 0!==v.ltc_1&&(v.ltc_1.value=nr.LTC_1),void 0!==v.ltc_2&&(v.ltc_2.value=nr.LTC_2),Ha.upload(at,u.uniformsList,v,q)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ha.upload(at,u.uniformsList,v,q),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&m.setValue(at,"center",l.center),m.setValue(at,"modelViewMatrix",l.modelViewMatrix),m.setValue(at,"normalMatrix",l.normalMatrix),m.setValue(at,"modelMatrix",l.matrixWorld),p}function Lt(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}function Rt(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}_t.setAnimationLoop(wt),"undefined"!==typeof window&&_t.setContext(window),this.setAnimationLoop=function(t){xt=t,ht.setAnimationLoop(t),null===t?_t.stop():_t.start()},this.render=function(t,e){let n,l;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),l=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===p)return;ut.resetDefaultState(),x=-1,w=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ht.enabled&&!0===ht.isPresenting&&(e=ht.getCamera(e)),!0===t.isScene&&t.onBeforeRender(f,t,e,n||y),d=et.get(t,e),d.init(),B.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),I.setFromProjectionMatrix(B),j=this.localClippingEnabled,N=D.init(this.clippingPlanes,j,e),h=tt.get(t,e),h.init(),Tt(t,e,0,f.sortObjects),h.finish(),!0===f.sortObjects&&h.sort(O,L),!0===N&&D.beginShadows();const i=d.state.shadowsArray;dt.render(i,t,e),d.setupLights(e),!0===N&&D.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),nt.render(h,t,e,l);const r=h.opaque,o=h.transparent;r.length>0&&Et(r,t,e),o.length>0&&Et(o,t,e),!0===t.isScene&&t.onAfterRender(f,t,e),null!==y&&(q.updateRenderTargetMipmap(y),q.updateMultisampleRenderTarget(y)),G.buffers.depth.setTest(!0),G.buffers.depth.setMask(!0),G.buffers.color.setMask(!0),G.setPolygonOffset(!1),h=null,d=null},this.setFramebuffer=function(t){m!==t&&null===y&&at.bindFramebuffer(36160,t),m=t},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return y},this.setRenderTarget=function(t,e,n){y=t,v=e,g=n,t&&void 0===$.get(t).__webglFramebuffer&&q.setupRenderTarget(t);let l=m,i=!1;if(t){const n=$.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(l=n[e||0],i=!0):l=t.isWebGLMultisampleRenderTarget?$.get(t).__webglMultisampledFramebuffer:n,M.copy(t.viewport),S.copy(t.scissor),T=t.scissorTest}else M.copy(P).multiplyScalar(C).floor(),S.copy(R).multiplyScalar(C).floor(),T=k;if(b!==l&&(at.bindFramebuffer(36160,l),b=l),G.viewport(M),G.scissor(S),G.setScissorTest(T),i){const l=$.get(t.texture);at.framebufferTexture2D(36160,36064,34069+(e||0),l.__webglTexture,n||0)}},this.readRenderTargetPixels=function(t,e,n,l,i,r,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let u=$.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(u=u[o]),u){let o=!1;u!==b&&(at.bindFramebuffer(36160,u),o=!0);try{const u=t.texture,a=u.format,s=u.type;if(a!==Pt&&ot.convert(a)!==at.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(s!==gt&&ot.convert(s)!==at.getParameter(35738)&&(s!==Mt||!(H.isWebGL2||V.get("OES_texture_float")||V.get("WEBGL_color_buffer_float")))&&(s!==St||!(H.isWebGL2?V.get("EXT_color_buffer_float"):V.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===at.checkFramebufferStatus(36160)?e>=0&&e<=t.width-l&&n>=0&&n<=t.height-i&&at.readPixels(e,n,l,i,ot.convert(a),ot.convert(s),r):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{o&&at.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(t,e,n){void 0===n&&(n=0);const l=Math.pow(2,-n),i=Math.floor(e.image.width*l),r=Math.floor(e.image.height*l),o=ot.convert(e.format);q.setTexture2D(e,0),at.copyTexImage2D(3553,n,o,t.x,t.y,i,r,0),G.unbindTexture()},this.copyTextureToTexture=function(t,e,n,l){void 0===l&&(l=0);const i=e.image.width,r=e.image.height,o=ot.convert(n.format),u=ot.convert(n.type);q.setTexture2D(n,0),at.pixelStorei(37440,n.flipY),at.pixelStorei(37441,n.premultiplyAlpha),at.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?at.texSubImage2D(3553,l,t.x,t.y,i,r,o,u,e.image.data):e.isCompressedTexture?at.compressedTexSubImage2D(3553,l,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,o,e.mipmaps[0].data):at.texSubImage2D(3553,l,t.x,t.y,o,u,e.image),0===l&&n.generateMipmaps&&at.generateMipmap(3553),G.unbindTexture()},this.initTexture=function(t){q.setTexture2D(t,0),G.unbindTexture()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Ws(t){Gs.call(this,t)}function $s(t,e){this.name="",this.color=new jl(t),this.density=void 0!==e?e:25e-5}function qs(t,e,n){this.name="",this.color=new jl(t),this.near=void 0!==e?e:1,this.far=void 0!==n?n:1e3}function Xs(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=en,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=un.generateUUID()}zs.prototype=Object.assign(Object.create(qi.prototype),{constructor:zs,isArrayCamera:!0}),Fs.prototype=Object.assign(Object.create($n.prototype),{constructor:Fs,isGroup:!0}),Object.assign(Us.prototype,{constructor:Us,getHandSpace:function(){if(null===this._hand&&(this._hand=new Fs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){let t=new Fs;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Fs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Fs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let l=null,i=null,r=null;const o=this._targetRay,u=this._grip,a=this._hand;if(t)if(t.hand){r=!0;for(let l=0;l<=window.XRHand.LITTLE_PHALANX_TIP;l++)if(t.hand[l]){let i=e.getJointPose(t.hand[l],n);const r=a.joints[l];null!==i&&(r.matrix.fromArray(i.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=i.radius),r.visible=null!==i;const o=a.joints[window.XRHand.INDEX_PHALANX_TIP],u=a.joints[window.XRHand.THUMB_PHALANX_TIP],s=o.position.distanceTo(u.position),c=.02,h=.005;a.inputState.pinching&&s>c+h?(a.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!a.inputState.pinching&&s<=c-h&&(a.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else null!==o&&(l=e.getPose(t.targetRaySpace,n),null!==l&&(o.matrix.fromArray(l.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),null!==u&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(u.matrix.fromArray(i.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale)));return null!==o&&(o.visible=null!==l),null!==u&&(u.visible=null!==i),null!==a&&(a.visible=null!==r),this}}),Object.assign(Vs.prototype,ln.prototype),Ws.prototype=Object.assign(Object.create(Gs.prototype),{constructor:Ws,isWebGL1Renderer:!0}),Object.assign($s.prototype,{isFogExp2:!0,clone:function(){return new $s(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(qs.prototype,{isFog:!0,clone:function(){return new qs(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(Xs.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Xs.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let l=0,i=this.stride;l<i;l++)this.array[t+l]=e.array[n+l];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=un.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new Xs(e,this.stride);return n.setUsage(this.usage),n},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=un.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Ys=new xn;function Zs(t,e,n,l){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===l}function Js(t){Hl.call(this),this.type="SpriteMaterial",this.color=new jl(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let Ks;Object.defineProperties(Zs.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Zs.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)Ys.x=this.getX(e),Ys.y=this.getY(e),Ys.z=this.getZ(e),Ys.applyMatrix4(t),this.setXYZ(e,Ys.x,Ys.y,Ys.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,l){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=l,this},setXYZW:function(t,e,n,l,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=l,this.data.array[t+3]=i,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new ql(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Zs(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),Js.prototype=Object.create(Hl.prototype),Js.prototype.constructor=Js,Js.prototype.isSpriteMaterial=!0,Js.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};const Qs=new xn,tc=new xn,ec=new xn,nc=new an,lc=new an,ic=new Cn,rc=new xn,oc=new xn,uc=new xn,ac=new an,sc=new an,cc=new an;function hc(t){if($n.call(this),this.type="Sprite",void 0===Ks){Ks=new di;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new Xs(t,5);Ks.setIndex([0,1,2,0,2,3]),Ks.setAttribute("position",new Zs(e,3,0,!1)),Ks.setAttribute("uv",new Zs(e,2,3,!1))}this.geometry=Ks,this.material=void 0!==t?t:new Js,this.center=new an(.5,.5)}function dc(t,e,n,l,i,r){nc.subVectors(t,n).addScalar(.5).multiply(l),void 0!==i?(lc.x=r*nc.x-i*nc.y,lc.y=i*nc.x+r*nc.y):lc.copy(nc),t.copy(e),t.x+=lc.x,t.y+=lc.y,t.applyMatrix4(ic)}hc.prototype=Object.assign(Object.create($n.prototype),{constructor:hc,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),tc.setFromMatrixScale(this.matrixWorld),ic.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ec.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&tc.multiplyScalar(-ec.z);const n=this.material.rotation;let l,i;0!==n&&(i=Math.cos(n),l=Math.sin(n));const r=this.center;dc(rc.set(-.5,-.5,0),ec,r,tc,l,i),dc(oc.set(.5,-.5,0),ec,r,tc,l,i),dc(uc.set(.5,.5,0),ec,r,tc,l,i),ac.set(0,0),sc.set(1,0),cc.set(1,1);let o=t.ray.intersectTriangle(rc,oc,uc,!1,Qs);if(null===o&&(dc(oc.set(-.5,.5,0),ec,r,tc,l,i),sc.set(0,1),o=t.ray.intersectTriangle(rc,uc,oc,!1,Qs),null===o))return;const u=t.ray.origin.distanceTo(Qs);u<t.near||u>t.far||e.push({distance:u,point:Qs.clone(),uv:kl.getUV(Qs,rc,oc,uc,ac,sc,cc,new an),face:null,object:this})},copy:function(t){return $n.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}});const fc=new xn,pc=new xn;function mc(){$n.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function vc(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Li.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Cn,this.bindMatrixInverse=new Cn}mc.prototype=Object.assign(Object.create($n.prototype),{constructor:mc,isLOD:!0,copy:function(t){$n.prototype.copy.call(this,t,!1);const e=t.levels;for(let n=0,l=e.length;n<l;n++){const t=e[n];this.addLevel(t.object.clone(),t.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);const n=this.levels;let l;for(l=0;l<n.length;l++)if(e<n[l].distance)break;return n.splice(l,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,l;for(n=1,l=e.length;n<l;n++)if(t<e[n].distance)break;return e[n-1].object}return null},raycast:function(t,e){const n=this.levels;if(n.length>0){fc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(fc);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){fc.setFromMatrixPosition(t.matrixWorld),pc.setFromMatrixPosition(this.matrixWorld);const n=fc.distanceTo(pc)/t.zoom;let l,i;for(e[0].object.visible=!0,l=1,i=e.length;l<i;l++){if(!(n>=e[l].distance))break;e[l-1].object.visible=!1,e[l].object.visible=!0}for(this._currentLevel=l-1;l<i;l++)e[l].object.visible=!1}},toJSON:function(t){const e=$n.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let l=0,i=n.length;l<i;l++){const t=n[l];e.object.levels.push({object:t.object.uuid,distance:t.distance})}return e}}),vc.prototype=Object.assign(Object.create(Li.prototype),{constructor:vc,isSkinnedMesh:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new pn,e=this.geometry.attributes.skinWeight;for(let n=0,l=e.count;n<l;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const l=1/t.manhattanLength();l!==1/0?t.multiplyScalar(l):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Li.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const t=new xn,e=new pn,n=new pn,l=new xn,i=new Cn;return function(r,o){const u=this.skeleton,a=this.geometry;e.fromBufferAttribute(a.attributes.skinIndex,r),n.fromBufferAttribute(a.attributes.skinWeight,r),t.fromBufferAttribute(a.attributes.position,r).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let s=0;s<4;s++){const r=n.getComponent(s);if(0!==r){const n=e.getComponent(s);i.multiplyMatrices(u.bones[n].matrixWorld,u.boneInverses[n]),o.addScaledVector(l.copy(t).applyMatrix4(i),r)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const gc=new Cn,yc=new Cn;function bc(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Cn)}}function xc(){$n.call(this),this.type="Bone"}Object.assign(bc.prototype,{calculateInverses:function(){this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++){const e=new Cn;this.bones[t]&&e.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(e)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.getInverse(this.boneInverses[t])}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,l=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const l=t[i]?t[i].matrixWorld:yc;gc.multiplyMatrices(l,e[i]),gc.toArray(n,16*i)}void 0!==l&&(l.needsUpdate=!0)},clone:function(){return new bc(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),xc.prototype=Object.assign(Object.create($n.prototype),{constructor:xc,isBone:!0});const wc=new Cn,_c=new Cn,Mc=[],Sc=new Li;function Tc(t,e,n){Li.call(this,t,e),this.instanceMatrix=new ql(new Float32Array(16*n),16),this.count=n,this.frustumCulled=!1}function Ec(t){Hl.call(this),this.type="LineBasicMaterial",this.color=new jl(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}Tc.prototype=Object.assign(Object.create(Li.prototype),{constructor:Tc,isInstancedMesh:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,l=this.count;if(Sc.geometry=this.geometry,Sc.material=this.material,void 0!==Sc.material)for(let i=0;i<l;i++){this.getMatrixAt(i,wc),_c.multiplyMatrices(n,wc),Sc.matrixWorld=_c,Sc.raycast(t,Mc);for(let t=0,n=Mc.length;t<n;t++){const n=Mc[t];n.instanceId=i,n.object=this,e.push(n)}Mc.length=0}},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}}),Ec.prototype=Object.create(Hl.prototype),Ec.prototype.constructor=Ec,Ec.prototype.isLineBasicMaterial=!0,Ec.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Ac=new xn,Cc=new xn,Oc=new Cn,Lc=new yl,Pc=new cl;function Rc(t,e,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),$n.call(this),this.type="Line",this.geometry=void 0!==t?t:new di,this.material=void 0!==e?e:new Ec,this.updateMorphTargets()}Rc.prototype=Object.assign(Object.create($n.prototype),{constructor:Rc,isLine:!0,copy:function(t){return $n.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,l=e.count;t<l;t++)Ac.fromBufferAttribute(e,t-1),Cc.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Ac.distanceTo(Cc);t.setAttribute("lineDistance",new ei(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let t=1,l=e.length;t<l;t++)n[t]=n[t-1],n[t]+=e[t-1].distanceTo(e[t])}return this},raycast:function(t,e){const n=this.geometry,l=this.matrixWorld,i=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Pc.copy(n.boundingSphere),Pc.applyMatrix4(l),Pc.radius+=i,!1===t.ray.intersectsSphere(Pc))return;Oc.getInverse(l),Lc.copy(t.ray).applyMatrix4(Oc);const r=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=r*r,u=new xn,a=new xn,s=new xn,c=new xn,h=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const l=n.index,i=n.attributes,r=i.position.array;if(null!==l){const n=l.array;for(let l=0,i=n.length-1;l<i;l+=h){const i=n[l],h=n[l+1];u.fromArray(r,3*i),a.fromArray(r,3*h);const d=Lc.distanceSqToSegment(u,a,c,s);if(d>o)continue;c.applyMatrix4(this.matrixWorld);const f=t.ray.origin.distanceTo(c);f<t.near||f>t.far||e.push({distance:f,point:s.clone().applyMatrix4(this.matrixWorld),index:l,face:null,faceIndex:null,object:this})}}else for(let n=0,d=r.length/3-1;n<d;n+=h){u.fromArray(r,3*n),a.fromArray(r,3*n+3);const l=Lc.distanceSqToSegment(u,a,c,s);if(l>o)continue;c.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(c);i<t.near||i>t.far||e.push({distance:i,point:s.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const l=n.vertices,i=l.length;for(let n=0;n<i-1;n+=h){const i=Lc.distanceSqToSegment(l[n],l[n+1],c,s);if(i>o)continue;c.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(c);r<t.near||r>t.far||e.push({distance:r,point:s.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const kc=new xn,Ic=new xn;function Dc(t,e){Rc.call(this,t,e),this.type="LineSegments"}function Nc(t,e){Rc.call(this,t,e),this.type="LineLoop"}function jc(t){Hl.call(this),this.type="PointsMaterial",this.color=new jl(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Dc.prototype=Object.assign(Object.create(Rc.prototype),{constructor:Dc,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,l=e.count;t<l;t+=2)kc.fromBufferAttribute(e,t),Ic.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+kc.distanceTo(Ic);t.setAttribute("lineDistance",new ei(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let t=0,l=e.length;t<l;t+=2)kc.copy(e[t]),Ic.copy(e[t+1]),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+kc.distanceTo(Ic)}return this}}),Nc.prototype=Object.assign(Object.create(Rc.prototype),{constructor:Nc,isLineLoop:!0}),jc.prototype=Object.create(Hl.prototype),jc.prototype.constructor=jc,jc.prototype.isPointsMaterial=!0,jc.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const Bc=new Cn,zc=new yl,Fc=new cl,Uc=new xn;function Vc(t,e){$n.call(this),this.type="Points",this.geometry=void 0!==t?t:new di,this.material=void 0!==e?e:new jc,this.updateMorphTargets()}function Hc(t,e,n,l,i,r,o){const u=zc.distanceSqToPoint(t);if(u<n){const n=new xn;zc.closestPointToPoint(t,n),n.applyMatrix4(l);const a=i.ray.origin.distanceTo(n);if(a<i.near||a>i.far)return;r.push({distance:a,distanceToRay:Math.sqrt(u),point:n,index:e,face:null,object:o})}}function Gc(t,e,n,l,i,r,o,u,a){fn.call(this,t,e,n,l,i,r,o,u,a),this.format=void 0!==o?o:Lt,this.minFilter=void 0!==r?r:pt,this.magFilter=void 0!==i?i:pt,this.generateMipmaps=!1;const s=this;function c(){s.needsUpdate=!0,t.requestVideoFrameCallback(c)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(c)}function Wc(t,e,n,l,i,r,o,u,a,s,c,h){fn.call(this,null,r,o,u,a,s,l,i,c,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function $c(t,e,n,l,i,r,o,u,a){fn.call(this,t,e,n,l,i,r,o,u,a),this.needsUpdate=!0}function qc(t,e,n,l,i,r,o,u,a,s){if(s=void 0!==s?s:Dt,s!==Dt&&s!==Nt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&s===Dt&&(n=xt),void 0===n&&s===Nt&&(n=Ct),fn.call(this,null,l,i,r,o,u,s,n,a),this.image={width:t,height:e},this.magFilter=void 0!==o?o:ht,this.minFilter=void 0!==u?u:ht,this.flipY=!1,this.generateMipmaps=!1}function Xc(t){di.call(this),this.type="WireframeGeometry";const e=[],n=[0,0],l={},i=["a","b","c"];if(t&&t.isGeometry){const r=t.faces;for(let t=0,e=r.length;t<e;t++){const e=r[t];for(let t=0;t<3;t++){const r=e[i[t]],o=e[i[(t+1)%3]];n[0]=Math.min(r,o),n[1]=Math.max(r,o);const u=n[0]+","+n[1];void 0===l[u]&&(l[u]={index1:n[0],index2:n[1]})}}for(const n in l){const i=l[n];let r=t.vertices[i.index1];e.push(r.x,r.y,r.z),r=t.vertices[i.index2],e.push(r.x,r.y,r.z)}}else if(t&&t.isBufferGeometry){let i=new xn;if(null!==t.index){const r=t.attributes.position,o=t.index;let u=t.groups;0===u.length&&(u=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,e=u.length;t<e;++t){const e=u[t],i=e.start,r=e.count;for(let t=i,u=i+r;t<u;t+=3)for(let e=0;e<3;e++){const i=o.getX(t+e),r=o.getX(t+(e+1)%3);n[0]=Math.min(i,r),n[1]=Math.max(i,r);const u=n[0]+","+n[1];void 0===l[u]&&(l[u]={index1:n[0],index2:n[1]})}}for(const t in l){const n=l[t];i.fromBufferAttribute(r,n.index1),e.push(i.x,i.y,i.z),i.fromBufferAttribute(r,n.index2),e.push(i.x,i.y,i.z)}}else{const n=t.attributes.position;for(let t=0,l=n.count/3;t<l;t++)for(let r=0;r<3;r++){const l=3*t+r;i.fromBufferAttribute(n,l),e.push(i.x,i.y,i.z);const o=3*t+(r+1)%3;i.fromBufferAttribute(n,o),e.push(i.x,i.y,i.z)}}}this.setAttribute("position",new ei(e,3))}function Yc(t,e,n){ji.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new Zc(t,e,n)),this.mergeVertices()}function Zc(t,e,n){di.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const l=[],i=[],r=[],o=[],u=1e-5,a=new xn,s=new xn,c=new xn,h=new xn,d=new xn;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const f=e+1;for(let p=0;p<=n;p++){const l=p/n;for(let n=0;n<=e;n++){const f=n/e;t(f,l,s),i.push(s.x,s.y,s.z),f-u>=0?(t(f-u,l,c),h.subVectors(s,c)):(t(f+u,l,c),h.subVectors(c,s)),l-u>=0?(t(f,l-u,c),d.subVectors(s,c)):(t(f,l+u,c),d.subVectors(c,s)),a.crossVectors(h,d).normalize(),r.push(a.x,a.y,a.z),o.push(f,l)}}for(let p=0;p<n;p++)for(let t=0;t<e;t++){const e=p*f+t,n=p*f+t+1,i=(p+1)*f+t+1,r=(p+1)*f+t;l.push(e,n,r),l.push(n,i,r)}this.setIndex(l),this.setAttribute("position",new ei(i,3)),this.setAttribute("normal",new ei(r,3)),this.setAttribute("uv",new ei(o,2))}function Jc(t,e,n,l){ji.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:l},this.fromBufferGeometry(new Kc(t,e,n,l)),this.mergeVertices()}function Kc(t,e,n,l){di.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:l},n=n||1,l=l||0;const i=[],r=[];function o(t){const n=new xn,l=new xn,i=new xn;for(let r=0;r<e.length;r+=3)d(e[r+0],n),d(e[r+1],l),d(e[r+2],i),u(n,l,i,t)}function u(t,e,n,l){const i=Math.pow(2,l),r=[];for(let o=0;o<=i;o++){r[o]=[];const l=t.clone().lerp(n,o/i),u=e.clone().lerp(n,o/i),a=i-o;for(let t=0;t<=a;t++)r[o][t]=0===t&&o===i?l:l.clone().lerp(u,t/a)}for(let o=0;o<i;o++)for(let t=0;t<2*(i-o)-1;t++){const e=Math.floor(t/2);t%2===0?(h(r[o][e+1]),h(r[o+1][e]),h(r[o][e])):(h(r[o][e+1]),h(r[o+1][e+1]),h(r[o+1][e]))}}function a(t){const e=new xn;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}function s(){const t=new xn;for(let e=0;e<i.length;e+=3){t.x=i[e+0],t.y=i[e+1],t.z=i[e+2];const n=m(t)/2/Math.PI+.5,l=v(t)/Math.PI+.5;r.push(n,1-l)}f(),c()}function c(){for(let t=0;t<r.length;t+=6){const e=r[t+0],n=r[t+2],l=r[t+4],i=Math.max(e,n,l),o=Math.min(e,n,l);i>.9&&o<.1&&(e<.2&&(r[t+0]+=1),n<.2&&(r[t+2]+=1),l<.2&&(r[t+4]+=1))}}function h(t){i.push(t.x,t.y,t.z)}function d(e,n){const l=3*e;n.x=t[l+0],n.y=t[l+1],n.z=t[l+2]}function f(){const t=new xn,e=new xn,n=new xn,l=new xn,o=new an,u=new an,a=new an;for(let s=0,c=0;s<i.length;s+=9,c+=6){t.set(i[s+0],i[s+1],i[s+2]),e.set(i[s+3],i[s+4],i[s+5]),n.set(i[s+6],i[s+7],i[s+8]),o.set(r[c+0],r[c+1]),u.set(r[c+2],r[c+3]),a.set(r[c+4],r[c+5]),l.copy(t).add(e).add(n).divideScalar(3);const h=m(l);p(o,c+0,t,h),p(u,c+2,e,h),p(a,c+4,n,h)}}function p(t,e,n,l){l<0&&1===t.x&&(r[e]=t.x-1),0===n.x&&0===n.z&&(r[e]=l/2/Math.PI+.5)}function m(t){return Math.atan2(t.z,-t.x)}function v(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}o(l),a(n),s(),this.setAttribute("position",new ei(i,3)),this.setAttribute("normal",new ei(i.slice(),3)),this.setAttribute("uv",new ei(r,2)),0===l?this.computeVertexNormals():this.normalizeNormals()}function Qc(t,e){ji.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new th(t,e)),this.mergeVertices()}function th(t,e){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],l=[2,1,0,0,3,2,1,3,0,2,3,1];Kc.call(this,n,l,t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function eh(t,e){ji.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new nh(t,e)),this.mergeVertices()}function nh(t,e){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],l=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Kc.call(this,n,l,t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function lh(t,e){ji.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new ih(t,e)),this.mergeVertices()}function ih(t,e){const n=(1+Math.sqrt(5))/2,l=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Kc.call(this,l,i,t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function rh(t,e){ji.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new oh(t,e)),this.mergeVertices()}function oh(t,e){const n=(1+Math.sqrt(5))/2,l=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-l,-n,0,-l,n,0,l,-n,0,l,n,-l,-n,0,-l,n,0,l,-n,0,l,n,0,-n,0,-l,n,0,-l,-n,0,l,n,0,l],r=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Kc.call(this,i,r,t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function uh(t,e,n,l,i,r){ji.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:l,closed:i},void 0!==r&&console.warn("THREE.TubeGeometry: taper has been removed.");const o=new ah(t,e,n,l,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function ah(t,e,n,l,i){di.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:l,closed:i},e=e||64,n=n||1,l=l||8,i=i||!1;const r=t.computeFrenetFrames(e,i);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const o=new xn,u=new xn,a=new an;let s=new xn;const c=[],h=[],d=[],f=[];function p(){for(let t=0;t<e;t++)m(t);m(!1===i?e:0),g(),v()}function m(i){s=t.getPointAt(i/e,s);const a=r.normals[i],d=r.binormals[i];for(let t=0;t<=l;t++){const e=t/l*Math.PI*2,i=Math.sin(e),r=-Math.cos(e);u.x=r*a.x+i*d.x,u.y=r*a.y+i*d.y,u.z=r*a.z+i*d.z,u.normalize(),h.push(u.x,u.y,u.z),o.x=s.x+n*u.x,o.y=s.y+n*u.y,o.z=s.z+n*u.z,c.push(o.x,o.y,o.z)}}function v(){for(let t=1;t<=e;t++)for(let e=1;e<=l;e++){const n=(l+1)*(t-1)+(e-1),i=(l+1)*t+(e-1),r=(l+1)*t+e,o=(l+1)*(t-1)+e;f.push(n,i,o),f.push(i,r,o)}}function g(){for(let t=0;t<=e;t++)for(let n=0;n<=l;n++)a.x=t/e,a.y=n/l,d.push(a.x,a.y)}p(),this.setIndex(f),this.setAttribute("position",new ei(c,3)),this.setAttribute("normal",new ei(h,3)),this.setAttribute("uv",new ei(d,2))}function sh(t,e,n,l,i,r,o){ji.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:l,p:i,q:r},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new ch(t,e,n,l,i,r)),this.mergeVertices()}function ch(t,e,n,l,i,r){di.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:l,p:i,q:r},t=t||1,e=e||.4,n=Math.floor(n)||64,l=Math.floor(l)||8,i=i||2,r=r||3;const o=[],u=[],a=[],s=[],c=new xn,h=new xn,d=new xn,f=new xn,p=new xn,m=new xn,v=new xn;for(let y=0;y<=n;++y){const o=y/n*i*Math.PI*2;g(o,i,r,t,d),g(o+.01,i,r,t,f),m.subVectors(f,d),v.addVectors(f,d),p.crossVectors(m,v),v.crossVectors(p,m),p.normalize(),v.normalize();for(let t=0;t<=l;++t){const i=t/l*Math.PI*2,r=-e*Math.cos(i),o=e*Math.sin(i);c.x=d.x+(r*v.x+o*p.x),c.y=d.y+(r*v.y+o*p.y),c.z=d.z+(r*v.z+o*p.z),u.push(c.x,c.y,c.z),h.subVectors(c,d).normalize(),a.push(h.x,h.y,h.z),s.push(y/n),s.push(t/l)}}for(let y=1;y<=n;y++)for(let t=1;t<=l;t++){const e=(l+1)*(y-1)+(t-1),n=(l+1)*y+(t-1),i=(l+1)*y+t,r=(l+1)*(y-1)+t;o.push(e,n,r),o.push(n,i,r)}function g(t,e,n,l,i){const r=Math.cos(t),o=Math.sin(t),u=n/e*t,a=Math.cos(u);i.x=l*(2+a)*.5*r,i.y=l*(2+a)*o*.5,i.z=l*Math.sin(u)*.5}this.setIndex(o),this.setAttribute("position",new ei(u,3)),this.setAttribute("normal",new ei(a,3)),this.setAttribute("uv",new ei(s,2))}function hh(t,e,n,l,i){ji.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:l,arc:i},this.fromBufferGeometry(new dh(t,e,n,l,i)),this.mergeVertices()}function dh(t,e,n,l,i){di.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:l,arc:i},t=t||1,e=e||.4,n=Math.floor(n)||8,l=Math.floor(l)||6,i=i||2*Math.PI;const r=[],o=[],u=[],a=[],s=new xn,c=new xn,h=new xn;for(let d=0;d<=n;d++)for(let r=0;r<=l;r++){const f=r/l*i,p=d/n*Math.PI*2;c.x=(t+e*Math.cos(p))*Math.cos(f),c.y=(t+e*Math.cos(p))*Math.sin(f),c.z=e*Math.sin(p),o.push(c.x,c.y,c.z),s.x=t*Math.cos(f),s.y=t*Math.sin(f),h.subVectors(c,s).normalize(),u.push(h.x,h.y,h.z),a.push(r/l),a.push(d/n)}for(let d=1;d<=n;d++)for(let t=1;t<=l;t++){const e=(l+1)*d+t-1,n=(l+1)*(d-1)+t-1,i=(l+1)*(d-1)+t,o=(l+1)*d+t;r.push(e,n,o),r.push(n,i,o)}this.setIndex(r),this.setAttribute("position",new ei(o,3)),this.setAttribute("normal",new ei(u,3)),this.setAttribute("uv",new ei(a,2))}Vc.prototype=Object.assign(Object.create($n.prototype),{constructor:Vc,isPoints:!0,copy:function(t){return $n.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,l=this.matrixWorld,i=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Fc.copy(n.boundingSphere),Fc.applyMatrix4(l),Fc.radius+=i,!1===t.ray.intersectsSphere(Fc))return;Bc.getInverse(l),zc.copy(t.ray).applyMatrix4(Bc);const r=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=r*r;if(n.isBufferGeometry){const i=n.index,r=n.attributes,u=r.position.array;if(null!==i){const n=i.array;for(let i=0,r=n.length;i<r;i++){const r=n[i];Uc.fromArray(u,3*r),Hc(Uc,r,o,l,t,e,this)}}else for(let n=0,a=u.length/3;n<a;n++)Uc.fromArray(u,3*n),Hc(Uc,n,o,l,t,e,this)}else{const i=n.vertices;for(let n=0,r=i.length;n<r;n++)Hc(i[n],n,o,l,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),Gc.prototype=Object.assign(Object.create(fn.prototype),{constructor:Gc,isVideoTexture:!0,update:function(){const t=this.image,e="requestVideoFrameCallback"in t;!1===e&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Wc.prototype=Object.create(fn.prototype),Wc.prototype.constructor=Wc,Wc.prototype.isCompressedTexture=!0,$c.prototype=Object.create(fn.prototype),$c.prototype.constructor=$c,$c.prototype.isCanvasTexture=!0,qc.prototype=Object.create(fn.prototype),qc.prototype.constructor=qc,qc.prototype.isDepthTexture=!0,Xc.prototype=Object.create(di.prototype),Xc.prototype.constructor=Xc,Yc.prototype=Object.create(ji.prototype),Yc.prototype.constructor=Yc,Zc.prototype=Object.create(di.prototype),Zc.prototype.constructor=Zc,Jc.prototype=Object.create(ji.prototype),Jc.prototype.constructor=Jc,Kc.prototype=Object.create(di.prototype),Kc.prototype.constructor=Kc,Qc.prototype=Object.create(ji.prototype),Qc.prototype.constructor=Qc,th.prototype=Object.create(Kc.prototype),th.prototype.constructor=th,eh.prototype=Object.create(ji.prototype),eh.prototype.constructor=eh,nh.prototype=Object.create(Kc.prototype),nh.prototype.constructor=nh,lh.prototype=Object.create(ji.prototype),lh.prototype.constructor=lh,ih.prototype=Object.create(Kc.prototype),ih.prototype.constructor=ih,rh.prototype=Object.create(ji.prototype),rh.prototype.constructor=rh,oh.prototype=Object.create(Kc.prototype),oh.prototype.constructor=oh,uh.prototype=Object.create(ji.prototype),uh.prototype.constructor=uh,ah.prototype=Object.create(di.prototype),ah.prototype.constructor=ah,ah.prototype.toJSON=function(){const t=di.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t},sh.prototype=Object.create(ji.prototype),sh.prototype.constructor=sh,ch.prototype=Object.create(di.prototype),ch.prototype.constructor=ch,hh.prototype=Object.create(ji.prototype),hh.prototype.constructor=hh,dh.prototype=Object.create(di.prototype),dh.prototype.constructor=dh;const fh={triangulate:function(t,e,n){n=n||2;let l,i,r,o,u,a,s,c=e&&e.length,h=c?e[0]*n:t.length,d=ph(t,0,h,n,!0),f=[];if(!d||d.next===d.prev)return f;if(c&&(d=wh(t,e,d,n)),t.length>80*n){l=r=t[0],i=o=t[1];for(let e=n;e<h;e+=n)u=t[e],a=t[e+1],u<l&&(l=u),a<i&&(i=a),u>r&&(r=u),a>o&&(o=a);s=Math.max(r-l,o-i),s=0!==s?1/s:0}return vh(d,f,n,l,i,s),f}};function ph(t,e,n,l,i){let r,o;if(i===Gh(t,e,n,l)>0)for(r=e;r<n;r+=l)o=Uh(r,t[r],t[r+1],o);else for(r=n-l;r>=e;r-=l)o=Uh(r,t[r],t[r+1],o);return o&&kh(o,o.next)&&(Vh(o),o=o.next),o}function mh(t,e){if(!t)return t;e||(e=t);let n,l=t;do{if(n=!1,l.steiner||!kh(l,l.next)&&0!==Rh(l.prev,l,l.next))l=l.next;else{if(Vh(l),l=e=l.prev,l===l.next)break;n=!0}}while(n||l!==e);return e}function vh(t,e,n,l,i,r,o){if(!t)return;!o&&r&&Eh(t,l,i,r);let u,a,s=t;while(t.prev!==t.next)if(u=t.prev,a=t.next,r?yh(t,l,i,r):gh(t))e.push(u.i/n),e.push(t.i/n),e.push(a.i/n),Vh(t),t=a.next,s=a.next;else if(t=a,t===s){o?1===o?(t=bh(mh(t),e,n),vh(t,e,n,l,i,r,2)):2===o&&xh(t,e,n,l,i,r):vh(mh(t),e,n,l,i,r,1);break}}function gh(t){let e=t.prev,n=t,l=t.next;if(Rh(e,n,l)>=0)return!1;let i=t.next.next;while(i!==t.prev){if(Lh(e.x,e.y,n.x,n.y,l.x,l.y,i.x,i.y)&&Rh(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function yh(t,e,n,l){let i=t.prev,r=t,o=t.next;if(Rh(i,r,o)>=0)return!1;let u=i.x<r.x?i.x<o.x?i.x:o.x:r.x<o.x?r.x:o.x,a=i.y<r.y?i.y<o.y?i.y:o.y:r.y<o.y?r.y:o.y,s=i.x>r.x?i.x>o.x?i.x:o.x:r.x>o.x?r.x:o.x,c=i.y>r.y?i.y>o.y?i.y:o.y:r.y>o.y?r.y:o.y,h=Ch(u,a,e,n,l),d=Ch(s,c,e,n,l),f=t.prevZ,p=t.nextZ;while(f&&f.z>=h&&p&&p.z<=d){if(f!==t.prev&&f!==t.next&&Lh(i.x,i.y,r.x,r.y,o.x,o.y,f.x,f.y)&&Rh(f.prev,f,f.next)>=0)return!1;if(f=f.prevZ,p!==t.prev&&p!==t.next&&Lh(i.x,i.y,r.x,r.y,o.x,o.y,p.x,p.y)&&Rh(p.prev,p,p.next)>=0)return!1;p=p.nextZ}while(f&&f.z>=h){if(f!==t.prev&&f!==t.next&&Lh(i.x,i.y,r.x,r.y,o.x,o.y,f.x,f.y)&&Rh(f.prev,f,f.next)>=0)return!1;f=f.prevZ}while(p&&p.z<=d){if(p!==t.prev&&p!==t.next&&Lh(i.x,i.y,r.x,r.y,o.x,o.y,p.x,p.y)&&Rh(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function bh(t,e,n){let l=t;do{let i=l.prev,r=l.next.next;!kh(i,r)&&Ih(i,l,l.next,r)&&Bh(i,r)&&Bh(r,i)&&(e.push(i.i/n),e.push(l.i/n),e.push(r.i/n),Vh(l),Vh(l.next),l=t=r),l=l.next}while(l!==t);return mh(l)}function xh(t,e,n,l,i,r){let o=t;do{let t=o.next.next;while(t!==o.prev){if(o.i!==t.i&&Ph(o,t)){let u=Fh(o,t);return o=mh(o,o.next),u=mh(u,u.next),vh(o,e,n,l,i,r),void vh(u,e,n,l,i,r)}t=t.next}o=o.next}while(o!==t)}function wh(t,e,n,l){let i,r,o,u,a,s=[];for(i=0,r=e.length;i<r;i++)o=e[i]*l,u=i<r-1?e[i+1]*l:t.length,a=ph(t,o,u,l,!1),a===a.next&&(a.steiner=!0),s.push(Oh(a));for(s.sort(_h),i=0;i<s.length;i++)Mh(s[i],n),n=mh(n,n.next);return n}function _h(t,e){return t.x-e.x}function Mh(t,e){if(e=Sh(t,e),e){const n=Fh(e,t);mh(e,e.next),mh(n,n.next)}}function Sh(t,e){let n,l=e,i=t.x,r=t.y,o=-1/0;do{if(r<=l.y&&r>=l.next.y&&l.next.y!==l.y){let t=l.x+(r-l.y)*(l.next.x-l.x)/(l.next.y-l.y);if(t<=i&&t>o){if(o=t,t===i){if(r===l.y)return l;if(r===l.next.y)return l.next}n=l.x<l.next.x?l:l.next}}l=l.next}while(l!==e);if(!n)return null;if(i===o)return n;let u,a=n,s=n.x,c=n.y,h=1/0;l=n;do{i>=l.x&&l.x>=s&&i!==l.x&&Lh(r<c?i:o,r,s,c,r<c?o:i,r,l.x,l.y)&&(u=Math.abs(r-l.y)/(i-l.x),Bh(l,t)&&(u<h||u===h&&(l.x>n.x||l.x===n.x&&Th(n,l)))&&(n=l,h=u)),l=l.next}while(l!==a);return n}function Th(t,e){return Rh(t.prev,t,e.prev)<0&&Rh(e.next,t,t.next)<0}function Eh(t,e,n,l){let i=t;do{null===i.z&&(i.z=Ch(i.x,i.y,e,n,l)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,Ah(i)}function Ah(t){let e,n,l,i,r,o,u,a,s=1;do{n=t,t=null,r=null,o=0;while(n){for(o++,l=n,u=0,e=0;e<s;e++)if(u++,l=l.nextZ,!l)break;a=s;while(u>0||a>0&&l)0!==u&&(0===a||!l||n.z<=l.z)?(i=n,n=n.nextZ,u--):(i=l,l=l.nextZ,a--),r?r.nextZ=i:t=i,i.prevZ=r,r=i;n=l}r.nextZ=null,s*=2}while(o>1);return t}function Ch(t,e,n,l,i){return t=32767*(t-n)*i,e=32767*(e-l)*i,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function Oh(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Lh(t,e,n,l,i,r,o,u){return(i-o)*(e-u)-(t-o)*(r-u)>=0&&(t-o)*(l-u)-(n-o)*(e-u)>=0&&(n-o)*(r-u)-(i-o)*(l-u)>=0}function Ph(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!jh(t,e)&&(Bh(t,e)&&Bh(e,t)&&zh(t,e)&&(Rh(t.prev,t,e.prev)||Rh(t,e.prev,e))||kh(t,e)&&Rh(t.prev,t,t.next)>0&&Rh(e.prev,e,e.next)>0)}function Rh(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function kh(t,e){return t.x===e.x&&t.y===e.y}function Ih(t,e,n,l){const i=Nh(Rh(t,e,n)),r=Nh(Rh(t,e,l)),o=Nh(Rh(n,l,t)),u=Nh(Rh(n,l,e));return i!==r&&o!==u||(!(0!==i||!Dh(t,n,e))||(!(0!==r||!Dh(t,l,e))||(!(0!==o||!Dh(n,t,l))||!(0!==u||!Dh(n,e,l)))))}function Dh(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Nh(t){return t>0?1:t<0?-1:0}function jh(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ih(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function Bh(t,e){return Rh(t.prev,t,t.next)<0?Rh(t,e,t.next)>=0&&Rh(t,t.prev,e)>=0:Rh(t,e,t.prev)<0||Rh(t,t.next,e)<0}function zh(t,e){let n=t,l=!1,i=(t.x+e.x)/2,r=(t.y+e.y)/2;do{n.y>r!==n.next.y>r&&n.next.y!==n.y&&i<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(l=!l),n=n.next}while(n!==t);return l}function Fh(t,e){let n=new Hh(t.i,t.x,t.y),l=new Hh(e.i,e.x,e.y),i=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,l.next=n,n.prev=l,r.next=l,l.prev=r,l}function Uh(t,e,n,l){const i=new Hh(t,e,n);return l?(i.next=l.next,i.prev=l,l.next.prev=i,l.next=i):(i.prev=i,i.next=i),i}function Vh(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Hh(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Gh(t,e,n,l){let i=0;for(let r=e,o=n-l;r<n;r+=l)i+=(t[o]-t[r])*(t[r+1]+t[o+1]),o=r;return i}const Wh={area:function(t){const e=t.length;let n=0;for(let l=e-1,i=0;i<e;l=i++)n+=t[l].x*t[i].y-t[i].x*t[l].y;return.5*n},isClockWise:function(t){return Wh.area(t)<0},triangulateShape:function(t,e){const n=[],l=[],i=[];$h(t),qh(n,t);let r=t.length;e.forEach($h);for(let u=0;u<e.length;u++)l.push(r),r+=e[u].length,qh(n,e[u]);const o=fh.triangulate(n,l);for(let u=0;u<o.length;u+=3)i.push(o.slice(u,u+3));return i}};function $h(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function qh(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function Xh(t,e){ji.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Yh(t,e)),this.mergeVertices()}function Yh(t,e){di.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,l=[],i=[];for(let o=0,u=t.length;o<u;o++){const e=t[o];r(e)}function r(t){const r=[],o=void 0!==e.curveSegments?e.curveSegments:12,u=void 0!==e.steps?e.steps:1;let a=void 0!==e.depth?e.depth:100,s=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:6,h=void 0!==e.bevelSize?e.bevelSize:c-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,f=void 0!==e.bevelSegments?e.bevelSegments:3;const p=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Zh;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),a=e.amount);let v,g,y,b,x,w=!1;p&&(v=p.getSpacedPoints(u),w=!0,s=!1,g=p.computeFrenetFrames(u,!1),y=new xn,b=new xn,x=new xn),s||(f=0,c=0,h=0,d=0);const _=t.extractPoints(o);let M=_.shape;const S=_.holes,T=!Wh.isClockWise(M);if(T){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];Wh.isClockWise(e)&&(S[t]=e.reverse())}}const E=Wh.triangulateShape(M,S),A=M;for(let e=0,n=S.length;e<n;e++){const t=S[e];M=M.concat(t)}function C(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const O=M.length,L=E.length;function P(t,e,n){let l,i,r;const o=t.x-e.x,u=t.y-e.y,a=n.x-t.x,s=n.y-t.y,c=o*o+u*u,h=o*s-u*a;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(a*a+s*s),f=e.x-u/h,p=e.y+o/h,m=n.x-s/d,v=n.y+a/d,g=((m-f)*s-(v-p)*a)/(o*s-u*a);l=f+o*g-t.x,i=p+u*g-t.y;const y=l*l+i*i;if(y<=2)return new an(l,i);r=Math.sqrt(y/2)}else{let t=!1;o>Number.EPSILON?a>Number.EPSILON&&(t=!0):o<-Number.EPSILON?a<-Number.EPSILON&&(t=!0):Math.sign(u)===Math.sign(s)&&(t=!0),t?(l=-u,i=o,r=Math.sqrt(c)):(l=o,i=u,r=Math.sqrt(c/2))}return new an(l/r,i/r)}const R=[];for(let e=0,n=A.length,l=n-1,i=e+1;e<n;e++,l++,i++)l===n&&(l=0),i===n&&(i=0),R[e]=P(A[e],A[l],A[i]);const k=[];let I,D=R.concat();for(let e=0,n=S.length;e<n;e++){const t=S[e];I=[];for(let e=0,n=t.length,l=n-1,i=e+1;e<n;e++,l++,i++)l===n&&(l=0),i===n&&(i=0),I[e]=P(t[e],t[l],t[i]);k.push(I),D=D.concat(I)}for(let e=0;e<f;e++){const t=e/f,n=c*Math.cos(t*Math.PI/2),l=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=A.length;e<i;e++){const t=C(A[e],R[e],l);F(t.x,t.y,-n)}for(let e=0,i=S.length;e<i;e++){const t=S[e];I=k[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],I[e],l);F(i.x,i.y,-n)}}}const N=h+d;for(let e=0;e<O;e++){const t=s?C(M[e],D[e],N):M[e];w?(b.copy(g.normals[0]).multiplyScalar(t.x),y.copy(g.binormals[0]).multiplyScalar(t.y),x.copy(v[0]).add(b).add(y),F(x.x,x.y,x.z)):F(t.x,t.y,0)}for(let e=1;e<=u;e++)for(let t=0;t<O;t++){const n=s?C(M[t],D[t],N):M[t];w?(b.copy(g.normals[e]).multiplyScalar(n.x),y.copy(g.binormals[e]).multiplyScalar(n.y),x.copy(v[e]).add(b).add(y),F(x.x,x.y,x.z)):F(n.x,n.y,a/u*e)}for(let e=f-1;e>=0;e--){const t=e/f,n=c*Math.cos(t*Math.PI/2),l=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=A.length;e<i;e++){const t=C(A[e],R[e],l);F(t.x,t.y,a+n)}for(let e=0,i=S.length;e<i;e++){const t=S[e];I=k[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],I[e],l);w?F(i.x,i.y+v[u-1].y,v[u-1].x+n):F(i.x,i.y,a+n)}}}function j(){const t=l.length/3;if(s){let t=0,e=O*t;for(let n=0;n<L;n++){const t=E[n];U(t[2]+e,t[1]+e,t[0]+e)}t=u+2*f,e=O*t;for(let n=0;n<L;n++){const t=E[n];U(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<L;t++){const e=E[t];U(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=E[t];U(e[0]+O*u,e[1]+O*u,e[2]+O*u)}}n.addGroup(t,l.length/3-t,0)}function B(){const t=l.length/3;let e=0;z(A,e),e+=A.length;for(let n=0,l=S.length;n<l;n++){const t=S[n];z(t,e),e+=t.length}n.addGroup(t,l.length/3-t,1)}function z(t,e){let n=t.length;while(--n>=0){const l=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=u+2*f;t<n;t++){const n=O*t,r=O*(t+1),o=e+l+n,u=e+i+n,a=e+i+r,s=e+l+r;V(o,u,a,s)}}}function F(t,e,n){r.push(t),r.push(e),r.push(n)}function U(t,e,i){H(t),H(e),H(i);const r=l.length/3,o=m.generateTopUV(n,l,r-3,r-2,r-1);G(o[0]),G(o[1]),G(o[2])}function V(t,e,i,r){H(t),H(e),H(r),H(e),H(i),H(r);const o=l.length/3,u=m.generateSideWallUV(n,l,o-6,o-3,o-2,o-1);G(u[0]),G(u[1]),G(u[3]),G(u[1]),G(u[2]),G(u[3])}function H(t){l.push(r[3*t+0]),l.push(r[3*t+1]),l.push(r[3*t+2])}function G(t){i.push(t.x),i.push(t.y)}j(),B()}this.setAttribute("position",new ei(l,3)),this.setAttribute("uv",new ei(i,2)),this.computeVertexNormals()}Xh.prototype=Object.create(ji.prototype),Xh.prototype.constructor=Xh,Xh.prototype.toJSON=function(){const t=ji.prototype.toJSON.call(this),e=this.parameters.shapes,n=this.parameters.options;return Jh(e,n,t)},Yh.prototype=Object.create(di.prototype),Yh.prototype.constructor=Yh,Yh.prototype.toJSON=function(){const t=di.prototype.toJSON.call(this),e=this.parameters.shapes,n=this.parameters.options;return Jh(e,n,t)};const Zh={generateTopUV:function(t,e,n,l,i){const r=e[3*n],o=e[3*n+1],u=e[3*l],a=e[3*l+1],s=e[3*i],c=e[3*i+1];return[new an(r,o),new an(u,a),new an(s,c)]},generateSideWallUV:function(t,e,n,l,i,r){const o=e[3*n],u=e[3*n+1],a=e[3*n+2],s=e[3*l],c=e[3*l+1],h=e[3*l+2],d=e[3*i],f=e[3*i+1],p=e[3*i+2],m=e[3*r],v=e[3*r+1],g=e[3*r+2];return Math.abs(u-c)<.01?[new an(o,1-a),new an(s,1-h),new an(d,1-p),new an(m,1-g)]:[new an(u,1-a),new an(c,1-h),new an(f,1-p),new an(v,1-g)]}};function Jh(t,e,n){if(n.shapes=[],Array.isArray(t))for(let l=0,i=t.length;l<i;l++){const e=t[l];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function Kh(t,e){ji.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Qh(t,e)),this.mergeVertices()}function Qh(t,e){e=e||{};const n=e.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ji;const l=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),Yh.call(this,l,e),this.type="TextBufferGeometry"}function td(t,e,n,l,i,r,o){ji.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:l,phiLength:i,thetaStart:r,thetaLength:o},this.fromBufferGeometry(new ed(t,e,n,l,i,r,o)),this.mergeVertices()}function ed(t,e,n,l,i,r,o){di.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:l,phiLength:i,thetaStart:r,thetaLength:o},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),l=void 0!==l?l:0,i=void 0!==i?i:2*Math.PI,r=void 0!==r?r:0,o=void 0!==o?o:Math.PI;const u=Math.min(r+o,Math.PI);let a=0;const s=[],c=new xn,h=new xn,d=[],f=[],p=[],m=[];for(let v=0;v<=n;v++){const d=[],g=v/n;let y=0;0==v&&0==r?y=.5/e:v==n&&u==Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const u=n/e;c.x=-t*Math.cos(l+u*i)*Math.sin(r+g*o),c.y=t*Math.cos(r+g*o),c.z=t*Math.sin(l+u*i)*Math.sin(r+g*o),f.push(c.x,c.y,c.z),h.copy(c).normalize(),p.push(h.x,h.y,h.z),m.push(u+y,1-g),d.push(a++)}s.push(d)}for(let v=0;v<n;v++)for(let t=0;t<e;t++){const e=s[v][t+1],l=s[v][t],i=s[v+1][t],o=s[v+1][t+1];(0!==v||r>0)&&d.push(e,l,o),(v!==n-1||u<Math.PI)&&d.push(l,i,o)}this.setIndex(d),this.setAttribute("position",new ei(f,3)),this.setAttribute("normal",new ei(p,3)),this.setAttribute("uv",new ei(m,2))}function nd(t,e,n,l,i,r){ji.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:l,thetaStart:i,thetaLength:r},this.fromBufferGeometry(new ld(t,e,n,l,i,r)),this.mergeVertices()}function ld(t,e,n,l,i,r){di.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:l,thetaStart:i,thetaLength:r},t=t||.5,e=e||1,i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI,n=void 0!==n?Math.max(3,n):8,l=void 0!==l?Math.max(1,l):1;const o=[],u=[],a=[],s=[];let c=t;const h=(e-t)/l,d=new xn,f=new an;for(let p=0;p<=l;p++){for(let t=0;t<=n;t++){const l=i+t/n*r;d.x=c*Math.cos(l),d.y=c*Math.sin(l),u.push(d.x,d.y,d.z),a.push(0,0,1),f.x=(d.x/e+1)/2,f.y=(d.y/e+1)/2,s.push(f.x,f.y)}c+=h}for(let p=0;p<l;p++){const t=p*(n+1);for(let e=0;e<n;e++){const l=e+t,i=l,r=l+n+1,u=l+n+2,a=l+1;o.push(i,r,a),o.push(r,u,a)}}this.setIndex(o),this.setAttribute("position",new ei(u,3)),this.setAttribute("normal",new ei(a,3)),this.setAttribute("uv",new ei(s,2))}function id(t,e,n,l){ji.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:l},this.fromBufferGeometry(new rd(t,e,n,l)),this.mergeVertices()}function rd(t,e,n,l){di.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:l},e=Math.floor(e)||12,n=n||0,l=l||2*Math.PI,l=un.clamp(l,0,2*Math.PI);const i=[],r=[],o=[],u=1/e,a=new xn,s=new an;for(let c=0;c<=e;c++){const i=n+c*u*l,h=Math.sin(i),d=Math.cos(i);for(let n=0;n<=t.length-1;n++)a.x=t[n].x*h,a.y=t[n].y,a.z=t[n].x*d,r.push(a.x,a.y,a.z),s.x=c/e,s.y=n/(t.length-1),o.push(s.x,s.y)}for(let c=0;c<e;c++)for(let e=0;e<t.length-1;e++){const n=e+c*t.length,l=n,r=n+t.length,o=n+t.length+1,u=n+1;i.push(l,r,u),i.push(r,o,u)}if(this.setIndex(i),this.setAttribute("position",new ei(r,3)),this.setAttribute("uv",new ei(o,2)),this.computeVertexNormals(),l===2*Math.PI){const n=this.attributes.normal.array,l=new xn,i=new xn,r=new xn,o=e*t.length*3;for(let e=0,u=0;e<t.length;e++,u+=3)l.x=n[u+0],l.y=n[u+1],l.z=n[u+2],i.x=n[o+u+0],i.y=n[o+u+1],i.z=n[o+u+2],r.addVectors(l,i).normalize(),n[u+0]=n[o+u+0]=r.x,n[u+1]=n[o+u+1]=r.y,n[u+2]=n[o+u+2]=r.z}}function od(t,e){ji.call(this),this.type="ShapeGeometry","object"===typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new ud(t,e)),this.mergeVertices()}function ud(t,e){di.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;const n=[],l=[],i=[],r=[];let o=0,u=0;if(!1===Array.isArray(t))a(t);else for(let s=0;s<t.length;s++)a(t[s]),this.addGroup(o,u,s),o+=u,u=0;function a(t){const o=l.length/3,a=t.extractPoints(e);let s=a.shape;const c=a.holes;!1===Wh.isClockWise(s)&&(s=s.reverse());for(let e=0,n=c.length;e<n;e++){const t=c[e];!0===Wh.isClockWise(t)&&(c[e]=t.reverse())}const h=Wh.triangulateShape(s,c);for(let e=0,n=c.length;e<n;e++){const t=c[e];s=s.concat(t)}for(let e=0,n=s.length;e<n;e++){const t=s[e];l.push(t.x,t.y,0),i.push(0,0,1),r.push(t.x,t.y)}for(let e=0,l=h.length;e<l;e++){const t=h[e],l=t[0]+o,i=t[1]+o,r=t[2]+o;n.push(l,i,r),u+=3}}this.setIndex(n),this.setAttribute("position",new ei(l,3)),this.setAttribute("normal",new ei(i,3)),this.setAttribute("uv",new ei(r,2))}function ad(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,l=t.length;n<l;n++){const l=t[n];e.shapes.push(l.uuid)}else e.shapes.push(t.uuid);return e}function sd(t,e){di.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;const n=[],l=Math.cos(un.DEG2RAD*e),i=[0,0],r={};let o,u,a;const s=["a","b","c"];let c;t.isBufferGeometry?(c=new ji,c.fromBufferGeometry(t)):c=t.clone(),c.mergeVertices(),c.computeFaceNormals();const h=c.vertices,d=c.faces;for(let f=0,p=d.length;f<p;f++){const t=d[f];for(let e=0;e<3;e++)o=t[s[e]],u=t[s[(e+1)%3]],i[0]=Math.min(o,u),i[1]=Math.max(o,u),a=i[0]+","+i[1],void 0===r[a]?r[a]={index1:i[0],index2:i[1],face1:f,face2:void 0}:r[a].face2=f}for(a in r){const t=r[a];if(void 0===t.face2||d[t.face1].normal.dot(d[t.face2].normal)<=l){let e=h[t.index1];n.push(e.x,e.y,e.z),e=h[t.index2],n.push(e.x,e.y,e.z)}}this.setAttribute("position",new ei(n,3))}function cd(t,e,n,l,i,r,o,u){ji.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:l,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:u},this.fromBufferGeometry(new hd(t,e,n,l,i,r,o,u)),this.mergeVertices()}function hd(t,e,n,l,i,r,o,u){di.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:l,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:u};const a=this;t=void 0!==t?t:1,e=void 0!==e?e:1,n=n||1,l=Math.floor(l)||8,i=Math.floor(i)||1,r=void 0!==r&&r,o=void 0!==o?o:0,u=void 0!==u?u:2*Math.PI;const s=[],c=[],h=[],d=[];let f=0;const p=[],m=n/2;let v=0;function g(){const r=new xn,g=new xn;let y=0;const b=(e-t)/n;for(let a=0;a<=i;a++){const s=[],v=a/i,y=v*(e-t)+t;for(let t=0;t<=l;t++){const e=t/l,i=e*u+o,a=Math.sin(i),p=Math.cos(i);g.x=y*a,g.y=-v*n+m,g.z=y*p,c.push(g.x,g.y,g.z),r.set(a,b,p).normalize(),h.push(r.x,r.y,r.z),d.push(e,1-v),s.push(f++)}p.push(s)}for(let t=0;t<l;t++)for(let e=0;e<i;e++){const n=p[e][t],l=p[e+1][t],i=p[e+1][t+1],r=p[e][t+1];s.push(n,l,r),s.push(l,i,r),y+=6}a.addGroup(v,y,0),v+=y}function y(n){let i,r;const p=new an,g=new xn;let y=0;const b=!0===n?t:e,x=!0===n?1:-1;i=f;for(let t=1;t<=l;t++)c.push(0,m*x,0),h.push(0,x,0),d.push(.5,.5),f++;r=f;for(let t=0;t<=l;t++){const e=t/l,n=e*u+o,i=Math.cos(n),r=Math.sin(n);g.x=b*r,g.y=m*x,g.z=b*i,c.push(g.x,g.y,g.z),h.push(0,x,0),p.x=.5*i+.5,p.y=.5*r*x+.5,d.push(p.x,p.y),f++}for(let t=0;t<l;t++){const e=i+t,l=r+t;!0===n?s.push(l,l+1,e):s.push(l+1,l,e),y+=3}a.addGroup(v,y,!0===n?1:2),v+=y}g(),!1===r&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(s),this.setAttribute("position",new ei(c,3)),this.setAttribute("normal",new ei(h,3)),this.setAttribute("uv",new ei(d,2))}function dd(t,e,n,l,i,r,o){cd.call(this,0,t,e,n,l,i,r,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:l,openEnded:i,thetaStart:r,thetaLength:o}}function fd(t,e,n,l,i,r,o){hd.call(this,0,t,e,n,l,i,r,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:l,openEnded:i,thetaStart:r,thetaLength:o}}function pd(t,e,n,l){ji.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:l},this.fromBufferGeometry(new md(t,e,n,l)),this.mergeVertices()}function md(t,e,n,l){di.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:l},t=t||1,e=void 0!==e?Math.max(3,e):8,n=void 0!==n?n:0,l=void 0!==l?l:2*Math.PI;const i=[],r=[],o=[],u=[],a=new xn,s=new an;r.push(0,0,0),o.push(0,0,1),u.push(.5,.5);for(let c=0,h=3;c<=e;c++,h+=3){const i=n+c/e*l;a.x=t*Math.cos(i),a.y=t*Math.sin(i),r.push(a.x,a.y,a.z),o.push(0,0,1),s.x=(r[h]/t+1)/2,s.y=(r[h+1]/t+1)/2,u.push(s.x,s.y)}for(let c=1;c<=e;c++)i.push(c,c+1,0);this.setIndex(i),this.setAttribute("position",new ei(r,3)),this.setAttribute("normal",new ei(o,3)),this.setAttribute("uv",new ei(u,2))}Kh.prototype=Object.create(ji.prototype),Kh.prototype.constructor=Kh,Qh.prototype=Object.create(Yh.prototype),Qh.prototype.constructor=Qh,td.prototype=Object.create(ji.prototype),td.prototype.constructor=td,ed.prototype=Object.create(di.prototype),ed.prototype.constructor=ed,nd.prototype=Object.create(ji.prototype),nd.prototype.constructor=nd,ld.prototype=Object.create(di.prototype),ld.prototype.constructor=ld,id.prototype=Object.create(ji.prototype),id.prototype.constructor=id,rd.prototype=Object.create(di.prototype),rd.prototype.constructor=rd,od.prototype=Object.create(ji.prototype),od.prototype.constructor=od,od.prototype.toJSON=function(){const t=ji.prototype.toJSON.call(this),e=this.parameters.shapes;return ad(e,t)},ud.prototype=Object.create(di.prototype),ud.prototype.constructor=ud,ud.prototype.toJSON=function(){const t=di.prototype.toJSON.call(this),e=this.parameters.shapes;return ad(e,t)},sd.prototype=Object.create(di.prototype),sd.prototype.constructor=sd,cd.prototype=Object.create(ji.prototype),cd.prototype.constructor=cd,hd.prototype=Object.create(di.prototype),hd.prototype.constructor=hd,dd.prototype=Object.create(cd.prototype),dd.prototype.constructor=dd,fd.prototype=Object.create(hd.prototype),fd.prototype.constructor=fd,pd.prototype=Object.create(ji.prototype),pd.prototype.constructor=pd,md.prototype=Object.create(di.prototype),md.prototype.constructor=md;var vd=Object.freeze({__proto__:null,WireframeGeometry:Xc,ParametricGeometry:Yc,ParametricBufferGeometry:Zc,TetrahedronGeometry:Qc,TetrahedronBufferGeometry:th,OctahedronGeometry:eh,OctahedronBufferGeometry:nh,IcosahedronGeometry:lh,IcosahedronBufferGeometry:ih,DodecahedronGeometry:rh,DodecahedronBufferGeometry:oh,PolyhedronGeometry:Jc,PolyhedronBufferGeometry:Kc,TubeGeometry:uh,TubeBufferGeometry:ah,TorusKnotGeometry:sh,TorusKnotBufferGeometry:ch,TorusGeometry:hh,TorusBufferGeometry:dh,TextGeometry:Kh,TextBufferGeometry:Qh,SphereGeometry:td,SphereBufferGeometry:ed,RingGeometry:nd,RingBufferGeometry:ld,PlaneGeometry:rr,PlaneBufferGeometry:or,LatheGeometry:id,LatheBufferGeometry:rd,ShapeGeometry:od,ShapeBufferGeometry:ud,ExtrudeGeometry:Xh,ExtrudeBufferGeometry:Yh,EdgesGeometry:sd,ConeGeometry:dd,ConeBufferGeometry:fd,CylinderGeometry:cd,CylinderBufferGeometry:hd,CircleGeometry:pd,CircleBufferGeometry:md,BoxGeometry:Bi,BoxBufferGeometry:zi});function gd(t){Hl.call(this),this.type="ShadowMaterial",this.color=new jl(0),this.transparent=!0,this.setValues(t)}function yd(t){Wi.call(this,t),this.type="RawShaderMaterial"}function bd(t){Hl.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new jl(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Je,this.normalScale=new an(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function xd(t){bd.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new an(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function wd(t){Hl.call(this),this.type="MeshPhongMaterial",this.color=new jl(16777215),this.specular=new jl(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Je,this.normalScale=new an(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function _d(t){Hl.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new jl(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Je,this.normalScale=new an(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Md(t){Hl.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Je,this.normalScale=new an(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Sd(t){Hl.call(this),this.type="MeshLambertMaterial",this.color=new jl(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Td(t){Hl.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new jl(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Je,this.normalScale=new an(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ed(t){Ec.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}gd.prototype=Object.create(Hl.prototype),gd.prototype.constructor=gd,gd.prototype.isShadowMaterial=!0,gd.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this},yd.prototype=Object.create(Wi.prototype),yd.prototype.constructor=yd,yd.prototype.isRawShaderMaterial=!0,bd.prototype=Object.create(Hl.prototype),bd.prototype.constructor=bd,bd.prototype.isMeshStandardMaterial=!0,bd.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this},xd.prototype=Object.create(bd.prototype),xd.prototype.constructor=xd,xd.prototype.isMeshPhysicalMaterial=!0,xd.prototype.copy=function(t){return bd.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new jl).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this},wd.prototype=Object.create(Hl.prototype),wd.prototype.constructor=wd,wd.prototype.isMeshPhongMaterial=!0,wd.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},_d.prototype=Object.create(Hl.prototype),_d.prototype.constructor=_d,_d.prototype.isMeshToonMaterial=!0,_d.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Md.prototype=Object.create(Hl.prototype),Md.prototype.constructor=Md,Md.prototype.isMeshNormalMaterial=!0,Md.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Sd.prototype=Object.create(Hl.prototype),Sd.prototype.constructor=Sd,Sd.prototype.isMeshLambertMaterial=!0,Sd.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Td.prototype=Object.create(Hl.prototype),Td.prototype.constructor=Td,Td.prototype.isMeshMatcapMaterial=!0,Td.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Ed.prototype=Object.create(Ec.prototype),Ed.prototype.constructor=Ed,Ed.prototype.isLineDashedMaterial=!0,Ed.prototype.copy=function(t){return Ec.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Ad=Object.freeze({__proto__:null,ShadowMaterial:gd,SpriteMaterial:Js,RawShaderMaterial:yd,ShaderMaterial:Wi,PointsMaterial:jc,MeshPhysicalMaterial:xd,MeshStandardMaterial:bd,MeshPhongMaterial:wd,MeshToonMaterial:_d,MeshNormalMaterial:Md,MeshLambertMaterial:Sd,MeshDepthMaterial:Ps,MeshDistanceMaterial:Rs,MeshBasicMaterial:Gl,MeshMatcapMaterial:Td,LineDashedMaterial:Ed,LineBasicMaterial:Ec,Material:Hl});const Cd={arraySlice:function(t,e,n){return Cd.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"===typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(e,n){return t[e]-t[n]}const n=t.length,l=new Array(n);for(let i=0;i!==n;++i)l[i]=i;return l.sort(e),l},sortedArray:function(t,e,n){const l=t.length,i=new t.constructor(l);for(let r=0,o=0;o!==l;++r){const l=n[r]*e;for(let n=0;n!==e;++n)i[o++]=t[l+n]}return i},flattenJSON:function(t,e,n,l){let i=1,r=t[0];while(void 0!==r&&void 0===r[l])r=t[i++];if(void 0===r)return;let o=r[l];if(void 0!==o)if(Array.isArray(o))do{o=r[l],void 0!==o&&(e.push(r.time),n.push.apply(n,o)),r=t[i++]}while(void 0!==r);else if(void 0!==o.toArray)do{o=r[l],void 0!==o&&(e.push(r.time),o.toArray(n,n.length)),r=t[i++]}while(void 0!==r);else do{o=r[l],void 0!==o&&(e.push(r.time),n.push(o)),r=t[i++]}while(void 0!==r)},subclip:function(t,e,n,l,i){i=i||30;const r=t.clone();r.name=e;const o=[];for(let a=0;a<r.tracks.length;++a){const t=r.tracks[a],e=t.getValueSize(),u=[],s=[];for(let r=0;r<t.times.length;++r){const o=t.times[r]*i;if(!(o<n||o>=l)){u.push(t.times[r]);for(let n=0;n<e;++n)s.push(t.values[r*e+n])}}0!==u.length&&(t.times=Cd.convertArray(u,t.times.constructor),t.values=Cd.convertArray(s,t.values.constructor),o.push(t))}r.tracks=o;let u=1/0;for(let a=0;a<r.tracks.length;++a)u>r.tracks[a].times[0]&&(u=r.tracks[a].times[0]);for(let a=0;a<r.tracks.length;++a)r.tracks[a].shift(-1*u);return r.resetDuration(),r},makeClipAdditive:function(t,e,n,l){void 0===e&&(e=0),void 0===n&&(n=t),(void 0===l||l<=0)&&(l=30);const i=t.tracks.length,r=e/l;for(let o=0;o<i;++o){const e=n.tracks[o],l=e.ValueTypeName;if("bool"===l||"string"===l)continue;const i=t.tracks.find((function(t){return t.name===e.name&&t.ValueTypeName===l}));if(void 0===i)continue;const u=e.getValueSize(),a=e.times.length-1;let s;if(r<=e.times[0])s=Cd.arraySlice(e.values,0,e.valueSize);else if(r>=e.times[a]){const t=a*u;s=Cd.arraySlice(e.values,t)}else{const t=e.createInterpolant();t.evaluate(r),s=t.resultBuffer}if("quaternion"===l){const t=new gn(s[0],s[1],s[2],s[3]).normalize().conjugate();t.toArray(s)}const c=i.times.length;for(let t=0;t<c;++t){const e=t*u;if("quaternion"===l)gn.multiplyQuaternionsFlat(i.values,e,s,0,i.values,e);else for(let t=0;t<u;++t)i.values[e+t]-=s[t]}}return t.blendMode=ze,t}};function Od(t,e,n,l){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==l?l:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Ld(t,e,n,l){Od.call(this,t,e,n,l),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Pd(t,e,n,l){Od.call(this,t,e,n,l)}function Rd(t,e,n,l){Od.call(this,t,e,n,l)}function kd(t,e,n,l){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Cd.convertArray(e,this.TimeBufferType),this.values=Cd.convertArray(n,this.ValueBufferType),this.setInterpolation(l||this.DefaultInterpolation)}function Id(t,e,n){kd.call(this,t,e,n)}function Dd(t,e,n,l){kd.call(this,t,e,n,l)}function Nd(t,e,n,l){kd.call(this,t,e,n,l)}function jd(t,e,n,l){Od.call(this,t,e,n,l)}function Bd(t,e,n,l){kd.call(this,t,e,n,l)}function zd(t,e,n,l){kd.call(this,t,e,n,l)}function Fd(t,e,n,l){kd.call(this,t,e,n,l)}function Ud(t,e,n,l){this.name=t,this.tracks=n,this.duration=void 0!==e?e:-1,this.blendMode=void 0!==l?l:Be,this.uuid=un.generateUUID(),this.duration<0&&this.resetDuration()}function Vd(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Nd;case"vector":case"vector2":case"vector3":case"vector4":return Fd;case"color":return Dd;case"quaternion":return Bd;case"bool":case"boolean":return Id;case"string":return zd}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function Hd(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Vd(t.type);if(void 0===t.times){const e=[],n=[];Cd.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Od.prototype,{evaluate:function(t){let e=this.parameterPositions,n=this._cachedIndex,l=e[n],i=e[n-1];t:{e:{let r;n:{l:if(!(t<l)){for(let r=n+2;;){if(void 0===l){if(t<i)break l;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===r)break;if(i=l,l=e[++n],t<l)break e}r=e.length;break n}if(t>=i)break t;{const o=e[1];t<o&&(n=2,i=o);for(let r=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,l);if(n===r)break;if(l=i,i=e[--n-1],t>=i)break e}r=n,n=0}}while(n<r){const l=n+r>>>1;t<e[l]?r=l:n=l+1}if(l=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,l);if(void 0===l)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,l)}return this.interpolate_(n,i,t,l)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,l=this.valueSize,i=t*l;for(let r=0;r!==l;++r)e[r]=n[i+r];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Od.prototype,{beforeStart_:Od.prototype.copySampleValue_,afterEnd_:Od.prototype.copySampleValue_}),Ld.prototype=Object.assign(Object.create(Od.prototype),{constructor:Ld,DefaultSettings_:{endingStart:De,endingEnd:De},intervalChanged_:function(t,e,n){let l=this.parameterPositions,i=t-2,r=t+1,o=l[i],u=l[r];if(void 0===o)switch(this.getSettings_().endingStart){case Ne:i=t,o=2*e-n;break;case je:i=l.length-2,o=e+l[i]-l[i+1];break;default:i=t,o=n}if(void 0===u)switch(this.getSettings_().endingEnd){case Ne:r=t,u=2*n-e;break;case je:r=1,u=n+l[1]-l[0];break;default:r=t-1,u=e}const a=.5*(n-e),s=this.valueSize;this._weightPrev=a/(e-o),this._weightNext=a/(u-n),this._offsetPrev=i*s,this._offsetNext=r*s},interpolate_:function(t,e,n,l){const i=this.resultBuffer,r=this.sampleValues,o=this.valueSize,u=t*o,a=u-o,s=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,f=(n-e)/(l-e),p=f*f,m=p*f,v=-h*m+2*h*p-h*f,g=(1+h)*m+(-1.5-2*h)*p+(-.5+h)*f+1,y=(-1-d)*m+(1.5+d)*p+.5*f,b=d*m-d*p;for(let x=0;x!==o;++x)i[x]=v*r[s+x]+g*r[a+x]+y*r[u+x]+b*r[c+x];return i}}),Pd.prototype=Object.assign(Object.create(Od.prototype),{constructor:Pd,interpolate_:function(t,e,n,l){const i=this.resultBuffer,r=this.sampleValues,o=this.valueSize,u=t*o,a=u-o,s=(n-e)/(l-e),c=1-s;for(let h=0;h!==o;++h)i[h]=r[a+h]*c+r[u+h]*s;return i}}),Rd.prototype=Object.assign(Object.create(Od.prototype),{constructor:Rd,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(kd,{toJSON:function(t){const e=t.constructor;let n;if(void 0!==e.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Cd.convertArray(t.times,Array),values:Cd.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}}),Object.assign(kd.prototype,{constructor:kd,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:ke,InterpolantFactoryMethodDiscrete:function(t){return new Rd(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Pd(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Ld(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case Re:e=this.InterpolantFactoryMethodDiscrete;break;case ke:e=this.InterpolantFactoryMethodLinear;break;case Ie:e=this.InterpolantFactoryMethodSmooth;break}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Re;case this.InterpolantFactoryMethodLinear:return ke;case this.InterpolantFactoryMethodSmooth:return Ie}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t){const e=this.times;for(let n=0,l=e.length;n!==l;++n)e[n]+=t}return this},scale:function(t){if(1!==t){const e=this.times;for(let n=0,l=e.length;n!==l;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,l=n.length;let i=0,r=l-1;while(i!==l&&n[i]<t)++i;while(-1!==r&&n[r]>e)--r;if(++r,0!==i||r!==l){i>=r&&(r=Math.max(r,1),i=r-1);const t=this.getValueSize();this.times=Cd.arraySlice(n,i,r),this.values=Cd.arraySlice(this.values,i*t,r*t)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,l=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let o=0;o!==i;o++){const e=n[o];if("number"===typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,e),t=!1;break}if(null!==r&&r>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,e,r),t=!1;break}r=e}if(void 0!==l&&Cd.isTypedArray(l))for(let o=0,u=l.length;o!==u;++o){const e=l[o];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,e),t=!1;break}}return t},optimize:function(){const t=Cd.arraySlice(this.times),e=Cd.arraySlice(this.values),n=this.getValueSize(),l=this.getInterpolation()===Ie,i=t.length-1;let r=1;for(let o=1;o<i;++o){let i=!1;const u=t[o],a=t[o+1];if(u!==a&&(1!==o||u!==u[0]))if(l)i=!0;else{const t=o*n,l=t-n,r=t+n;for(let o=0;o!==n;++o){const n=e[t+o];if(n!==e[l+o]||n!==e[r+o]){i=!0;break}}}if(i){if(o!==r){t[r]=t[o];const l=o*n,i=r*n;for(let t=0;t!==n;++t)e[i+t]=e[l+t]}++r}}if(i>0){t[r]=t[i];for(let t=i*n,l=r*n,o=0;o!==n;++o)e[l+o]=e[t+o];++r}return r!==t.length?(this.times=Cd.arraySlice(t,0,r),this.values=Cd.arraySlice(e,0,r*n)):(this.times=t,this.values=e),this},clone:function(){const t=Cd.arraySlice(this.times,0),e=Cd.arraySlice(this.values,0),n=this.constructor,l=new n(this.name,t,e);return l.createInterpolant=this.createInterpolant,l}}),Id.prototype=Object.assign(Object.create(kd.prototype),{constructor:Id,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Re,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Dd.prototype=Object.assign(Object.create(kd.prototype),{constructor:Dd,ValueTypeName:"color"}),Nd.prototype=Object.assign(Object.create(kd.prototype),{constructor:Nd,ValueTypeName:"number"}),jd.prototype=Object.assign(Object.create(Od.prototype),{constructor:jd,interpolate_:function(t,e,n,l){const i=this.resultBuffer,r=this.sampleValues,o=this.valueSize,u=(n-e)/(l-e);let a=t*o;for(let s=a+o;a!==s;a+=4)gn.slerpFlat(i,0,r,a-o,r,a,u);return i}}),Bd.prototype=Object.assign(Object.create(kd.prototype),{constructor:Bd,ValueTypeName:"quaternion",DefaultInterpolation:ke,InterpolantFactoryMethodLinear:function(t){return new jd(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),zd.prototype=Object.assign(Object.create(kd.prototype),{constructor:zd,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Re,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Fd.prototype=Object.assign(Object.create(kd.prototype),{constructor:Fd,ValueTypeName:"vector"}),Object.assign(Ud,{parse:function(t){const e=[],n=t.tracks,l=1/(t.fps||1);for(let i=0,r=n.length;i!==r;++i)e.push(Hd(n[i]).scale(l));return new Ud(t.name,t.duration,e,t.blendMode)},toJSON:function(t){const e=[],n=t.tracks,l={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,r=n.length;i!==r;++i)e.push(kd.toJSON(n[i]));return l},CreateFromMorphTargetSequence:function(t,e,n,l){const i=e.length,r=[];for(let o=0;o<i;o++){let t=[],u=[];t.push((o+i-1)%i,o,(o+1)%i),u.push(0,1,0);const a=Cd.getKeyframeOrder(t);t=Cd.sortedArray(t,1,a),u=Cd.sortedArray(u,1,a),l||0!==t[0]||(t.push(i),u.push(u[0])),r.push(new Nd(".morphTargetInfluences["+e[o].name+"]",t,u).scale(1/n))}return new Ud(t,-1,r)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let l=0;l<n.length;l++)if(n[l].name===e)return n[l];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const l={},i=/^([\w-]*?)([\d]+)$/;for(let o=0,u=t.length;o<u;o++){const e=t[o],n=e.name.match(i);if(n&&n.length>1){const t=n[1];let i=l[t];i||(l[t]=i=[]),i.push(e)}}const r=[];for(const o in l)r.push(Ud.CreateFromMorphTargetSequence(o,l[o],e,n));return r},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,l,i){if(0!==n.length){const r=[],o=[];Cd.flattenJSON(n,r,o,l),0!==r.length&&i.push(new t(e,r,o))}},l=[],i=t.name||"default",r=t.fps||30,o=t.blendMode;let u=t.length||-1;const a=t.hierarchy||[];for(let c=0;c<a.length;c++){const t=a[c].keys;if(t&&0!==t.length)if(t[0].morphTargets){const e={};let n;for(n=0;n<t.length;n++)if(t[n].morphTargets)for(let l=0;l<t[n].morphTargets.length;l++)e[t[n].morphTargets[l]]=-1;for(const i in e){const e=[],r=[];for(let l=0;l!==t[n].morphTargets.length;++l){const l=t[n];e.push(l.time),r.push(l.morphTarget===i?1:0)}l.push(new Nd(".morphTargetInfluence["+i+"]",e,r))}u=e.length*(r||1)}else{const i=".bones["+e[c].name+"]";n(Fd,i+".position",t,"pos",l),n(Bd,i+".quaternion",t,"rot",l),n(Fd,i+".scale",t,"scl",l)}}if(0===l.length)return null;const s=new Ud(i,u,l,o);return s}}),Object.assign(Ud.prototype,{resetDuration:function(){const t=this.tracks;let e=0;for(let n=0,l=t.length;n!==l;++n){const t=this.tracks[n];e=Math.max(e,t.times[t.times.length-1])}return this.duration=e,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Ud(this.name,this.duration,t,this.blendMode)}});const Gd={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Wd(t,e,n){const l=this;let i=!1,r=0,o=0,u=void 0;const a=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===i&&void 0!==l.onStart&&l.onStart(t,r,o),i=!0},this.itemEnd=function(t){r++,void 0!==l.onProgress&&l.onProgress(t,r,o),r===o&&(i=!1,void 0!==l.onLoad&&l.onLoad())},this.itemError=function(t){void 0!==l.onError&&l.onError(t)},this.resolveURL=function(t){return u?u(t):t},this.setURLModifier=function(t){return u=t,this},this.addHandler=function(t,e){return a.push(t,e),this},this.removeHandler=function(t){const e=a.indexOf(t);return-1!==e&&a.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=a.length;e<n;e+=2){const n=a[e],l=a[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return l}return null}}const $d=new Wd;function qd(t){this.manager=void 0!==t?t:$d,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(qd.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(l,i){n.load(t,l,e,i)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Xd={};function Yd(t){qd.call(this,t)}function Zd(t){qd.call(this,t)}function Jd(t){qd.call(this,t)}function Kd(t){qd.call(this,t)}function Qd(t){qd.call(this,t)}function tf(t){qd.call(this,t)}function ef(t){qd.call(this,t)}function nf(){this.type="Curve",this.arcLengthDivisions=200}function lf(t,e,n,l,i,r,o,u){nf.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=l||1,this.aStartAngle=i||0,this.aEndAngle=r||2*Math.PI,this.aClockwise=o||!1,this.aRotation=u||0}function rf(t,e,n,l,i,r){lf.call(this,t,e,n,n,l,i,r),this.type="ArcCurve"}function of(){let t=0,e=0,n=0,l=0;function i(i,r,o,u){t=i,e=o,n=-3*i+3*r-2*o-u,l=2*i-2*r+o+u}return{initCatmullRom:function(t,e,n,l,r){i(e,n,r*(n-t),r*(l-e))},initNonuniformCatmullRom:function(t,e,n,l,r,o,u){let a=(e-t)/r-(n-t)/(r+o)+(n-e)/o,s=(n-e)/o-(l-e)/(o+u)+(l-n)/u;a*=o,s*=o,i(e,n,a,s)},calc:function(i){const r=i*i,o=r*i;return t+e*i+n*r+l*o}}}Yd.prototype=Object.assign(Object.create(qd.prototype),{constructor:Yd,load:function(t,e,n,l){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,r=Gd.get(t);if(void 0!==r)return i.manager.itemStart(t),setTimeout((function(){e&&e(r),i.manager.itemEnd(t)}),0),r;if(void 0!==Xd[t])return void Xd[t].push({onLoad:e,onProgress:n,onError:l});const o=/^data:(.*?)(;base64)?,(.*)$/,u=t.match(o);let a;if(u){const n=u[1],r=!!u[2];let o=u[3];o=decodeURIComponent(o),r&&(o=atob(o));try{let l;const r=(this.responseType||"").toLowerCase();switch(r){case"arraybuffer":case"blob":const t=new Uint8Array(o.length);for(let n=0;n<o.length;n++)t[n]=o.charCodeAt(n);l="blob"===r?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;l=e.parseFromString(o,n);break;case"json":l=JSON.parse(o);break;default:l=o;break}setTimeout((function(){e&&e(l),i.manager.itemEnd(t)}),0)}catch(s){setTimeout((function(){l&&l(s),i.manager.itemError(t),i.manager.itemEnd(t)}),0)}}else{Xd[t]=[],Xd[t].push({onLoad:e,onProgress:n,onError:l}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,l=Xd[t];if(delete Xd[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Gd.add(t,n);for(let t=0,e=l.length;t<e;t++){const e=l[t];e.onLoad&&e.onLoad(n)}i.manager.itemEnd(t)}else{for(let t=0,n=l.length;t<n;t++){const n=l[t];n.onError&&n.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=Xd[t];for(let t=0,l=n.length;t<l;t++){const l=n[t];l.onProgress&&l.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=Xd[t];delete Xd[t];for(let t=0,l=n.length;t<l;t++){const l=n[t];l.onError&&l.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=Xd[t];delete Xd[t];for(let t=0,l=n.length;t<l;t++){const l=n[t];l.onError&&l.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return i.manager.itemStart(t),a},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Zd.prototype=Object.assign(Object.create(qd.prototype),{constructor:Zd,load:function(t,e,n,l){const i=this,r=new Yd(i.manager);r.setPath(i.path),r.setRequestHeader(i.requestHeader),r.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(r){l?l(r):console.error(r),i.manager.itemError(t)}}),n,l)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const l=Ud.parse(t[n]);e.push(l)}return e}}),Jd.prototype=Object.assign(Object.create(qd.prototype),{constructor:Jd,load:function(t,e,n,l){const i=this,r=[],o=new Wc;o.image=r;const u=new Yd(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader);let a=0;function s(s){u.load(t[s],(function(t){const n=i.parse(t,!0);r[s]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},a+=1,6===a&&(1===n.mipmapCount&&(o.minFilter=pt),o.format=n.format,o.needsUpdate=!0,e&&e(o))}),n,l)}if(Array.isArray(t))for(let c=0,h=t.length;c<h;++c)s(c);else u.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){r[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)r[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),r[e].format=n.format,r[e].width=n.width,r[e].height=n.height}}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=pt),o.format=n.format,o.needsUpdate=!0,e&&e(o)}),n,l);return o}}),Kd.prototype=Object.assign(Object.create(qd.prototype),{constructor:Kd,load:function(t,e,n,l){const i=this,r=new Ki,o=new Yd(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?r.image=n.image:void 0!==n.data&&(r.image.width=n.width,r.image.height=n.height,r.image.data=n.data),r.wrapS=void 0!==n.wrapS?n.wrapS:st,r.wrapT=void 0!==n.wrapT?n.wrapT:st,r.magFilter=void 0!==n.magFilter?n.magFilter:pt,r.minFilter=void 0!==n.minFilter?n.minFilter:pt,r.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(r.format=n.format),void 0!==n.type&&(r.type=n.type),void 0!==n.mipmaps&&(r.mipmaps=n.mipmaps,r.minFilter=vt),1===n.mipmapCount&&(r.minFilter=pt),r.needsUpdate=!0,e&&e(r,n))}),n,l),r}}),Qd.prototype=Object.assign(Object.create(qd.prototype),{constructor:Qd,load:function(t,e,n,l){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,r=Gd.get(t);if(void 0!==r)return i.manager.itemStart(t),setTimeout((function(){e&&e(r),i.manager.itemEnd(t)}),0),r;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function u(){o.removeEventListener("load",u,!1),o.removeEventListener("error",a,!1),Gd.add(t,this),e&&e(this),i.manager.itemEnd(t)}function a(e){o.removeEventListener("load",u,!1),o.removeEventListener("error",a,!1),l&&l(e),i.manager.itemError(t),i.manager.itemEnd(t)}return o.addEventListener("load",u,!1),o.addEventListener("error",a,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(t),o.src=t,o}}),tf.prototype=Object.assign(Object.create(qd.prototype),{constructor:tf,load:function(t,e,n,l){const i=new Gu,r=new Qd(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let o=0;function u(n){r.load(t[n],(function(t){i.images[n]=t,o++,6===o&&(i.needsUpdate=!0,e&&e(i))}),void 0,l)}for(let a=0;a<t.length;++a)u(a);return i}}),ef.prototype=Object.assign(Object.create(qd.prototype),{constructor:ef,load:function(t,e,n,l){const i=new fn,r=new Qd(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,(function(n){i.image=n;const l=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);i.format=l?Lt:Pt,i.needsUpdate=!0,void 0!==e&&e(i)}),n,l),i}}),Object.assign(nf.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){void 0===t&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,l=this.getPoint(0),i=0;e.push(0);for(let r=1;r<=t;r++)n=this.getPoint(r/t),i+=n.distanceTo(l),e.push(i),l=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let l,i=0,r=n.length;l=e||t*n[r-1];let o,u=0,a=r-1;while(u<=a)if(i=Math.floor(u+(a-u)/2),o=n[i]-l,o<0)u=i+1;else{if(!(o>0)){a=i;break}a=i-1}if(i=a,n[i]===l)return i/(r-1);const s=n[i],c=n[i+1],h=c-s,d=(l-s)/h,f=(i+d)/(r-1);return f},getTangent:function(t,e){const n=1e-4;let l=t-n,i=t+n;l<0&&(l=0),i>1&&(i=1);const r=this.getPoint(l),o=this.getPoint(i),u=e||(r.isVector2?new an:new xn);return u.copy(o).sub(r).normalize(),u},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new xn,l=[],i=[],r=[],o=new xn,u=new Cn;for(let d=0;d<=t;d++){const e=d/t;l[d]=this.getTangentAt(e,new xn),l[d].normalize()}i[0]=new xn,r[0]=new xn;let a=Number.MAX_VALUE;const s=Math.abs(l[0].x),c=Math.abs(l[0].y),h=Math.abs(l[0].z);s<=a&&(a=s,n.set(1,0,0)),c<=a&&(a=c,n.set(0,1,0)),h<=a&&n.set(0,0,1),o.crossVectors(l[0],n).normalize(),i[0].crossVectors(l[0],o),r[0].crossVectors(l[0],i[0]);for(let d=1;d<=t;d++){if(i[d]=i[d-1].clone(),r[d]=r[d-1].clone(),o.crossVectors(l[d-1],l[d]),o.length()>Number.EPSILON){o.normalize();const t=Math.acos(un.clamp(l[d-1].dot(l[d]),-1,1));i[d].applyMatrix4(u.makeRotationAxis(o,t))}r[d].crossVectors(l[d],i[d])}if(!0===e){let e=Math.acos(un.clamp(i[0].dot(i[t]),-1,1));e/=t,l[0].dot(o.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(u.makeRotationAxis(l[n],e*n)),r[n].crossVectors(l[n],i[n])}return{tangents:l,normals:i,binormals:r}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),lf.prototype=Object.create(nf.prototype),lf.prototype.constructor=lf,lf.prototype.isEllipseCurve=!0,lf.prototype.getPoint=function(t,e){const n=e||new an,l=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const r=Math.abs(i)<Number.EPSILON;while(i<0)i+=l;while(i>l)i-=l;i<Number.EPSILON&&(i=r?0:l),!0!==this.aClockwise||r||(i===l?i=-l:i-=l);const o=this.aStartAngle+t*i;let u=this.aX+this.xRadius*Math.cos(o),a=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=u-this.aX,l=a-this.aY;u=n*t-l*e+this.aX,a=n*e+l*t+this.aY}return n.set(u,a)},lf.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},lf.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},lf.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},rf.prototype=Object.create(lf.prototype),rf.prototype.constructor=rf,rf.prototype.isArcCurve=!0;const uf=new xn,af=new of,sf=new of,cf=new of;function hf(t,e,n,l){nf.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=void 0!==l?l:.5}function df(t,e,n,l,i){const r=.5*(l-e),o=.5*(i-n),u=t*t,a=t*u;return(2*n-2*l+r+o)*a+(-3*n+3*l-2*r-o)*u+r*t+n}function ff(t,e){const n=1-t;return n*n*e}function pf(t,e){return 2*(1-t)*t*e}function mf(t,e){return t*t*e}function vf(t,e,n,l){return ff(t,e)+pf(t,n)+mf(t,l)}function gf(t,e){const n=1-t;return n*n*n*e}function yf(t,e){const n=1-t;return 3*n*n*t*e}function bf(t,e){return 3*(1-t)*t*t*e}function xf(t,e){return t*t*t*e}function wf(t,e,n,l,i){return gf(t,e)+yf(t,n)+bf(t,l)+xf(t,i)}function _f(t,e,n,l){nf.call(this),this.type="CubicBezierCurve",this.v0=t||new an,this.v1=e||new an,this.v2=n||new an,this.v3=l||new an}function Mf(t,e,n,l){nf.call(this),this.type="CubicBezierCurve3",this.v0=t||new xn,this.v1=e||new xn,this.v2=n||new xn,this.v3=l||new xn}function Sf(t,e){nf.call(this),this.type="LineCurve",this.v1=t||new an,this.v2=e||new an}function Tf(t,e){nf.call(this),this.type="LineCurve3",this.v1=t||new xn,this.v2=e||new xn}function Ef(t,e,n){nf.call(this),this.type="QuadraticBezierCurve",this.v0=t||new an,this.v1=e||new an,this.v2=n||new an}function Af(t,e,n){nf.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new xn,this.v1=e||new xn,this.v2=n||new xn}function Cf(t){nf.call(this),this.type="SplineCurve",this.points=t||[]}hf.prototype=Object.create(nf.prototype),hf.prototype.constructor=hf,hf.prototype.isCatmullRomCurve3=!0,hf.prototype.getPoint=function(t,e){const n=e||new xn,l=this.points,i=l.length,r=(i-(this.closed?0:1))*t;let o,u,a,s,c=Math.floor(r),h=r-c;if(this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/i)+1)*i:0===h&&c===i-1&&(c=i-2,h=1),this.closed||c>0?o=l[(c-1)%i]:(uf.subVectors(l[0],l[1]).add(l[0]),o=uf),u=l[c%i],a=l[(c+1)%i],this.closed||c+2<i?s=l[(c+2)%i]:(uf.subVectors(l[i-1],l[i-2]).add(l[i-1]),s=uf),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(o.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(a),t),l=Math.pow(a.distanceToSquared(s),t);n<1e-4&&(n=1),e<1e-4&&(e=n),l<1e-4&&(l=n),af.initNonuniformCatmullRom(o.x,u.x,a.x,s.x,e,n,l),sf.initNonuniformCatmullRom(o.y,u.y,a.y,s.y,e,n,l),cf.initNonuniformCatmullRom(o.z,u.z,a.z,s.z,e,n,l)}else"catmullrom"===this.curveType&&(af.initCatmullRom(o.x,u.x,a.x,s.x,this.tension),sf.initCatmullRom(o.y,u.y,a.y,s.y,this.tension),cf.initCatmullRom(o.z,u.z,a.z,s.z,this.tension));return n.set(af.calc(h),sf.calc(h),cf.calc(h)),n},hf.prototype.copy=function(t){nf.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},hf.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},hf.prototype.fromJSON=function(t){nf.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new xn).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},_f.prototype=Object.create(nf.prototype),_f.prototype.constructor=_f,_f.prototype.isCubicBezierCurve=!0,_f.prototype.getPoint=function(t,e){const n=e||new an,l=this.v0,i=this.v1,r=this.v2,o=this.v3;return n.set(wf(t,l.x,i.x,r.x,o.x),wf(t,l.y,i.y,r.y,o.y)),n},_f.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},_f.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},_f.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Mf.prototype=Object.create(nf.prototype),Mf.prototype.constructor=Mf,Mf.prototype.isCubicBezierCurve3=!0,Mf.prototype.getPoint=function(t,e){const n=e||new xn,l=this.v0,i=this.v1,r=this.v2,o=this.v3;return n.set(wf(t,l.x,i.x,r.x,o.x),wf(t,l.y,i.y,r.y,o.y),wf(t,l.z,i.z,r.z,o.z)),n},Mf.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Mf.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Mf.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Sf.prototype=Object.create(nf.prototype),Sf.prototype.constructor=Sf,Sf.prototype.isLineCurve=!0,Sf.prototype.getPoint=function(t,e){const n=e||new an;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Sf.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Sf.prototype.getTangent=function(t,e){const n=e||new an;return n.copy(this.v2).sub(this.v1).normalize(),n},Sf.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Sf.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Sf.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Tf.prototype=Object.create(nf.prototype),Tf.prototype.constructor=Tf,Tf.prototype.isLineCurve3=!0,Tf.prototype.getPoint=function(t,e){const n=e||new xn;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Tf.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Tf.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Tf.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Tf.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Ef.prototype=Object.create(nf.prototype),Ef.prototype.constructor=Ef,Ef.prototype.isQuadraticBezierCurve=!0,Ef.prototype.getPoint=function(t,e){const n=e||new an,l=this.v0,i=this.v1,r=this.v2;return n.set(vf(t,l.x,i.x,r.x),vf(t,l.y,i.y,r.y)),n},Ef.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ef.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ef.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Af.prototype=Object.create(nf.prototype),Af.prototype.constructor=Af,Af.prototype.isQuadraticBezierCurve3=!0,Af.prototype.getPoint=function(t,e){const n=e||new xn,l=this.v0,i=this.v1,r=this.v2;return n.set(vf(t,l.x,i.x,r.x),vf(t,l.y,i.y,r.y),vf(t,l.z,i.z,r.z)),n},Af.prototype.copy=function(t){return nf.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Af.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Af.prototype.fromJSON=function(t){return nf.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Cf.prototype=Object.create(nf.prototype),Cf.prototype.constructor=Cf,Cf.prototype.isSplineCurve=!0,Cf.prototype.getPoint=function(t,e){const n=e||new an,l=this.points,i=(l.length-1)*t,r=Math.floor(i),o=i-r,u=l[0===r?r:r-1],a=l[r],s=l[r>l.length-2?l.length-1:r+1],c=l[r>l.length-3?l.length-1:r+2];return n.set(df(o,u.x,a.x,s.x,c.x),df(o,u.y,a.y,s.y,c.y)),n},Cf.prototype.copy=function(t){nf.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this},Cf.prototype.toJSON=function(){const t=nf.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t},Cf.prototype.fromJSON=function(t){nf.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new an).fromArray(n))}return this};var Of=Object.freeze({__proto__:null,ArcCurve:rf,CatmullRomCurve3:hf,CubicBezierCurve:_f,CubicBezierCurve3:Mf,EllipseCurve:lf,LineCurve:Sf,LineCurve3:Tf,QuadraticBezierCurve:Ef,QuadraticBezierCurve3:Af,SplineCurve:Cf});function Lf(){nf.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Pf(t){Lf.call(this),this.type="Path",this.currentPoint=new an,t&&this.setFromPoints(t)}function Rf(t){Pf.call(this,t),this.uuid=un.generateUUID(),this.type="Shape",this.holes=[]}function kf(t,e){$n.call(this),this.type="Light",this.color=new jl(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function If(t,e,n){kf.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy($n.DefaultUp),this.updateMatrix(),this.groundColor=new jl(e)}function Df(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new an(512,512),this.map=null,this.mapPass=null,this.matrix=new Cn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new er,this._frameExtents=new an(1,1),this._viewportCount=1,this._viewports=[new pn(0,0,1,1)]}function Nf(){Df.call(this,new qi(50,1,.5,500))}function jf(t,e,n,l,i,r){kf.call(this,t,e),this.type="SpotLight",this.position.copy($n.DefaultUp),this.updateMatrix(),this.target=new $n,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==l?l:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==r?r:1,this.shadow=new Nf}function Bf(){Df.call(this,new qi(90,1,.5,500)),this._frameExtents=new an(4,2),this._viewportCount=6,this._viewports=[new pn(2,1,1,1),new pn(0,1,1,1),new pn(3,1,1,1),new pn(1,1,1,1),new pn(3,0,1,1),new pn(1,0,1,1)],this._cubeDirections=[new xn(1,0,0),new xn(-1,0,0),new xn(0,0,1),new xn(0,0,-1),new xn(0,1,0),new xn(0,-1,0)],this._cubeUps=[new xn(0,1,0),new xn(0,1,0),new xn(0,1,0),new xn(0,1,0),new xn(0,0,1),new xn(0,0,-1)]}function zf(t,e,n,l){kf.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==l?l:1,this.shadow=new Bf}function Ff(t,e,n,l,i,r){$i.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==n?n:1,this.bottom=void 0!==l?l:-1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()}function Uf(){Df.call(this,new Ff(-5,5,5,-5,.5,500))}function Vf(t,e){kf.call(this,t,e),this.type="DirectionalLight",this.position.copy($n.DefaultUp),this.updateMatrix(),this.target=new $n,this.shadow=new Uf}function Hf(t,e){kf.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function Gf(t,e,n,l){kf.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==l?l:10}function Wf(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new xn)}function $f(t,e){kf.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new Wf}function qf(t){qd.call(this,t),this.textures={}}Lf.prototype=Object.assign(Object.create(nf.prototype),{constructor:Lf,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Sf(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let l=0;while(l<n.length){if(n[l]>=e){const t=n[l]-e,i=this.curves[l],r=i.getLength(),o=0===r?0:1-t/r;return i.getPointAt(o)}l++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,l=this.curves.length;n<l;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;const e=[];let n;for(let l=0,i=this.curves;l<i.length;l++){const r=i[l],o=r&&r.isEllipseCurve?2*t:r&&(r.isLineCurve||r.isLineCurve3)?1:r&&r.isSplineCurve?t*r.points.length:t,u=r.getPoints(o);for(let t=0;t<u.length;t++){const l=u[t];n&&n.equals(l)||(e.push(l),n=l)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){nf.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=nf.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){nf.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Of[n.type]).fromJSON(n))}return this}}),Pf.prototype=Object.assign(Object.create(Lf.prototype),{constructor:Pf,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new Sf(this.currentPoint.clone(),new an(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,l){const i=new Ef(this.currentPoint.clone(),new an(t,e),new an(n,l));return this.curves.push(i),this.currentPoint.set(n,l),this},bezierCurveTo:function(t,e,n,l,i,r){const o=new _f(this.currentPoint.clone(),new an(t,e),new an(n,l),new an(i,r));return this.curves.push(o),this.currentPoint.set(i,r),this},splineThru:function(t){const e=[this.currentPoint.clone()].concat(t),n=new Cf(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,l,i,r){const o=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(t+o,e+u,n,l,i,r),this},absarc:function(t,e,n,l,i,r){return this.absellipse(t,e,n,n,l,i,r),this},ellipse:function(t,e,n,l,i,r,o,u){const a=this.currentPoint.x,s=this.currentPoint.y;return this.absellipse(t+a,e+s,n,l,i,r,o,u),this},absellipse:function(t,e,n,l,i,r,o,u){const a=new lf(t,e,n,l,i,r,o,u);if(this.curves.length>0){const t=a.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(a);const s=a.getPoint(1);return this.currentPoint.copy(s),this},copy:function(t){return Lf.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=Lf.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Lf.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),Rf.prototype=Object.assign(Object.create(Pf.prototype),{constructor:Rf,getPointsHoles:function(t){const e=[];for(let n=0,l=this.holes.length;n<l;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Pf.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){const t=Pf.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){Pf.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Pf).fromJSON(n))}return this}}),kf.prototype=Object.assign(Object.create($n.prototype),{constructor:kf,isLight:!0,copy:function(t){return $n.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=$n.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),If.prototype=Object.assign(Object.create(kf.prototype),{constructor:If,isHemisphereLight:!0,copy:function(t){return kf.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Df.prototype,{_projScreenMatrix:new Cn,_lightPositionWorld:new xn,_lookTarget:new xn,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,l=this._projScreenMatrix,i=this._lookTarget,r=this._lightPositionWorld;r.setFromMatrixPosition(t.matrixWorld),e.position.copy(r),i.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(i),e.updateMatrixWorld(),l.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(l),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Nf.prototype=Object.assign(Object.create(Df.prototype),{constructor:Nf,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=2*un.RAD2DEG*t.angle,l=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&l===e.aspect&&i===e.far||(e.fov=n,e.aspect=l,e.far=i,e.updateProjectionMatrix()),Df.prototype.updateMatrices.call(this,t)}}),jf.prototype=Object.assign(Object.create(kf.prototype),{constructor:jf,isSpotLight:!0,copy:function(t){return kf.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Bf.prototype=Object.assign(Object.create(Df.prototype),{constructor:Bf,isPointLightShadow:!0,updateMatrices:function(t,e){void 0===e&&(e=0);const n=this.camera,l=this.matrix,i=this._lightPositionWorld,r=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(t.matrixWorld),n.position.copy(i),r.copy(n.position),r.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(r),n.updateMatrixWorld(),l.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),zf.prototype=Object.assign(Object.create(kf.prototype),{constructor:zf,isPointLight:!0,copy:function(t){return kf.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),Ff.prototype=Object.assign(Object.create($i.prototype),{constructor:Ff,isOrthographicCamera:!0,copy:function(t,e){return $i.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,l,i,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=l,this.view.width=i,this.view.height=r,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,l=(this.top+this.bottom)/2;let i=n-t,r=n+t,o=l+e,u=l-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,r=i+t*this.view.width,o-=e*this.view.offsetY,u=o-e*this.view.height}this.projectionMatrix.makeOrthographic(i,r,o,u,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=$n.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Uf.prototype=Object.assign(Object.create(Df.prototype),{constructor:Uf,isDirectionalLightShadow:!0,updateMatrices:function(t){Df.prototype.updateMatrices.call(this,t)}}),Vf.prototype=Object.assign(Object.create(kf.prototype),{constructor:Vf,isDirectionalLight:!0,copy:function(t){return kf.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Hf.prototype=Object.assign(Object.create(kf.prototype),{constructor:Hf,isAmbientLight:!0}),Gf.prototype=Object.assign(Object.create(kf.prototype),{constructor:Gf,isRectAreaLight:!0,copy:function(t){return kf.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=kf.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),Object.assign(Wf.prototype,{isSphericalHarmonics3:!0,set:function(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this},zero:function(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this},getAt:function(t,e){const n=t.x,l=t.y,i=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*l),e.addScaledVector(r[2],.488603*i),e.addScaledVector(r[3],.488603*n),e.addScaledVector(r[4],n*l*1.092548),e.addScaledVector(r[5],l*i*1.092548),e.addScaledVector(r[6],.315392*(3*i*i-1)),e.addScaledVector(r[7],n*i*1.092548),e.addScaledVector(r[8],.546274*(n*n-l*l)),e},getIrradianceAt:function(t,e){const n=t.x,l=t.y,i=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*l),e.addScaledVector(r[2],1.023328*i),e.addScaledVector(r[3],1.023328*n),e.addScaledVector(r[4],.858086*n*l),e.addScaledVector(r[5],.858086*l*i),e.addScaledVector(r[6],.743125*i*i-.247708),e.addScaledVector(r[7],.858086*n*i),e.addScaledVector(r[8],.429043*(n*n-l*l)),e},add:function(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this},addScaledSH:function(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this},scale:function(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this},lerp:function(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this},equals:function(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0},copy:function(t){return this.set(t.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(t,e){void 0===e&&(e=0);const n=this.coefficients;for(let l=0;l<9;l++)n[l].fromArray(t,e+3*l);return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.coefficients;for(let l=0;l<9;l++)n[l].toArray(t,e+3*l);return t}}),Object.assign(Wf,{getBasisAt:function(t,e){const n=t.x,l=t.y,i=t.z;e[0]=.282095,e[1]=.488603*l,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*l,e[5]=1.092548*l*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-l*l)}}),$f.prototype=Object.assign(Object.create(kf.prototype),{constructor:$f,isLightProbe:!0,copy:function(t){return kf.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=kf.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}}),qf.prototype=Object.assign(Object.create(qd.prototype),{constructor:qf,load:function(t,e,n,l){const i=this,r=new Yd(i.manager);r.setPath(i.path),r.setRequestHeader(i.requestHeader),r.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(r){l?l(r):console.error(r),i.manager.itemError(t)}}),n,l)},parse:function(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const l=new Ad[t.type];if(void 0!==t.uuid&&(l.uuid=t.uuid),void 0!==t.name&&(l.name=t.name),void 0!==t.color&&l.color.setHex(t.color),void 0!==t.roughness&&(l.roughness=t.roughness),void 0!==t.metalness&&(l.metalness=t.metalness),void 0!==t.sheen&&(l.sheen=(new jl).setHex(t.sheen)),void 0!==t.emissive&&l.emissive.setHex(t.emissive),void 0!==t.specular&&l.specular.setHex(t.specular),void 0!==t.shininess&&(l.shininess=t.shininess),void 0!==t.clearcoat&&(l.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(l.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(l.fog=t.fog),void 0!==t.flatShading&&(l.flatShading=t.flatShading),void 0!==t.blending&&(l.blending=t.blending),void 0!==t.combine&&(l.combine=t.combine),void 0!==t.side&&(l.side=t.side),void 0!==t.opacity&&(l.opacity=t.opacity),void 0!==t.transparent&&(l.transparent=t.transparent),void 0!==t.alphaTest&&(l.alphaTest=t.alphaTest),void 0!==t.depthTest&&(l.depthTest=t.depthTest),void 0!==t.depthWrite&&(l.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(l.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(l.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(l.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(l.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(l.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(l.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(l.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(l.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(l.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(l.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(l.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(l.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(l.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(l.rotation=t.rotation),1!==t.linewidth&&(l.linewidth=t.linewidth),void 0!==t.dashSize&&(l.dashSize=t.dashSize),void 0!==t.gapSize&&(l.gapSize=t.gapSize),void 0!==t.scale&&(l.scale=t.scale),void 0!==t.polygonOffset&&(l.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(l.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(l.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(l.skinning=t.skinning),void 0!==t.morphTargets&&(l.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(l.morphNormals=t.morphNormals),void 0!==t.dithering&&(l.dithering=t.dithering),void 0!==t.vertexTangents&&(l.vertexTangents=t.vertexTangents),void 0!==t.visible&&(l.visible=t.visible),void 0!==t.toneMapped&&(l.toneMapped=t.toneMapped),void 0!==t.userData&&(l.userData=t.userData),void 0!==t.vertexColors&&("number"===typeof t.vertexColors?l.vertexColors=t.vertexColors>0:l.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const i in t.uniforms){const e=t.uniforms[i];switch(l.uniforms[i]={},e.type){case"t":l.uniforms[i].value=n(e.value);break;case"c":l.uniforms[i].value=(new jl).setHex(e.value);break;case"v2":l.uniforms[i].value=(new an).fromArray(e.value);break;case"v3":l.uniforms[i].value=(new xn).fromArray(e.value);break;case"v4":l.uniforms[i].value=(new pn).fromArray(e.value);break;case"m3":l.uniforms[i].value=(new sn).fromArray(e.value);case"m4":l.uniforms[i].value=(new Cn).fromArray(e.value);break;default:l.uniforms[i].value=e.value}}if(void 0!==t.defines&&(l.defines=t.defines),void 0!==t.vertexShader&&(l.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(l.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const i in t.extensions)l.extensions[i]=t.extensions[i];if(void 0!==t.shading&&(l.flatShading=1===t.shading),void 0!==t.size&&(l.size=t.size),void 0!==t.sizeAttenuation&&(l.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(l.map=n(t.map)),void 0!==t.matcap&&(l.matcap=n(t.matcap)),void 0!==t.alphaMap&&(l.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(l.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(l.bumpScale=t.bumpScale),void 0!==t.normalMap&&(l.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(l.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),l.normalScale=(new an).fromArray(e)}return void 0!==t.displacementMap&&(l.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(l.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(l.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(l.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(l.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(l.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(l.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(l.specularMap=n(t.specularMap)),void 0!==t.envMap&&(l.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(l.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(l.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(l.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(l.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(l.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(l.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(l.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(l.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(l.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(l.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(l.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(l.clearcoatNormalScale=(new an).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(l.transmission=t.transmission),void 0!==t.transmissionMap&&(l.transmissionMap=n(t.transmissionMap)),l},setTextures:function(t){return this.textures=t,this}});const Xf={decodeText:function(e){if("undefined"!==typeof t)return(new t).decode(e);let n="";for(let t=0,i=e.length;t<i;t++)n+=String.fromCharCode(e[t]);try{return decodeURIComponent(escape(n))}catch(l){return n}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}};function Yf(){di.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Zf(t,e,n,l){"number"===typeof n&&(l=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),ql.call(this,t,e,n),this.meshPerAttribute=l||1}function Jf(t){qd.call(this,t)}Yf.prototype=Object.assign(Object.create(di.prototype),{constructor:Yf,isInstancedBufferGeometry:!0,copy:function(t){return di.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=di.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),Zf.prototype=Object.assign(Object.create(ql.prototype),{constructor:Zf,isInstancedBufferAttribute:!0,copy:function(t){return ql.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=ql.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),Jf.prototype=Object.assign(Object.create(qd.prototype),{constructor:Jf,load:function(t,e,n,l){const i=this,r=new Yd(i.manager);r.setPath(i.path),r.setRequestHeader(i.requestHeader),r.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(r){l?l(r):console.error(r),i.manager.itemError(t)}}),n,l)},parse:function(t){const e={},n={};function l(t,n){if(void 0!==e[n])return e[n];const l=t.interleavedBuffers,r=l[n],o=i(t,r.buffer),u=new Kf[r.type](o),a=new Xs(u,r.stride);return a.uuid=r.uuid,e[n]=a,a}function i(t,e){if(void 0!==n[e])return n[e];const l=t.arrayBuffers,i=l[e],r=new Uint32Array(i).buffer;return n[e]=r,r}const r=t.isInstancedBufferGeometry?new Yf:new di,o=t.data.index;if(void 0!==o){const t=new Kf[o.type](o.array);r.setIndex(new ql(t,1))}const u=t.data.attributes;for(const d in u){const e=u[d];let n;if(e.isInterleavedBufferAttribute){const i=l(t.data,e.data);n=new Zs(i,e.itemSize,e.offset,e.normalized)}else{const t=new Kf[e.type](e.array),l=e.isInstancedBufferAttribute?Zf:ql;n=new l(t,e.itemSize,e.normalized)}void 0!==e.name&&(n.name=e.name),r.setAttribute(d,n)}const a=t.data.morphAttributes;if(a)for(const d in a){const e=a[d],n=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];let o;if(r.isInterleavedBufferAttribute){const e=l(t.data,r.data);o=new Zs(e,r.itemSize,r.offset,r.normalized)}else{const t=new Kf[r.type](r.array);o=new ql(t,r.itemSize,r.normalized)}void 0!==r.name&&(o.name=r.name),n.push(o)}r.morphAttributes[d]=n}const s=t.data.morphTargetsRelative;s&&(r.morphTargetsRelative=!0);const c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(let d=0,f=c.length;d!==f;++d){const t=c[d];r.addGroup(t.start,t.count,t.materialIndex)}const h=t.data.boundingSphere;if(void 0!==h){const t=new xn;void 0!==h.center&&t.fromArray(h.center),r.boundingSphere=new cl(t,h.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}});const Kf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Qf(t){qd.call(this,t)}Qf.prototype=Object.assign(Object.create(qd.prototype),{constructor:Qf,load:function(t,e,n,l){const i=this,r=""===this.path?Xf.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||r;const o=new Yd(i.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.load(t,(function(n){let r=null;try{r=JSON.parse(n)}catch(u){return void 0!==l&&l(u),void console.error("THREE:ObjectLoader: Can't parse "+t+".",u.message)}const o=r.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?i.parse(r,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,l)},parse:function(t,e){const n=this.parseShape(t.shapes),l=this.parseGeometries(t.geometries,n),i=this.parseImages(t.images,(function(){void 0!==e&&e(u)})),r=this.parseTextures(t.textures,i),o=this.parseMaterials(t.materials,r),u=this.parseObject(t.object,l,o);return t.animations&&(u.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(u),u},parseShape:function(t){const e={};if(void 0!==t)for(let n=0,l=t.length;n<l;n++){const l=(new Rf).fromJSON(t[n]);e[l.uuid]=l}return e},parseGeometries:function(t,e){const n={};let l;if(void 0!==t){const i=new Jf;for(let r=0,o=t.length;r<o;r++){let o;const u=t[r];switch(u.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new vd[u.type](u.width,u.height,u.widthSegments,u.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new vd[u.type](u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new vd[u.type](u.radius,u.segments,u.thetaStart,u.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new vd[u.type](u.radiusTop,u.radiusBottom,u.height,u.radialSegments,u.heightSegments,u.openEnded,u.thetaStart,u.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new vd[u.type](u.radius,u.height,u.radialSegments,u.heightSegments,u.openEnded,u.thetaStart,u.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new vd[u.type](u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new vd[u.type](u.radius,u.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new vd[u.type](u.innerRadius,u.outerRadius,u.thetaSegments,u.phiSegments,u.thetaStart,u.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new vd[u.type](u.radius,u.tube,u.radialSegments,u.tubularSegments,u.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new vd[u.type](u.radius,u.tube,u.tubularSegments,u.radialSegments,u.p,u.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new vd[u.type]((new Of[u.path.type]).fromJSON(u.path),u.tubularSegments,u.radius,u.radialSegments,u.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new vd[u.type](u.points,u.segments,u.phiStart,u.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new vd[u.type](u.vertices,u.indices,u.radius,u.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":l=[];for(let n=0,i=u.shapes.length;n<i;n++){const t=e[u.shapes[n]];l.push(t)}o=new vd[u.type](l,u.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":l=[];for(let n=0,i=u.shapes.length;n<i;n++){const t=e[u.shapes[n]];l.push(t)}const t=u.options.extrudePath;void 0!==t&&(u.options.extrudePath=(new Of[t.type]).fromJSON(t)),o=new vd[u.type](l,u.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(u);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+u.type+'"');continue}o.uuid=u.uuid,void 0!==u.name&&(o.name=u.name),!0===o.isBufferGeometry&&void 0!==u.userData&&(o.userData=u.userData),n[u.uuid]=o}}return n},parseMaterials:function(t,e){const n={},l={};if(void 0!==t){const i=new qf;i.setTextures(e);for(let e=0,r=t.length;e<r;e++){const r=t[e];if("MultiMaterial"===r.type){const t=[];for(let e=0;e<r.materials.length;e++){const l=r.materials[e];void 0===n[l.uuid]&&(n[l.uuid]=i.parse(l)),t.push(n[l.uuid])}l[r.uuid]=t}else void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),l[r.uuid]=n[r.uuid]}}return l},parseAnimations:function(t){const e=[];for(let n=0;n<t.length;n++){const l=t[n],i=Ud.parse(l);void 0!==l.uuid&&(i.uuid=l.uuid),e.push(i)}return e},parseImages:function(t,e){const n=this,l={};let i;function r(t){return n.manager.itemStart(t),i.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}if(void 0!==t&&t.length>0){const o=new Wd(e);i=new Qd(o),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],o=i.url;if(Array.isArray(o)){l[i.uuid]=[];for(let t=0,e=o.length;t<e;t++){const e=o[t],u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e;l[i.uuid].push(r(u))}}else{const t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i.url)?i.url:n.resourcePath+i.url;l[i.uuid]=r(t)}}}return l},parseTextures:function(t,e){function n(t,e){return"number"===typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const l={};if(void 0!==t)for(let i=0,r=t.length;i<r;i++){const r=t[i];let o;void 0===r.image&&console.warn('THREE.ObjectLoader: No "image" specified for',r.uuid),void 0===e[r.image]&&console.warn("THREE.ObjectLoader: Undefined image",r.image),o=Array.isArray(e[r.image])?new Gu(e[r.image]):new fn(e[r.image]),o.needsUpdate=!0,o.uuid=r.uuid,void 0!==r.name&&(o.name=r.name),void 0!==r.mapping&&(o.mapping=n(r.mapping,tp)),void 0!==r.offset&&o.offset.fromArray(r.offset),void 0!==r.repeat&&o.repeat.fromArray(r.repeat),void 0!==r.center&&o.center.fromArray(r.center),void 0!==r.rotation&&(o.rotation=r.rotation),void 0!==r.wrap&&(o.wrapS=n(r.wrap[0],ep),o.wrapT=n(r.wrap[1],ep)),void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.encoding&&(o.encoding=r.encoding),void 0!==r.minFilter&&(o.minFilter=n(r.minFilter,np)),void 0!==r.magFilter&&(o.magFilter=n(r.magFilter,np)),void 0!==r.anisotropy&&(o.anisotropy=r.anisotropy),void 0!==r.flipY&&(o.flipY=r.flipY),void 0!==r.premultiplyAlpha&&(o.premultiplyAlpha=r.premultiplyAlpha),void 0!==r.unpackAlignment&&(o.unpackAlignment=r.unpackAlignment),l[r.uuid]=o}return l},parseObject:function(t,e,n){let l,i,r;function o(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function u(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let l=0,i=t.length;l<i;l++){const i=t[l];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}switch(t.type){case"Scene":l=new qn,void 0!==t.background&&Number.isInteger(t.background)&&(l.background=new jl(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?l.fog=new qs(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(l.fog=new $s(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":l=new qi(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(l.focus=t.focus),void 0!==t.zoom&&(l.zoom=t.zoom),void 0!==t.filmGauge&&(l.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(l.filmOffset=t.filmOffset),void 0!==t.view&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new Ff(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(l.zoom=t.zoom),void 0!==t.view&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new Hf(t.color,t.intensity);break;case"DirectionalLight":l=new Vf(t.color,t.intensity);break;case"PointLight":l=new zf(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new Gf(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new jf(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":l=new If(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=(new $f).fromJSON(t);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":i=o(t.geometry),r=u(t.material),l=new Li(i,r);break;case"InstancedMesh":i=o(t.geometry),r=u(t.material);const e=t.count,n=t.instanceMatrix;l=new Tc(i,r,e),l.instanceMatrix=new ql(new Float32Array(n.array),16);break;case"LOD":l=new mc;break;case"Line":l=new Rc(o(t.geometry),u(t.material),t.mode);break;case"LineLoop":l=new Nc(o(t.geometry),u(t.material));break;case"LineSegments":l=new Dc(o(t.geometry),u(t.material));break;case"PointCloud":case"Points":l=new Vc(o(t.geometry),u(t.material));break;case"Sprite":l=new hc(u(t.material));break;case"Group":l=new Fs;break;default:l=new $n}if(l.uuid=t.uuid,void 0!==t.name&&(l.name=t.name),void 0!==t.matrix?(l.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(void 0!==t.position&&l.position.fromArray(t.position),void 0!==t.rotation&&l.rotation.fromArray(t.rotation),void 0!==t.quaternion&&l.quaternion.fromArray(t.quaternion),void 0!==t.scale&&l.scale.fromArray(t.scale)),void 0!==t.castShadow&&(l.castShadow=t.castShadow),void 0!==t.receiveShadow&&(l.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(l.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(l.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(l.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&l.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(l.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(l.visible=t.visible),void 0!==t.frustumCulled&&(l.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(l.renderOrder=t.renderOrder),void 0!==t.userData&&(l.userData=t.userData),void 0!==t.layers&&(l.layers.mask=t.layers),void 0!==t.children){const i=t.children;for(let t=0;t<i.length;t++)l.add(this.parseObject(i[t],e,n))}if("LOD"===t.type){void 0!==t.autoUpdate&&(l.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=l.getObjectByProperty("uuid",n.object);void 0!==i&&l.addLevel(i,n.distance)}}return l}});const tp={UVMapping:et,CubeReflectionMapping:nt,CubeRefractionMapping:lt,EquirectangularReflectionMapping:it,EquirectangularRefractionMapping:rt,CubeUVReflectionMapping:ot,CubeUVRefractionMapping:ut},ep={RepeatWrapping:at,ClampToEdgeWrapping:st,MirroredRepeatWrapping:ct},np={NearestFilter:ht,NearestMipmapNearestFilter:dt,NearestMipmapLinearFilter:ft,LinearFilter:pt,LinearMipmapNearestFilter:mt,LinearMipmapLinearFilter:vt};function lp(t){"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),qd.call(this,t),this.options={premultiplyAlpha:"none"}}function ip(){this.type="ShapePath",this.color=new jl,this.subPaths=[],this.currentPath=null}function rp(t){this.type="Font",this.data=t}function op(t,e,n){const l=Array.from?Array.from(t):String(t).split(""),i=e/n.resolution,r=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[];let u=0,a=0;for(let s=0;s<l.length;s++){const t=l[s];if("\n"===t)u=0,a-=r;else{const e=up(t,i,u,a,n);u+=e.offsetX,o.push(e.path)}}return o}function up(t,e,n,l,i){const r=i.glyphs[t]||i.glyphs["?"];if(!r)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+i.familyName+".");const o=new ip;let u,a,s,c,h,d,f,p;if(r.o){const t=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let i=0,r=t.length;i<r;){const r=t[i++];switch(r){case"m":u=t[i++]*e+n,a=t[i++]*e+l,o.moveTo(u,a);break;case"l":u=t[i++]*e+n,a=t[i++]*e+l,o.lineTo(u,a);break;case"q":s=t[i++]*e+n,c=t[i++]*e+l,h=t[i++]*e+n,d=t[i++]*e+l,o.quadraticCurveTo(h,d,s,c);break;case"b":s=t[i++]*e+n,c=t[i++]*e+l,h=t[i++]*e+n,d=t[i++]*e+l,f=t[i++]*e+n,p=t[i++]*e+l,o.bezierCurveTo(h,d,f,p,s,c);break}}}return{offsetX:r.ha*e,path:o}}function ap(t){qd.call(this,t)}let sp;lp.prototype=Object.assign(Object.create(qd.prototype),{constructor:lp,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,l){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,r=Gd.get(t);if(void 0!==r)return i.manager.itemStart(t),setTimeout((function(){e&&e(r),i.manager.itemEnd(t)}),0),r;fetch(t).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,i.options)})).then((function(n){Gd.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){l&&l(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}),Object.assign(ip.prototype,{moveTo:function(t,e){return this.currentPath=new Pf,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,l){return this.currentPath.quadraticCurveTo(t,e,n,l),this},bezierCurveTo:function(t,e,n,l,i,r){return this.currentPath.bezierCurveTo(t,e,n,l,i,r),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){const e=[];for(let n=0,l=t.length;n<l;n++){const l=t[n],i=new Rf;i.curves=l.curves,e.push(i)}return e}function l(t,e){const n=e.length;let l=!1;for(let i=n-1,r=0;r<n;i=r++){let n=e[i],o=e[r],u=o.x-n.x,a=o.y-n.y;if(Math.abs(a)>Number.EPSILON){if(a<0&&(n=e[r],u=-u,o=e[i],a=-a),t.y<n.y||t.y>o.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=a*(t.x-n.x)-u*(t.y-n.y);if(0===e)return!0;if(e<0)continue;l=!l}}else{if(t.y!==n.y)continue;if(o.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=o.x)return!0}}return l}const i=Wh.isClockWise,r=this.subPaths;if(0===r.length)return[];if(!0===e)return n(r);let o,u,a,s=[];if(1===r.length)return u=r[0],a=new Rf,a.curves=u.curves,s.push(a),s;let c=!i(r[0].getPoints());c=t?!c:c;const h=[],d=[];let f,p,m=[],v=0;d[v]=void 0,m[v]=[];for(let g=0,y=r.length;g<y;g++)u=r[g],f=u.getPoints(),o=i(f),o=t?!o:o,o?(!c&&d[v]&&v++,d[v]={s:new Rf,p:f},d[v].s.curves=u.curves,c&&v++,m[v]=[]):m[v].push({h:u,p:f[0]});if(!d[0])return n(r);if(d.length>1){let t=!1;const e=[];for(let n=0,l=d.length;n<l;n++)h[n]=[];for(let n=0,i=d.length;n<i;n++){const i=m[n];for(let r=0;r<i.length;r++){const o=i[r];let u=!0;for(let i=0;i<d.length;i++)l(o.p,d[i].p)&&(n!==i&&e.push({froms:n,tos:i,hole:r}),u?(u=!1,h[i].push(o)):t=!0);u&&h[n].push(o)}}e.length>0&&(t||(m=h))}for(let g=0,y=d.length;g<y;g++){a=d[g].s,s.push(a),p=m[g];for(let t=0,e=p.length;t<e;t++)a.holes.push(p[t].h)}return s}}),Object.assign(rp.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);const n=[],l=op(t,e,this.data);for(let i=0,r=l.length;i<r;i++)Array.prototype.push.apply(n,l[i].toShapes());return n}}),ap.prototype=Object.assign(Object.create(qd.prototype),{constructor:ap,load:function(t,e,n,l){const i=this,r=new Yd(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(r){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const l=i.parse(n);e&&e(l)}),n,l)},parse:function(t){return new rp(t)}});const cp={getContext:function(){return void 0===sp&&(sp=new(window.AudioContext||window.webkitAudioContext)),sp},setContext:function(t){sp=t}};function hp(t){qd.call(this,t)}function dp(t,e,n){$f.call(this,void 0,n);const l=(new jl).set(t),i=(new jl).set(e),r=new xn(l.r,l.g,l.b),o=new xn(i.r,i.g,i.b),u=Math.sqrt(Math.PI),a=u*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(o).multiplyScalar(u),this.sh.coefficients[1].copy(r).sub(o).multiplyScalar(a)}function fp(t,e){$f.call(this,void 0,e);const n=(new jl).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}hp.prototype=Object.assign(Object.create(qd.prototype),{constructor:hp,load:function(t,e,n,l){const i=this,r=new Yd(i.manager);r.setResponseType("arraybuffer"),r.setPath(i.path),r.setRequestHeader(i.requestHeader),r.load(t,(function(n){try{const t=n.slice(0),l=cp.getContext();l.decodeAudioData(t,(function(t){e(t)}))}catch(r){l?l(r):console.error(r),i.manager.itemError(t)}}),n,l)}}),dp.prototype=Object.assign(Object.create($f.prototype),{constructor:dp,isHemisphereLightProbe:!0,copy:function(t){return $f.prototype.copy.call(this,t),this},toJSON:function(t){const e=$f.prototype.toJSON.call(this,t);return e}}),fp.prototype=Object.assign(Object.create($f.prototype),{constructor:fp,isAmbientLightProbe:!0,copy:function(t){return $f.prototype.copy.call(this,t),this},toJSON:function(t){const e=$f.prototype.toJSON.call(this,t);return e}});const pp=new Cn,mp=new Cn;function vp(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new qi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new qi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}function gp(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(vp.prototype,{update:function(t){const e=this._cache,n=e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep;if(n){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),l=e.eyeSep/2,i=l*e.near/e.focus,r=e.near*Math.tan(un.DEG2RAD*e.fov*.5)/e.zoom;let o,u;mp.elements[12]=-l,pp.elements[12]=l,o=-r*e.aspect+i,u=r*e.aspect+i,n.elements[0]=2*e.near/(u-o),n.elements[8]=(u+o)/(u-o),this.cameraL.projectionMatrix.copy(n),o=-r*e.aspect-i,u=r*e.aspect-i,n.elements[0]=2*e.near/(u-o),n.elements[8]=(u+o)/(u-o),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(mp),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(pp)}}),Object.assign(gp.prototype,{start:function(){this.startTime=("undefined"===typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=("undefined"===typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});const yp=new xn,bp=new gn,xp=new xn,wp=new xn;function _p(){$n.call(this),this.type="AudioListener",this.context=cp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new gp}function Mp(t){$n.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._progress=0,this.filters=[]}_p.prototype=Object.assign(Object.create($n.prototype),{constructor:_p,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){$n.prototype.updateMatrixWorld.call(this,t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(yp,bp,xp),wp.set(0,0,-1).applyQuaternion(bp),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(yp.x,t),e.positionY.linearRampToValueAtTime(yp.y,t),e.positionZ.linearRampToValueAtTime(yp.z,t),e.forwardX.linearRampToValueAtTime(wp.x,t),e.forwardY.linearRampToValueAtTime(wp.y,t),e.forwardZ.linearRampToValueAtTime(wp.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(yp.x,yp.y,yp.z),e.setOrientation(wp.x,wp.y,wp.z,n.x,n.y,n.z)}}),Mp.prototype=Object.assign(Object.create($n.prototype),{constructor:Mp,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setMediaStreamSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(t){if(void 0===t&&(t=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(t){return this.loopStart=t,this},setLoopEnd:function(t){return this.loopEnd=t,this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});const Sp=new xn,Tp=new gn,Ep=new xn,Ap=new xn;function Cp(t){Mp.call(this,t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Op(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Lp(t,e,n){let l,i,r;switch(this.binding=t,this.valueSize=n,e){case"quaternion":l=this._slerp,i=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":l=this._select,i=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:l=this._lerp,i=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=l,this._mixBufferRegionAdditive=i,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Cp.prototype=Object.assign(Object.create(Mp.prototype),{constructor:Cp,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(t){if($n.prototype.updateMatrixWorld.call(this,t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Sp,Tp,Ep),Ap.set(0,0,1).applyQuaternion(Tp);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Sp.x,t),e.positionY.linearRampToValueAtTime(Sp.y,t),e.positionZ.linearRampToValueAtTime(Sp.z,t),e.orientationX.linearRampToValueAtTime(Ap.x,t),e.orientationY.linearRampToValueAtTime(Ap.y,t),e.orientationZ.linearRampToValueAtTime(Ap.z,t)}else e.setPosition(Sp.x,Sp.y,Sp.z),e.setOrientation(Ap.x,Ap.y,Ap.z)}}),Object.assign(Op.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}),Object.assign(Lp.prototype,{accumulate:function(t,e){const n=this.buffer,l=this.valueSize,i=t*l+l;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==l;++t)n[i+t]=n[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(n,i,0,t,l)}this.cumulativeWeight=r},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,l=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,l,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,l=t*e+e,i=this.cumulativeWeight,r=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,l,t,1-i,e)}r>0&&this._mixBufferRegionAdditive(n,l,this._addIndex*e,1,e);for(let u=e,a=e+e;u!==a;++u)if(n[u]!==n[u+e]){o.setValue(n,l);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,l=n*this._origIndex;t.getValue(e,l);for(let i=n,r=l;i!==r;++i)e[i]=e[l+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[4*this._addIndex+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,l,i){if(l>=.5)for(let r=0;r!==i;++r)t[e+r]=t[n+r]},_slerp:function(t,e,n,l){gn.slerpFlat(t,e,t,e,t,n,l)},_slerpAdditive:function(t,e,n,l,i){const r=this._workIndex*i;gn.multiplyQuaternionsFlat(t,r,t,e,t,n),gn.slerpFlat(t,e,t,e,t,r,l)},_lerp:function(t,e,n,l,i){const r=1-l;for(let o=0;o!==i;++o){const i=e+o;t[i]=t[i]*r+t[n+o]*l}},_lerpAdditive:function(t,e,n,l,i){for(let r=0;r!==i;++r){const i=e+r;t[i]=t[i]+t[n+r]*l}}});const Pp="\\[\\]\\.:\\/",Rp=new RegExp("["+Pp+"]","g"),kp="[^"+Pp+"]",Ip="[^"+Pp.replace("\\.","")+"]",Dp=/((?:WC+[\/:])*)/.source.replace("WC",kp),Np=/(WCOD+)?/.source.replace("WCOD",Ip),jp=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kp),Bp=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kp),zp=new RegExp("^"+Dp+Np+jp+Bp+"$"),Fp=["material","materials","bones"];function Up(t,e,n){const l=n||Vp.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,l)}function Vp(t,e,n){this.path=e,this.parsedPath=n||Vp.parseTrackName(e),this.node=Vp.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Hp(){this.uuid=un.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,l=arguments.length;n!==l;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}function Gp(t,e,n,l){this._mixer=t,this._clip=e,this._localRoot=n||null,this.blendMode=l||e.blendMode;const i=e.tracks,r=i.length,o=new Array(r),u={endingStart:De,endingEnd:De};for(let a=0;a!==r;++a){const t=i[a].createInterpolant(null);o[a]=t,t.settings=u}this._interpolantSettings=u,this._interpolants=o,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Le,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Wp(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function $p(t){"string"===typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function qp(t,e,n){Xs.call(this,t,e),this.meshPerAttribute=n||1}function Xp(t,e,n,l){this.ray=new yl(t,e),this.near=n||0,this.far=l||1/0,this.camera=null,this.layers=new Rn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Yp(t,e){return t.distance-e.distance}function Zp(t,e,n,l){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===l){const l=t.children;for(let t=0,i=l.length;t<i;t++)Zp(l[t],e,n,!0)}}Object.assign(Up.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,l=this._bindings[n];void 0!==l&&l.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let l=this._targetGroup.nCachedObjects_,i=n.length;l!==i;++l)n[l].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Vp,{Composite:Up,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Vp.Composite(t,e,n):new Vp(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Rp,"")},parseTrackName:function(t){const e=zp.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},l=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==l&&-1!==l){const t=n.nodeName.substring(l+1);-1!==Fp.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,l),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let l=0;l<t.length;l++){const i=t[l];if(i.name===e||i.uuid===e)return i;const r=n(i.children);if(r)return r}return null},l=n(t.children);if(l)return l}return null}}),Object.assign(Vp.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let l=0,i=n.length;l!==i;++l)t[e++]=n[l]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let l=0,i=n.length;l!==i;++l)n[l]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let l=0,i=n.length;l!==i;++l)n[l]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let l=0,i=n.length;l!==i;++l)n[l]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node,e=this.parsedPath,n=e.objectName,l=e.propertyName,i=e.propertyIndex;if(t||(t=Vp.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let l=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===l){l=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==l){if(void 0===t[l])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[l]}}const r=t[l];if(void 0===r){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+l+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===l){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}u=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=i}else void 0!==r.fromArray&&void 0!==r.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(u=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=l;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Vp.prototype,{_getValue_unbound:Vp.prototype.getValue,_setValue_unbound:Vp.prototype.setValue}),Object.assign(Hp.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,l=this._parsedPaths,i=this._bindings,r=i.length;let o=void 0,u=t.length,a=this.nCachedObjects_;for(let s=0,c=arguments.length;s!==c;++s){const c=arguments[s],h=c.uuid;let d=e[h];if(void 0===d){d=u++,e[h]=d,t.push(c);for(let t=0,e=r;t!==e;++t)i[t].push(new Vp(c,n[t],l[t]))}else if(d<a){o=t[d];const u=--a,s=t[u];e[s.uuid]=d,t[d]=s,e[h]=u,t[u]=c;for(let t=0,e=r;t!==e;++t){const e=i[t],r=e[u];let o=e[d];e[d]=r,void 0===o&&(o=new Vp(c,n[t],l[t])),e[u]=o}}else t[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=a},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,l=n.length;let i=this.nCachedObjects_;for(let r=0,o=arguments.length;r!==o;++r){const o=arguments[r],u=o.uuid,a=e[u];if(void 0!==a&&a>=i){const r=i++,s=t[r];e[s.uuid]=a,t[a]=s,e[u]=r,t[r]=o;for(let t=0,e=l;t!==e;++t){const e=n[t],l=e[r],i=e[a];e[a]=l,e[r]=i}}}this.nCachedObjects_=i},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,l=n.length;let i=this.nCachedObjects_,r=t.length;for(let o=0,u=arguments.length;o!==u;++o){const u=arguments[o],a=u.uuid,s=e[a];if(void 0!==s)if(delete e[a],s<i){const o=--i,u=t[o],a=--r,c=t[a];e[u.uuid]=s,t[s]=u,e[c.uuid]=o,t[o]=c,t.pop();for(let t=0,e=l;t!==e;++t){const e=n[t],l=e[o],i=e[a];e[s]=l,e[o]=i,e.pop()}}else{const i=--r,o=t[i];e[o.uuid]=s,t[s]=o,t.pop();for(let t=0,e=l;t!==e;++t){const e=n[t];e[s]=e[i],e.pop()}}}this.nCachedObjects_=i},subscribe_:function(t,e){let n=this._bindingsIndicesByPath,l=n[t],i=this._bindings;if(void 0!==l)return i[l];const r=this._paths,o=this._parsedPaths,u=this._objects,a=u.length,s=this.nCachedObjects_,c=new Array(a);l=i.length,n[t]=l,r.push(t),o.push(e),i.push(c);for(let h=s,d=u.length;h!==d;++h){const n=u[h];c[h]=new Vp(n,t,e)}return c},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const l=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length-1,u=r[o],a=t[o];e[a]=n,r[n]=u,r.pop(),i[n]=i[o],i.pop(),l[n]=l[o],l.pop()}}}),Object.assign(Gp.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,l=t._clip.duration,i=l/n,r=n/l;t.warp(1,i,e),this.warp(r,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){let t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,n){const l=this._mixer,i=l.time,r=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=l._lendControlInterpolant(),this._timeScaleInterpolant=o);const u=o.parameterPositions,a=o.sampleValues;return u[0]=i,u[1]=i+n,a[0]=t/r,a[1]=e/r,this},stopWarping:function(){let t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,n,l){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const l=(t-i)*n;if(l<0||0===n)return;this._startTime=null,e=n*l}e*=this._updateTimeScale(t);const r=this._updateTime(e),o=this._updateWeight(t);if(o>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case ze:for(let n=0,l=t.length;n!==l;++n)t[n].evaluate(r),e[n].accumulateAdditive(o);break;case Be:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(r),e[n].accumulate(l,o)}}},_updateWeight:function(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const l=n.evaluate(t)[0];e*=l,t>n.parameterPositions[1]&&(this.stopFading(),0===l&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){const l=n.evaluate(t)[0];e*=l,t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){const e=this._clip.duration,n=this.loop;let l=this.time+t,i=this._loopCount;const r=n===Pe;if(0===t)return-1===i?l:r&&1===(1&i)?e-l:l;if(n===Oe){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(l>=e)l=e;else{if(!(l<0)){this.time=l;break t}l=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=l,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),l>=e||l<0){const n=Math.floor(l/e);l-=e*n,i+=Math.abs(n);const o=this.repetitions-i;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,l=t>0?e:0,this.time=l,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===o){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=i,this.time=l,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=l;if(r&&1===(1&i))return e-l}return l},_setEndings:function(t,e,n){const l=this._interpolantSettings;n?(l.endingStart=Ne,l.endingEnd=Ne):(l.endingStart=t?this.zeroSlopeAtStart?Ne:De:je,l.endingEnd=e?this.zeroSlopeAtEnd?Ne:De:je)},_scheduleFading:function(t,e,n){const l=this._mixer,i=l.time;let r=this._weightInterpolant;null===r&&(r=l._lendControlInterpolant(),this._weightInterpolant=r);const o=r.parameterPositions,u=r.sampleValues;return o[0]=i,u[0]=e,o[1]=i+t,u[1]=n,this}}),Wp.prototype=Object.assign(Object.create(ln.prototype),{constructor:Wp,_bindAction:function(t,e){const n=t._localRoot||this._root,l=t._clip.tracks,i=l.length,r=t._propertyBindings,o=t._interpolants,u=n.uuid,a=this._bindingsByRootAndName;let s=a[u];void 0===s&&(s={},a[u]=s);for(let c=0;c!==i;++c){const t=l[c],i=t.name;let a=s[i];if(void 0!==a)r[c]=a;else{if(a=r[c],void 0!==a){null===a._cacheIndex&&(++a.referenceCount,this._addInactiveBinding(a,u,i));continue}const l=e&&e._propertyBindings[c].binding.parsedPath;a=new Lp(Vp.create(n,i,l),t.ValueTypeName,t.getValueSize()),++a.referenceCount,this._addInactiveBinding(a,u,i),r[c]=a}o[c].resultBuffer=a.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,l=this._actionsByClip[n];this._bindAction(t,l&&l.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const l=this._actions,i=this._actionsByClip;let r=i[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=l.length,l.push(t),r.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],l=t._cacheIndex;n._cacheIndex=l,e[l]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,r=this._actionsByClip,o=r[i],u=o.knownActions,a=u[u.length-1],s=t._byClipCacheIndex;a._byClipCacheIndex=s,u[s]=a,u.pop(),t._byClipCacheIndex=null;const c=o.actionByRoot,h=(t._localRoot||this._root).uuid;delete c[h],0===u.length&&delete r[i],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let n=0,l=e.length;n!==l;++n){const t=e[n];0===--t.referenceCount&&this._removeInactiveBinding(t)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,l=this._nActiveActions++,i=e[l];t._cacheIndex=l,e[l]=t,i._cacheIndex=n,e[n]=i},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,l=--this._nActiveActions,i=e[l];t._cacheIndex=l,e[l]=t,i._cacheIndex=n,e[n]=i},_addInactiveBinding:function(t,e,n){const l=this._bindingsByRootAndName,i=this._bindings;let r=l[e];void 0===r&&(r={},l[e]=r),r[n]=t,t._cacheIndex=i.length,i.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,l=n.rootNode.uuid,i=n.path,r=this._bindingsByRootAndName,o=r[l],u=e[e.length-1],a=t._cacheIndex;u._cacheIndex=a,e[a]=u,e.pop(),delete o[i],0===Object.keys(o).length&&delete r[l]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,l=this._nActiveBindings++,i=e[l];t._cacheIndex=l,e[l]=t,i._cacheIndex=n,e[n]=i},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,l=--this._nActiveBindings,i=e[l];t._cacheIndex=l,e[l]=t,i._cacheIndex=n,e[n]=i},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Pd(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,l=--this._nActiveControlInterpolants,i=e[l];t.__cacheIndex=l,e[l]=t,i.__cacheIndex=n,e[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const l=e||this._root,i=l.uuid;let r="string"===typeof t?Ud.findByName(l,t):t;const o=null!==r?r.uuid:t;let u=this._actionsByClip[o],a=null;if(void 0===n&&(n=null!==r?r.blendMode:Be),void 0!==u){const t=u.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;a=u.knownActions[0],null===r&&(r=a._clip)}if(null===r)return null;const s=new Gp(this,r,e,n);return this._bindAction(s,a),this._addInactiveAction(s,o,i),s},existingAction:function(t,e){const n=e||this._root,l=n.uuid,i="string"===typeof t?Ud.findByName(n,t):t,r=i?i.uuid:t,o=this._actionsByClip[r];return void 0!==o&&o.actionByRoot[l]||null},stopAllAction:function(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,l=this.time+=t,i=Math.sign(t),r=this._accuIndex^=1;for(let a=0;a!==n;++a){const n=e[a];n._update(l,t,i,r)}const o=this._bindings,u=this._nActiveBindings;for(let a=0;a!==u;++a)o[a].apply(r);return this},setTime:function(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,l=this._actionsByClip,i=l[n];if(void 0!==i){const t=i.knownActions;for(let n=0,l=t.length;n!==l;++n){const l=t[n];this._deactivateAction(l);const i=l._cacheIndex,r=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,r._cacheIndex=i,e[i]=r,e.pop(),this._removeInactiveBindingsForAction(l)}delete l[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const r in n){const t=n[r].actionByRoot,l=t[e];void 0!==l&&(this._deactivateAction(l),this._removeInactiveAction(l))}const l=this._bindingsByRootAndName,i=l[e];if(void 0!==i)for(const r in i){const t=i[r];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),$p.prototype.clone=function(){return new $p(void 0===this.value.clone?this.value:this.value.clone())},qp.prototype=Object.assign(Object.create(Xs.prototype),{constructor:qp,isInstancedInterleavedBuffer:!0,copy:function(t){return Xs.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Xs.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Xs.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.assign(Xp.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){const l=n||[];return Zp(t,this,l,e),l.sort(Yp),l},intersectObjects:function(t,e,n){const l=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),l;for(let i=0,r=t.length;i<r;i++)Zp(t[i],this,l,e);return l.sort(Yp),l}});class Jp{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}clone(){return(new this.constructor).copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(un.clamp(e/this.radius,-1,1))),this}}function Kp(t,e,n){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==n?n:0,this}Object.assign(Kp.prototype,{set:function(t,e,n){return this.radius=t,this.theta=e,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}});const Qp=new an;function tm(t,e){this.min=void 0!==t?t:new an(1/0,1/0),this.max=void 0!==e?e:new an(-1/0,-1/0)}Object.assign(tm.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){const n=Qp.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new an),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new an),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new an),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new an),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){const e=Qp.copy(t).clamp(this.min,this.max);return e.sub(t).length()},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});const em=new xn,nm=new xn;function lm(t,e){this.start=void 0!==t?t:new xn,this.end=void 0!==e?e:new xn}function im(t){$n.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Object.assign(lm.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new xn),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new xn),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new xn),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(t,e){em.subVectors(t,this.start),nm.subVectors(this.end,this.start);const n=nm.dot(nm),l=nm.dot(em);let i=l/n;return e&&(i=un.clamp(i,0,1)),i},closestPointToPoint:function(t,e,n){const l=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new xn),this.delta(n).multiplyScalar(l).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),im.prototype=Object.create($n.prototype),im.prototype.constructor=im,im.prototype.isImmediateRenderObject=!0;const rm=new xn;function om(t,e){$n.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new di,l=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,o=1,u=32;r<u;r++,o++){const t=r/u*Math.PI*2,e=o/u*Math.PI*2;l.push(Math.cos(t),Math.sin(t),1,Math.cos(e),Math.sin(e),1)}n.setAttribute("position",new ei(l,3));const i=new Ec({fog:!1,toneMapped:!1});this.cone=new Dc(n,i),this.add(this.cone),this.update()}om.prototype=Object.create($n.prototype),om.prototype.constructor=om,om.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},om.prototype.update=function(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),rm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(rm),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};const um=new xn,am=new Cn,sm=new Cn;function cm(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,cm(t.children[n]));return e}function hm(t){const e=cm(t),n=new di,l=[],i=[],r=new jl(0,0,1),o=new jl(0,1,0);for(let a=0;a<e.length;a++){const t=e[a];t.parent&&t.parent.isBone&&(l.push(0,0,0),l.push(0,0,0),i.push(r.r,r.g,r.b),i.push(o.r,o.g,o.b))}n.setAttribute("position",new ei(l,3)),n.setAttribute("color",new ei(i,3));const u=new Ec({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});Dc.call(this,n,u),this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function dm(t,e,n){this.light=t,this.light.updateMatrixWorld(),this.color=n;const l=new ed(e,4,2),i=new Gl({wireframe:!0,fog:!1,toneMapped:!1});Li.call(this,l,i),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}hm.prototype=Object.create(Dc.prototype),hm.prototype.constructor=hm,hm.prototype.isSkeletonHelper=!0,hm.prototype.updateMatrixWorld=function(t){const e=this.bones,n=this.geometry,l=n.getAttribute("position");sm.getInverse(this.root.matrixWorld);for(let i=0,r=0;i<e.length;i++){const t=e[i];t.parent&&t.parent.isBone&&(am.multiplyMatrices(sm,t.matrixWorld),um.setFromMatrixPosition(am),l.setXYZ(r,um.x,um.y,um.z),am.multiplyMatrices(sm,t.parent.matrixWorld),um.setFromMatrixPosition(am),l.setXYZ(r+1,um.x,um.y,um.z),r+=2)}n.getAttribute("position").needsUpdate=!0,$n.prototype.updateMatrixWorld.call(this,t)},dm.prototype=Object.create(Li.prototype),dm.prototype.constructor=dm,dm.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},dm.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};const fm=new xn,pm=new jl,mm=new jl;function vm(t,e,n){$n.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const l=new nh(e);l.rotateY(.5*Math.PI),this.material=new Gl({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=l.getAttribute("position"),r=new Float32Array(3*i.count);l.setAttribute("color",new ql(r,3)),this.add(new Li(l,this.material)),this.update()}function gm(t,e,n,l){t=t||10,e=e||10,n=new jl(void 0!==n?n:4473924),l=new jl(void 0!==l?l:8947848);const i=e/2,r=t/e,o=t/2,u=[],a=[];for(let h=0,d=0,f=-o;h<=e;h++,f+=r){u.push(-o,0,f,o,0,f),u.push(f,0,-o,f,0,o);const t=h===i?n:l;t.toArray(a,d),d+=3,t.toArray(a,d),d+=3,t.toArray(a,d),d+=3,t.toArray(a,d),d+=3}const s=new di;s.setAttribute("position",new ei(u,3)),s.setAttribute("color",new ei(a,3));const c=new Ec({vertexColors:!0,toneMapped:!1});Dc.call(this,s,c),this.type="GridHelper"}function ym(t,e,n,l,i,r){t=t||10,e=e||16,n=n||8,l=l||64,i=new jl(void 0!==i?i:4473924),r=new jl(void 0!==r?r:8947848);const o=[],u=[];for(let c=0;c<=e;c++){const n=c/e*(2*Math.PI),l=Math.sin(n)*t,a=Math.cos(n)*t;o.push(0,0,0),o.push(l,0,a);const s=1&c?i:r;u.push(s.r,s.g,s.b),u.push(s.r,s.g,s.b)}for(let c=0;c<=n;c++){const e=1&c?i:r,a=t-t/n*c;for(let t=0;t<l;t++){let n=t/l*(2*Math.PI),i=Math.sin(n)*a,r=Math.cos(n)*a;o.push(i,0,r),u.push(e.r,e.g,e.b),n=(t+1)/l*(2*Math.PI),i=Math.sin(n)*a,r=Math.cos(n)*a,o.push(i,0,r),u.push(e.r,e.g,e.b)}}const a=new di;a.setAttribute("position",new ei(o,3)),a.setAttribute("color",new ei(u,3));const s=new Ec({vertexColors:!0,toneMapped:!1});Dc.call(this,a,s),this.type="PolarGridHelper"}vm.prototype=Object.create($n.prototype),vm.prototype.constructor=vm,vm.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},vm.prototype.update=function(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");pm.copy(this.light.color),mm.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const l=t<n/2?pm:mm;e.setXYZ(t,l.r,l.g,l.b)}e.needsUpdate=!0}t.lookAt(fm.setFromMatrixPosition(this.light.matrixWorld).negate())},gm.prototype=Object.create(Dc.prototype),gm.prototype.constructor=gm,ym.prototype=Object.create(Dc.prototype),ym.prototype.constructor=ym;const bm=new xn,xm=new xn,wm=new xn;function _m(t,e,n){$n.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let l=new di;l.setAttribute("position",new ei([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new Ec({fog:!1,toneMapped:!1});this.lightPlane=new Rc(l,i),this.add(this.lightPlane),l=new di,l.setAttribute("position",new ei([0,0,0,0,0,1],3)),this.targetLine=new Rc(l,i),this.add(this.targetLine),this.update()}_m.prototype=Object.create($n.prototype),_m.prototype.constructor=_m,_m.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},_m.prototype.update=function(){bm.setFromMatrixPosition(this.light.matrixWorld),xm.setFromMatrixPosition(this.light.target.matrixWorld),wm.subVectors(xm,bm),this.lightPlane.lookAt(xm),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(xm),this.targetLine.scale.z=wm.length()};const Mm=new xn,Sm=new $i;function Tm(t){const e=new di,n=new Ec({color:16777215,vertexColors:!0,toneMapped:!1}),l=[],i=[],r={},o=new jl(16755200),u=new jl(16711680),a=new jl(43775),s=new jl(16777215),c=new jl(3355443);function h(t,e,n){d(t,n),d(e,n)}function d(t,e){l.push(0,0,0),i.push(e.r,e.g,e.b),void 0===r[t]&&(r[t]=[]),r[t].push(l.length/3-1)}h("n1","n2",o),h("n2","n4",o),h("n4","n3",o),h("n3","n1",o),h("f1","f2",o),h("f2","f4",o),h("f4","f3",o),h("f3","f1",o),h("n1","f1",o),h("n2","f2",o),h("n3","f3",o),h("n4","f4",o),h("p","n1",u),h("p","n2",u),h("p","n3",u),h("p","n4",u),h("u1","u2",a),h("u2","u3",a),h("u3","u1",a),h("c","t",s),h("p","c",c),h("cn1","cn2",c),h("cn3","cn4",c),h("cf1","cf2",c),h("cf3","cf4",c),e.setAttribute("position",new ei(l,3)),e.setAttribute("color",new ei(i,3)),Dc.call(this,e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update()}function Em(t,e,n,l,i,r,o){Mm.set(i,r,o).unproject(l);const u=e[t];if(void 0!==u){const t=n.getAttribute("position");for(let e=0,n=u.length;e<n;e++)t.setXYZ(u[e],Mm.x,Mm.y,Mm.z)}}Tm.prototype=Object.create(Dc.prototype),Tm.prototype.constructor=Tm,Tm.prototype.update=function(){const t=this.geometry,e=this.pointMap,n=1,l=1;Sm.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Em("c",e,t,Sm,0,0,-1),Em("t",e,t,Sm,0,0,1),Em("n1",e,t,Sm,-n,-l,-1),Em("n2",e,t,Sm,n,-l,-1),Em("n3",e,t,Sm,-n,l,-1),Em("n4",e,t,Sm,n,l,-1),Em("f1",e,t,Sm,-n,-l,1),Em("f2",e,t,Sm,n,-l,1),Em("f3",e,t,Sm,-n,l,1),Em("f4",e,t,Sm,n,l,1),Em("u1",e,t,Sm,.7*n,1.1*l,-1),Em("u2",e,t,Sm,.7*-n,1.1*l,-1),Em("u3",e,t,Sm,0,2*l,-1),Em("cf1",e,t,Sm,-n,0,1),Em("cf2",e,t,Sm,n,0,1),Em("cf3",e,t,Sm,0,-l,1),Em("cf4",e,t,Sm,0,l,1),Em("cn1",e,t,Sm,-n,0,-1),Em("cn2",e,t,Sm,n,0,-1),Em("cn3",e,t,Sm,0,-l,-1),Em("cn4",e,t,Sm,0,l,-1),t.getAttribute("position").needsUpdate=!0};const Am=new ul;function Cm(t,e){this.object=t,void 0===e&&(e=16776960);const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),l=new Float32Array(24),i=new di;i.setIndex(new ql(n,1)),i.setAttribute("position",new ql(l,3)),Dc.call(this,i,new Ec({color:e,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}function Om(t,e){this.type="Box3Helper",this.box=t,void 0===e&&(e=16776960);const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),l=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],i=new di;i.setIndex(new ql(n,1)),i.setAttribute("position",new ei(l,3)),Dc.call(this,i,new Ec({color:e,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}function Lm(t,e,n){this.plane=t,this.size=void 0===e?1:e;const l=void 0!==n?n:16776960,i=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],r=new di;r.setAttribute("position",new ei(i,3)),r.computeBoundingSphere(),Rc.call(this,r,new Ec({color:l,toneMapped:!1})),this.type="PlaneHelper";const o=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],u=new di;u.setAttribute("position",new ei(o,3)),u.computeBoundingSphere(),this.add(new Li(u,new Gl({color:l,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}Cm.prototype=Object.create(Dc.prototype),Cm.prototype.constructor=Cm,Cm.prototype.update=function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Am.setFromObject(this.object),Am.isEmpty())return;const e=Am.min,n=Am.max,l=this.geometry.attributes.position,i=l.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=e.x,i[4]=n.y,i[5]=n.z,i[6]=e.x,i[7]=e.y,i[8]=n.z,i[9]=n.x,i[10]=e.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=e.z,i[15]=e.x,i[16]=n.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=n.x,i[22]=e.y,i[23]=e.z,l.needsUpdate=!0,this.geometry.computeBoundingSphere()},Cm.prototype.setFromObject=function(t){return this.object=t,this.update(),this},Cm.prototype.copy=function(t){return Dc.prototype.copy.call(this,t),this.object=t.object,this},Om.prototype=Object.create(Dc.prototype),Om.prototype.constructor=Om,Om.prototype.updateMatrixWorld=function(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),$n.prototype.updateMatrixWorld.call(this,t))},Lm.prototype=Object.create(Rc.prototype),Lm.prototype.constructor=Lm,Lm.prototype.updateMatrixWorld=function(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?f:d,this.lookAt(this.plane.normal),$n.prototype.updateMatrixWorld.call(this,t)};const Pm=new xn;let Rm,km;function Im(t,e,n,l,i,r){$n.call(this),this.type="ArrowHelper",void 0===t&&(t=new xn(0,0,1)),void 0===e&&(e=new xn(0,0,0)),void 0===n&&(n=1),void 0===l&&(l=16776960),void 0===i&&(i=.2*n),void 0===r&&(r=.2*i),void 0===Rm&&(Rm=new di,Rm.setAttribute("position",new ei([0,0,0,0,1,0],3)),km=new hd(0,.5,1,5,1),km.translate(0,-.5,0)),this.position.copy(e),this.line=new Rc(Rm,new Ec({color:l,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Li(km,new Gl({color:l,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,r)}function Dm(t){t=t||1;const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],l=new di;l.setAttribute("position",new ei(e,3)),l.setAttribute("color",new ei(n,3));const i=new Ec({vertexColors:!0,toneMapped:!1});Dc.call(this,l,i),this.type="AxesHelper"}Im.prototype=Object.create($n.prototype),Im.prototype.constructor=Im,Im.prototype.setDirection=function(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Pm.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Pm,e)}},Im.prototype.setLength=function(t,e,n){void 0===e&&(e=.2*t),void 0===n&&(n=.2*e),this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()},Im.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},Im.prototype.copy=function(t){return $n.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this},Dm.prototype=Object.create(Dc.prototype),Dm.prototype.constructor=Dm;const Nm=4,jm=8,Bm=Math.pow(2,jm),zm=[.125,.215,.35,.446,.526,.582],Fm=jm-Nm+1+zm.length,Um=20,Vm={[Ue]:0,[Ve]:1,[Ge]:2,[$e]:3,[qe]:4,[Xe]:5,[He]:6},Hm=new Ff,{_lodPlanes:Gm,_sizeLods:Wm,_sigmas:$m}=Qm();let qm=null;const Xm=(1+Math.sqrt(5))/2,Ym=1/Xm,Zm=[new xn(1,1,1),new xn(-1,1,1),new xn(1,1,-1),new xn(-1,1,-1),new xn(0,Xm,Ym),new xn(0,Xm,-Ym),new xn(Ym,0,Xm),new xn(-Ym,0,Xm),new xn(Xm,Ym,0),new xn(-Xm,Ym,0)];function Jm(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=nv(Um),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}function Km(t){return void 0!==t&&t.type===gt&&(t.encoding===Ue||t.encoding===Ve||t.encoding===He)}function Qm(){const t=[],e=[],n=[];let l=jm;for(let i=0;i<Fm;i++){const r=Math.pow(2,l);e.push(r);let o=1/r;i>jm-Nm?o=zm[i-jm+Nm-1]:0==i&&(o=0),n.push(o);const u=1/(r-1),a=-u/2,s=1+u/2,c=[a,a,s,a,s,s,a,a,s,s,a,s],h=6,d=6,f=3,p=2,m=1,v=new Float32Array(f*d*h),g=new Float32Array(p*d*h),y=new Float32Array(m*d*h);for(let t=0;t<h;t++){const e=t%3*2/3-1,n=t>2?0:-1,l=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(l,f*d*t),g.set(c,p*d*t);const i=[t,t,t,t,t,t];y.set(i,m*d*t)}const b=new di;b.setAttribute("position",new ql(v,f)),b.setAttribute("uv",new ql(g,p)),b.setAttribute("faceIndex",new ql(y,m)),t.push(b),l>Nm&&l--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function tv(t){const e=new mn(3*Bm,3*Bm,t);return e.texture.mapping=ot,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function ev(t,e,n,l,i){t.viewport.set(e,n,l,i),t.scissor.set(e,n,l,i)}function nv(t){const e=new Float32Array(t),n=new xn(0,1,0),l=new yd({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Vm[Ue]},outputEncoding:{value:Vm[Ue]}},vertexShader:rv(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ov()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:v,depthTest:!1,depthWrite:!1});return l}function lv(){const t=new an(1,1),e=new yd({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Vm[Ue]},outputEncoding:{value:Vm[Ue]}},vertexShader:rv(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ov()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:v,depthTest:!1,depthWrite:!1});return e}function iv(){const t=new yd({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Vm[Ue]},outputEncoding:{value:Vm[Ue]}},vertexShader:rv(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ov()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:v,depthTest:!1,depthWrite:!1});return t}function rv(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function ov(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}Jm.prototype={constructor:Jm,fromScene:function(t,e=0,n=.1,l=100){qm=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(t,n,l,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i},fromEquirectangular:function(t){return this._fromTexture(t)},fromCubemap:function(t){return this._fromTexture(t)},compileCubemapShader:function(){null===this._cubemapShader&&(this._cubemapShader=iv(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){null===this._equirectShader&&(this._equirectShader=lv(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Gm.length;t++)Gm[t].dispose()},_cleanup:function(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(qm),t.scissorTest=!1,ev(t,0,0,t.width,t.height)},_fromTexture:function(t){qm=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e},_allocateTargets:function(t){const e={magFilter:ht,minFilter:ht,generateMipmaps:!1,type:gt,format:It,encoding:Km(t)?t.encoding:Ge,depthBuffer:!1,stencilBuffer:!1},n=tv(e);return n.depthBuffer=!t,this._pingPongRenderTarget=tv(e),n},_compileMaterial:function(t){const e=new Li(Gm[0],t);this._renderer.compile(e,Hm)},_sceneToCubeUV:function(t,e,n,l){const i=90,r=1,o=new qi(i,r,e,n),u=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],s=this._renderer,c=s.outputEncoding,h=s.toneMapping,d=s.getClearColor(),f=s.getClearAlpha();s.toneMapping=Y,s.outputEncoding=Ue;let p=t.background;if(p&&p.isColor){p.convertSRGBToLinear();const e=Math.max(p.r,p.g,p.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);p=p.multiplyScalar(Math.pow(2,-n));const l=(n+128)/255;s.setClearColor(p,l),t.background=null}for(let m=0;m<6;m++){const e=m%3;0==e?(o.up.set(0,u[m],0),o.lookAt(a[m],0,0)):1==e?(o.up.set(0,0,u[m]),o.lookAt(0,a[m],0)):(o.up.set(0,u[m],0),o.lookAt(0,0,a[m])),ev(l,e*Bm,m>2?Bm:0,Bm,Bm),s.setRenderTarget(l),s.render(t,o)}s.toneMapping=h,s.outputEncoding=c,s.setClearColor(d,f)},_textureToCubeUV:function(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=iv()):null==this._equirectShader&&(this._equirectShader=lv());const l=t.isCubeTexture?this._cubemapShader:this._equirectShader,i=new Li(Gm[0],l),r=l.uniforms;r["envMap"].value=t,t.isCubeTexture||r["texelSize"].value.set(1/t.image.width,1/t.image.height),r["inputEncoding"].value=Vm[t.encoding],r["outputEncoding"].value=Vm[e.texture.encoding],ev(e,0,0,3*Bm,2*Bm),n.setRenderTarget(e),n.render(i,Hm)},_applyPMREM:function(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let l=1;l<Fm;l++){const e=Math.sqrt($m[l]*$m[l]-$m[l-1]*$m[l-1]),n=Zm[(l-1)%Zm.length];this._blur(t,l-1,l,e,n)}e.autoClear=n},_blur:function(t,e,n,l,i){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,n,l,"latitudinal",i),this._halfBlur(r,t,n,n,l,"longitudinal",i)},_halfBlur:function(t,e,n,l,i,r,o){const u=this._renderer,a=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const s=3,c=new Li(Gm[l],a),h=a.uniforms,d=Wm[n]-1,f=isFinite(i)?Math.PI/(2*d):2*Math.PI/(2*Um-1),p=i/f,m=isFinite(i)?1+Math.floor(s*p):Um;m>Um&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Um}`);const v=[];let g=0;for(let w=0;w<Um;++w){const t=w/p,e=Math.exp(-t*t/2);v.push(e),0==w?g+=e:w<m&&(g+=2*e)}for(let w=0;w<v.length;w++)v[w]=v[w]/g;h["envMap"].value=t.texture,h["samples"].value=m,h["weights"].value=v,h["latitudinal"].value="latitudinal"===r,o&&(h["poleAxis"].value=o),h["dTheta"].value=f,h["mipInt"].value=jm-n,h["inputEncoding"].value=Vm[t.texture.encoding],h["outputEncoding"].value=Vm[t.texture.encoding];const y=Wm[l],b=3*Math.max(0,Bm-2*y),x=(0===l?0:2*Bm)+2*y*(l>jm-Nm?l-jm+Nm:0);ev(e,b,x,3*y,2*y),u.setRenderTarget(e),u.render(c,Hm)}};function uv(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),hf.call(this,t),this.type="catmullrom",this.closed=!0}function av(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),hf.call(this,t),this.type="catmullrom"}function sv(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),hf.call(this,t),this.type="catmullrom"}nf.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(nf.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Lf.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new ji;for(let n=0,l=t.length;n<l;n++){const l=t[n];e.vertices.push(new xn(l.x,l.y,l.z||0))}return e}}),Object.assign(Pf.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),uv.prototype=Object.create(hf.prototype),av.prototype=Object.create(hf.prototype),sv.prototype=Object.create(hf.prototype),Object.assign(sv.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),gm.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},hm.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(qd.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Xf.extractUrlBase(t)}}),qd.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Qf.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}),Object.assign(tm.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(ul.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(cl.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),er.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},lm.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(un,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),un.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),un.ceilPowerOfTwo(t)}}),Object.assign(sn.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Cn.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new xn).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,l,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,l,n,i,r)}}),_l.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},gn.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(yl.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(kl.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(kl,{barycoordFromPoint:function(t,e,n,l,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),kl.getBarycoord(t,e,n,l,i)},normal:function(t,e,n,l){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),kl.getNormal(t,e,n,l)}}),Object.assign(Rf.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Xh(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new od(this,t)}}),Object.assign(an.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(xn.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(pn.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ji.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.assign($n.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties($n.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Li.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Li.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Fe},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(mc.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(bc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),vc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(nf.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),qi.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(kf.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(ql.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===nn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(nn)}}}),Object.assign(ql.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?nn:en),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(di.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new ql(arguments[1],arguments[2])))},addDrawCall:function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(di.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Yf.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Xp.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(Xs.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===nn},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(Xs.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?nn:en),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Yh.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties($p.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Hl.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new jl}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===m}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(wd.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(xd.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(Wi.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(Gs.prototype,{clearTarget:function(t,e,n,l){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,l)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Gs.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ve:Ue}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ds.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(mn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(Mp.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this,n=new hp;return n.load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Op.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Zi.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};hn.crossOrigin=void 0,hn.loadTexture=function(t,e,n,l){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new ef;i.setCrossOrigin(this.crossOrigin);const r=i.load(t,n,void 0,l);return e&&(r.mapping=e),r},hn.loadTextureCube=function(t,e,n,l){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new tf;i.setCrossOrigin(this.crossOrigin);const r=i.load(t,n,void 0,l);return e&&(r.mapping=e),r},hn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},hn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:l}}))}).call(this,n("4194")["TextDecoder"])},"5c6c":function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},"5d23":function(t,e,n){"use strict";var l=n("80d2"),i=n("8860"),r=(n("ac1f"),n("466d"),n("5530")),o=n("ade3"),u=(n("db42"),n("9d26")),a=n("da13"),s=(n("498a"),n("2b0e")),c=s["a"].extend({name:"v-list-item-icon",functional:!0,render:function(t,e){var n=e.data,l=e.children;return n.staticClass="v-list-item__icon ".concat(n.staticClass||"").trim(),t("div",n,l)}}),h=n("7e2b"),d=n("9d65"),f=n("a9ad"),p=n("f2e7"),m=n("3206"),v=n("5607"),g=n("0789"),y=n("58df"),b=Object(y["a"])(h["a"],d["a"],f["a"],Object(m["a"])("list"),p["a"]),x=b.extend().extend({name:"v-list-group",directives:{ripple:v["a"]},props:{activeClass:{type:String,default:""},appendIcon:{type:String,default:"$expand"},color:{type:String,default:"primary"},disabled:Boolean,group:String,noAction:Boolean,prependIcon:String,ripple:{type:[Boolean,Object],default:!0},subGroup:Boolean},computed:{classes:function(){return{"v-list-group--active":this.isActive,"v-list-group--disabled":this.disabled,"v-list-group--no-action":this.noAction,"v-list-group--sub-group":this.subGroup}}},watch:{isActive:function(t){!this.subGroup&&t&&this.list&&this.list.listClick(this._uid)},$route:"onRouteChange"},created:function(){this.list&&this.list.register(this),this.group&&this.$route&&null==this.value&&(this.isActive=this.matchRoute(this.$route.path))},beforeDestroy:function(){this.list&&this.list.unregister(this)},methods:{click:function(t){var e=this;this.disabled||(this.isBooted=!0,this.$emit("click",t),this.$nextTick((function(){return e.isActive=!e.isActive})))},genIcon:function(t){return this.$createElement(u["a"],t)},genAppendIcon:function(){var t=!this.subGroup&&this.appendIcon;return t||this.$slots.appendIcon?this.$createElement(c,{staticClass:"v-list-group__header__append-icon"},[this.$slots.appendIcon||this.genIcon(t)]):null},genHeader:function(){return this.$createElement(a["a"],{staticClass:"v-list-group__header",attrs:{"aria-expanded":String(this.isActive),role:"button"},class:Object(o["a"])({},this.activeClass,this.isActive),props:{inputValue:this.isActive},directives:[{name:"ripple",value:this.ripple}],on:Object(r["a"])(Object(r["a"])({},this.listeners$),{},{click:this.click})},[this.genPrependIcon(),this.$slots.activator,this.genAppendIcon()])},genItems:function(){var t=this;return this.showLazyContent((function(){return[t.$createElement("div",{staticClass:"v-list-group__items",directives:[{name:"show",value:t.isActive}]},Object(l["o"])(t))]}))},genPrependIcon:function(){var t=this.subGroup&&null==this.prependIcon?"$subgroup":this.prependIcon;return t||this.$slots.prependIcon?this.$createElement(c,{staticClass:"v-list-group__header__prepend-icon"},[this.$slots.prependIcon||this.genIcon(t)]):null},onRouteChange:function(t){if(this.group){var e=this.matchRoute(t.path);e&&this.isActive!==e&&this.list&&this.list.listClick(this._uid),this.isActive=e}},toggle:function(t){var e=this,n=this._uid===t;n&&(this.isBooted=!0),this.$nextTick((function(){return e.isActive=n}))},matchRoute:function(t){return null!==t.match(this.group)}},render:function(t){return t("div",this.setTextColor(this.isActive&&this.color,{staticClass:"v-list-group",class:this.classes}),[this.genHeader(),t(g["a"],this.genItems())])}}),w=(n("899c"),n("604c")),_=Object(y["a"])(w["a"],f["a"]).extend({name:"v-list-item-group",provide:function(){return{isInGroup:!0,listItemGroup:this}},computed:{classes:function(){return Object(r["a"])(Object(r["a"])({},w["a"].options.computed.classes.call(this)),{},{"v-list-item-group":!0})}},methods:{genData:function(){return this.setTextColor(this.color,Object(r["a"])(Object(r["a"])({},w["a"].options.methods.genData.call(this)),{},{attrs:{role:"listbox"}}))}}}),M=n("1800"),S=(n("a9e3"),n("3408"),n("24b2")),T=n("a236"),E=Object(y["a"])(f["a"],S["a"],T["a"]).extend({name:"v-avatar",props:{left:Boolean,right:Boolean,size:{type:[Number,String],default:48}},computed:{classes:function(){return Object(r["a"])({"v-avatar--left":this.left,"v-avatar--right":this.right},this.roundedClasses)},styles:function(){return Object(r["a"])({height:Object(l["f"])(this.size),minWidth:Object(l["f"])(this.size),width:Object(l["f"])(this.size)},this.measurableStyles)}},render:function(t){var e={staticClass:"v-avatar",class:this.classes,style:this.styles,on:this.$listeners};return t("div",this.setBackgroundColor(this.color,e),this.$slots.default)}}),A=E,C=A.extend({name:"v-list-item-avatar",props:{horizontal:Boolean,size:{type:[Number,String],default:40}},computed:{classes:function(){return Object(r["a"])(Object(r["a"])({"v-list-item__avatar--horizontal":this.horizontal},A.options.computed.classes.call(this)),{},{"v-avatar--tile":this.tile||this.horizontal})}},render:function(t){var e=A.options.render.call(this,t);return e.data=e.data||{},e.data.staticClass+=" v-list-item__avatar",e}});n.d(e,"a",(function(){return L})),n.d(e,"c",(function(){return P})),n.d(e,"b",(function(){return R}));var O=Object(l["h"])("v-list-item__action-text","span"),L=Object(l["h"])("v-list-item__content","div"),P=Object(l["h"])("v-list-item__title","div"),R=Object(l["h"])("v-list-item__subtitle","div");i["a"],a["a"],M["a"]},"5f96":function(t,e,n){"use strict";var l=n("ebb5"),i=l.aTypedArray,r=l.exportTypedArrayMethod,o=[].join;r("join",(function(t){return o.apply(i(this),arguments)}))},"5fb2":function(t,e,n){"use strict";var l=2147483647,i=36,r=1,o=26,u=38,a=700,s=72,c=128,h="-",d=/[^\0-\u007E]/,f=/[.\u3002\uFF0E\uFF61]/g,p="Overflow: input needs wider integers to process",m=i-r,v=Math.floor,g=String.fromCharCode,y=function(t){var e=[],n=0,l=t.length;while(n<l){var i=t.charCodeAt(n++);if(i>=55296&&i<=56319&&n<l){var r=t.charCodeAt(n++);56320==(64512&r)?e.push(((1023&i)<<10)+(1023&r)+65536):(e.push(i),n--)}else e.push(i)}return e},b=function(t){return t+22+75*(t<26)},x=function(t,e,n){var l=0;for(t=n?v(t/a):t>>1,t+=v(t/e);t>m*o>>1;l+=i)t=v(t/m);return v(l+(m+1)*t/(t+u))},w=function(t){var e=[];t=y(t);var n,u,a=t.length,d=c,f=0,m=s;for(n=0;n<t.length;n++)u=t[n],u<128&&e.push(g(u));var w=e.length,_=w;w&&e.push(h);while(_<a){var M=l;for(n=0;n<t.length;n++)u=t[n],u>=d&&u<M&&(M=u);var S=_+1;if(M-d>v((l-f)/S))throw RangeError(p);for(f+=(M-d)*S,d=M,n=0;n<t.length;n++){if(u=t[n],u<d&&++f>l)throw RangeError(p);if(u==d){for(var T=f,E=i;;E+=i){var A=E<=m?r:E>=m+o?o:E-m;if(T<A)break;var C=T-A,O=i-A;e.push(g(b(A+C%O))),T=v(C/O)}e.push(g(b(T))),m=x(f,S,_==w),f=0,++_}}++f,++d}return e.join("")};t.exports=function(t){var e,n,l=[],i=t.toLowerCase().replace(f,".").split(".");for(e=0;e<i.length;e++)n=i[e],l.push(d.test(n)?"xn--"+w(n):n);return l.join(".")}},"604c":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));n("4de4"),n("7db0"),n("c740"),n("4160"),n("caad"),n("c975"),n("fb6a"),n("a434"),n("a9e3"),n("2532"),n("159b");var l=n("5530"),i=(n("166a"),n("a452")),r=n("7560"),o=n("58df"),u=n("d9bd"),a=Object(o["a"])(i["a"],r["a"]).extend({name:"base-item-group",props:{activeClass:{type:String,default:"v-item--active"},mandatory:Boolean,max:{type:[Number,String],default:null},multiple:Boolean,tag:{type:String,default:"div"}},data:function(){return{internalLazyValue:void 0!==this.value?this.value:this.multiple?[]:void 0,items:[]}},computed:{classes:function(){return Object(l["a"])({"v-item-group":!0},this.themeClasses)},selectedIndex:function(){return this.selectedItem&&this.items.indexOf(this.selectedItem)||-1},selectedItem:function(){if(!this.multiple)return this.selectedItems[0]},selectedItems:function(){var t=this;return this.items.filter((function(e,n){return t.toggleMethod(t.getValue(e,n))}))},selectedValues:function(){return null==this.internalValue?[]:Array.isArray(this.internalValue)?this.internalValue:[this.internalValue]},toggleMethod:function(){var t=this;if(!this.multiple)return function(e){return t.internalValue===e};var e=this.internalValue;return Array.isArray(e)?function(t){return e.includes(t)}:function(){return!1}}},watch:{internalValue:"updateItemsState",items:"updateItemsState"},created:function(){this.multiple&&!Array.isArray(this.internalValue)&&Object(u["c"])("Model must be bound to an array if the multiple property is true.",this)},methods:{genData:function(){return{class:this.classes}},getValue:function(t,e){return null==t.value||""===t.value?e:t.value},onClick:function(t){this.updateInternalValue(this.getValue(t,this.items.indexOf(t)))},register:function(t){var e=this,n=this.items.push(t)-1;t.$on("change",(function(){return e.onClick(t)})),this.mandatory&&!this.selectedValues.length&&this.updateMandatory(),this.updateItem(t,n)},unregister:function(t){if(!this._isDestroyed){var e=this.items.indexOf(t),n=this.getValue(t,e);this.items.splice(e,1);var l=this.selectedValues.indexOf(n);if(!(l<0)){if(!this.mandatory)return this.updateInternalValue(n);this.multiple&&Array.isArray(this.internalValue)?this.internalValue=this.internalValue.filter((function(t){return t!==n})):this.internalValue=void 0,this.selectedItems.length||this.updateMandatory(!0)}}},updateItem:function(t,e){var n=this.getValue(t,e);t.isActive=this.toggleMethod(n)},updateItemsState:function(){var t=this;this.$nextTick((function(){if(t.mandatory&&!t.selectedItems.length)return t.updateMandatory();t.items.forEach(t.updateItem)}))},updateInternalValue:function(t){this.multiple?this.updateMultiple(t):this.updateSingle(t)},updateMandatory:function(t){if(this.items.length){var e=this.items.slice();t&&e.reverse();var n=e.find((function(t){return!t.disabled}));if(n){var l=this.items.indexOf(n);this.updateInternalValue(this.getValue(n,l))}}},updateMultiple:function(t){var e=Array.isArray(this.internalValue)?this.internalValue:[],n=e.slice(),l=n.findIndex((function(e){return e===t}));this.mandatory&&l>-1&&n.length-1<1||null!=this.max&&l<0&&n.length+1>this.max||(l>-1?n.splice(l,1):n.push(t),this.internalValue=n)},updateSingle:function(t){var e=t===this.internalValue;this.mandatory&&e||(this.internalValue=e?void 0:t)}},render:function(t){return t(this.tag,this.genData(),this.$slots.default)}});a.extend({name:"v-item-group",provide:function(){return{itemGroup:this}}})},"605d":function(t,e,n){var l=n("c6b6"),i=n("da84");t.exports="process"==l(i.process)},"60bd":function(t,e,n){"use strict";var l=n("da84"),i=n("ebb5"),r=n("e260"),o=n("b622"),u=o("iterator"),a=l.Uint8Array,s=r.values,c=r.keys,h=r.entries,d=i.aTypedArray,f=i.exportTypedArrayMethod,p=a&&a.prototype[u],m=!!p&&("values"==p.name||void 0==p.name),v=function(){return s.call(d(this))};f("entries",(function(){return h.call(d(this))})),f("keys",(function(){return c.call(d(this))})),f("values",v,!m),f(u,v,!m)},"60da":function(t,e,n){"use strict";var l=n("83ab"),i=n("d039"),r=n("df75"),o=n("7418"),u=n("d1e7"),a=n("7b0b"),s=n("44ad"),c=Object.assign,h=Object.defineProperty;t.exports=!c||i((function(){if(l&&1!==c({b:1},c(h({},"a",{enumerable:!0,get:function(){h(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol(),i="abcdefghijklmnopqrst";return t[n]=7,i.split("").forEach((function(t){e[t]=t})),7!=c({},t)[n]||r(c({},e)).join("")!=i}))?function(t,e){var n=a(t),i=arguments.length,c=1,h=o.f,d=u.f;while(i>c){var f,p=s(arguments[c++]),m=h?r(p).concat(h(p)):r(p),v=m.length,g=0;while(v>g)f=m[g++],l&&!d.call(p,f)||(n[f]=p[f])}return n}:c},"615b":function(t,e,n){},"61d2":function(t,e,n){},"621a":function(t,e,n){"use strict";var l=n("da84"),i=n("83ab"),r=n("a981"),o=n("9112"),u=n("e2cc"),a=n("d039"),s=n("19aa"),c=n("a691"),h=n("50c4"),d=n("0b25"),f=n("77a7"),p=n("e163"),m=n("d2bb"),v=n("241c").f,g=n("9bf2").f,y=n("81d5"),b=n("d44e"),x=n("69f3"),w=x.get,_=x.set,M="ArrayBuffer",S="DataView",T="prototype",E="Wrong length",A="Wrong index",C=l[M],O=C,L=l[S],P=L&&L[T],R=Object.prototype,k=l.RangeError,I=f.pack,D=f.unpack,N=function(t){return[255&t]},j=function(t){return[255&t,t>>8&255]},B=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},z=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},F=function(t){return I(t,23,4)},U=function(t){return I(t,52,8)},V=function(t,e){g(t[T],e,{get:function(){return w(this)[e]}})},H=function(t,e,n,l){var i=d(n),r=w(t);if(i+e>r.byteLength)throw k(A);var o=w(r.buffer).bytes,u=i+r.byteOffset,a=o.slice(u,u+e);return l?a:a.reverse()},G=function(t,e,n,l,i,r){var o=d(n),u=w(t);if(o+e>u.byteLength)throw k(A);for(var a=w(u.buffer).bytes,s=o+u.byteOffset,c=l(+i),h=0;h<e;h++)a[s+h]=c[r?h:e-h-1]};if(r){if(!a((function(){C(1)}))||!a((function(){new C(-1)}))||a((function(){return new C,new C(1.5),new C(NaN),C.name!=M}))){O=function(t){return s(this,O),new C(d(t))};for(var W,$=O[T]=C[T],q=v(C),X=0;q.length>X;)(W=q[X++])in O||o(O,W,C[W]);$.constructor=O}m&&p(P)!==R&&m(P,R);var Y=new L(new O(2)),Z=P.setInt8;Y.setInt8(0,2147483648),Y.setInt8(1,2147483649),!Y.getInt8(0)&&Y.getInt8(1)||u(P,{setInt8:function(t,e){Z.call(this,t,e<<24>>24)},setUint8:function(t,e){Z.call(this,t,e<<24>>24)}},{unsafe:!0})}else O=function(t){s(this,O,M);var e=d(t);_(this,{bytes:y.call(new Array(e),0),byteLength:e}),i||(this.byteLength=e)},L=function(t,e,n){s(this,L,S),s(t,O,S);var l=w(t).byteLength,r=c(e);if(r<0||r>l)throw k("Wrong offset");if(n=void 0===n?l-r:h(n),r+n>l)throw k(E);_(this,{buffer:t,byteLength:n,byteOffset:r}),i||(this.buffer=t,this.byteLength=n,this.byteOffset=r)},i&&(V(O,"byteLength"),V(L,"buffer"),V(L,"byteLength"),V(L,"byteOffset")),u(L[T],{getInt8:function(t){return H(this,1,t)[0]<<24>>24},getUint8:function(t){return H(this,1,t)[0]},getInt16:function(t){var e=H(this,2,t,arguments.length>1?arguments[1]:void 0);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=H(this,2,t,arguments.length>1?arguments[1]:void 0);return e[1]<<8|e[0]},getInt32:function(t){return z(H(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t){return z(H(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t){return D(H(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t){return D(H(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,e){G(this,1,t,N,e)},setUint8:function(t,e){G(this,1,t,N,e)},setInt16:function(t,e){G(this,2,t,j,e,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,e){G(this,2,t,j,e,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,e){G(this,4,t,B,e,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,e){G(this,4,t,B,e,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,e){G(this,4,t,F,e,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,e){G(this,8,t,U,e,arguments.length>2?arguments[2]:void 0)}});b(O,M),b(L,S),t.exports={ArrayBuffer:O,DataView:L}},"649e":function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").some,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("some",(function(t){return i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},6544:function(t,e){t.exports=function(t,e){var n="function"===typeof t.exports?t.exports.extendOptions:t.options;for(var l in"function"===typeof t.exports&&(n.components=t.exports.options.components),n.components=n.components||{},e)n.components[l]=n.components[l]||e[l]}},6547:function(t,e,n){var l=n("a691"),i=n("1d80"),r=function(t){return function(e,n){var r,o,u=String(i(e)),a=l(n),s=u.length;return a<0||a>=s?t?"":void 0:(r=u.charCodeAt(a),r<55296||r>56319||a+1===s||(o=u.charCodeAt(a+1))<56320||o>57343?t?u.charAt(a):r:t?u.slice(a,a+2):o-56320+(r-55296<<10)+65536)}};t.exports={codeAt:r(!1),charAt:r(!0)}},6566:function(t,e,n){"use strict";var l=n("9bf2").f,i=n("7c73"),r=n("e2cc"),o=n("0366"),u=n("19aa"),a=n("2266"),s=n("7dd0"),c=n("2626"),h=n("83ab"),d=n("f183").fastKey,f=n("69f3"),p=f.set,m=f.getterFor;t.exports={getConstructor:function(t,e,n,s){var c=t((function(t,l){u(t,c,e),p(t,{type:e,index:i(null),first:void 0,last:void 0,size:0}),h||(t.size=0),void 0!=l&&a(l,t[s],{that:t,AS_ENTRIES:n})})),f=m(e),v=function(t,e,n){var l,i,r=f(t),o=g(t,e);return o?o.value=n:(r.last=o={index:i=d(e,!0),key:e,value:n,previous:l=r.last,next:void 0,removed:!1},r.first||(r.first=o),l&&(l.next=o),h?r.size++:t.size++,"F"!==i&&(r.index[i]=o)),t},g=function(t,e){var n,l=f(t),i=d(e);if("F"!==i)return l.index[i];for(n=l.first;n;n=n.next)if(n.key==e)return n};return r(c.prototype,{clear:function(){var t=this,e=f(t),n=e.index,l=e.first;while(l)l.removed=!0,l.previous&&(l.previous=l.previous.next=void 0),delete n[l.index],l=l.next;e.first=e.last=void 0,h?e.size=0:t.size=0},delete:function(t){var e=this,n=f(e),l=g(e,t);if(l){var i=l.next,r=l.previous;delete n.index[l.index],l.removed=!0,r&&(r.next=i),i&&(i.previous=r),n.first==l&&(n.first=i),n.last==l&&(n.last=r),h?n.size--:e.size--}return!!l},forEach:function(t){var e,n=f(this),l=o(t,arguments.length>1?arguments[1]:void 0,3);while(e=e?e.next:n.first){l(e.value,e.key,this);while(e&&e.removed)e=e.previous}},has:function(t){return!!g(this,t)}}),r(c.prototype,n?{get:function(t){var e=g(this,t);return e&&e.value},set:function(t,e){return v(this,0===t?0:t,e)}}:{add:function(t){return v(this,t=0===t?0:t,t)}}),h&&l(c.prototype,"size",{get:function(){return f(this).size}}),c},setStrong:function(t,e,n){var l=e+" Iterator",i=m(e),r=m(l);s(t,e,(function(t,e){p(this,{type:l,target:t,state:i(t),kind:e,last:void 0})}),(function(){var t=r(this),e=t.kind,n=t.last;while(n&&n.removed)n=n.previous;return t.target&&(t.last=n=n?n.next:t.state.first)?"keys"==e?{value:n.key,done:!1}:"values"==e?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(t.target=void 0,{value:void 0,done:!0})}),n?"entries":"values",!n,!0),c(e)}}},"65f0":function(t,e,n){var l=n("861d"),i=n("e8b5"),r=n("b622"),o=r("species");t.exports=function(t,e){var n;return i(t)&&(n=t.constructor,"function"!=typeof n||n!==Array&&!i(n.prototype)?l(n)&&(n=n[o],null===n&&(n=void 0)):n=void 0),new(void 0===n?Array:n)(0===e?0:e)}},"67b6":function(t,e,n){"use strict";n("b0c0");var l=n("5530"),i=(n("2c64"),n("ba87")),r=n("9d26"),o=n("c37a"),u=n("7e2b"),a=n("a9ad"),s=n("4e82"),c=n("5311"),h=n("7560"),d=n("fe09"),f=n("80d2"),p=n("58df"),m=n("d9f7"),v=Object(p["a"])(u["a"],a["a"],c["a"],Object(s["a"])("radioGroup"),h["a"]);e["a"]=v.extend().extend({name:"v-radio",inheritAttrs:!1,props:{disabled:Boolean,id:String,label:String,name:String,offIcon:{type:String,default:"$radioOff"},onIcon:{type:String,default:"$radioOn"},readonly:Boolean,value:{default:null}},data:function(){return{isFocused:!1}},computed:{classes:function(){return Object(l["a"])(Object(l["a"])({"v-radio--is-disabled":this.isDisabled,"v-radio--is-focused":this.isFocused},this.themeClasses),this.groupClasses)},computedColor:function(){return d["a"].options.computed.computedColor.call(this)},computedIcon:function(){return this.isActive?this.onIcon:this.offIcon},computedId:function(){return o["a"].options.computed.computedId.call(this)},hasLabel:o["a"].options.computed.hasLabel,hasState:function(){return(this.radioGroup||{}).hasState},isDisabled:function(){return this.disabled||!!this.radioGroup&&this.radioGroup.isDisabled},isReadonly:function(){return this.readonly||!!this.radioGroup&&this.radioGroup.isReadonly},computedName:function(){return this.name||!this.radioGroup?this.name:this.radioGroup.name||"radio-".concat(this.radioGroup._uid)},rippleState:function(){return d["a"].options.computed.rippleState.call(this)},validationState:function(){return(this.radioGroup||{}).validationState||this.computedColor}},methods:{genInput:function(t){return d["a"].options.methods.genInput.call(this,"radio",t)},genLabel:function(){return this.hasLabel?this.$createElement(i["a"],{on:{click:d["b"]},attrs:{for:this.computedId},props:{color:this.validationState,focused:this.hasState}},Object(f["o"])(this,"label")||this.label):null},genRadio:function(){return this.$createElement("div",{staticClass:"v-input--selection-controls__input"},[this.$createElement(r["a"],this.setTextColor(this.validationState,{props:{dense:this.radioGroup&&this.radioGroup.dense}}),this.computedIcon),this.genInput(Object(l["a"])({name:this.computedName,value:this.value},this.attrs$)),this.genRipple(this.setTextColor(this.rippleState))])},onFocus:function(t){this.isFocused=!0,this.$emit("focus",t)},onBlur:function(t){this.isFocused=!1,this.$emit("blur",t)},onChange:function(){this.isDisabled||this.isReadonly||this.isActive||this.toggle()},onKeydown:function(){}},render:function(t){var e={staticClass:"v-radio",class:this.classes,on:Object(m["b"])({click:this.onChange},this.listeners$)};return t("div",e,[this.genRadio(),this.genLabel()])}})},"68dd":function(t,e,n){},"69f3":function(t,e,n){var l,i,r,o=n("7f9a"),u=n("da84"),a=n("861d"),s=n("9112"),c=n("5135"),h=n("c6cd"),d=n("f772"),f=n("d012"),p=u.WeakMap,m=function(t){return r(t)?i(t):l(t,{})},v=function(t){return function(e){var n;if(!a(e)||(n=i(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}};if(o){var g=h.state||(h.state=new p),y=g.get,b=g.has,x=g.set;l=function(t,e){return e.facade=t,x.call(g,t,e),e},i=function(t){return y.call(g,t)||{}},r=function(t){return b.call(g,t)}}else{var w=d("state");f[w]=!0,l=function(t,e){return e.facade=t,s(t,w,e),e},i=function(t){return c(t,w)?t[w]:{}},r=function(t){return c(t,w)}}t.exports={set:l,get:i,has:r,enforce:m,getterFor:v}},"6b53":function(t,e,n){"use strict";n("a9e3"),n("36a7");var l=n("24b2"),i=n("58df");e["a"]=Object(i["a"])(l["a"]).extend({name:"v-responsive",props:{aspectRatio:[String,Number],contentClass:String},computed:{computedAspectRatio:function(){return Number(this.aspectRatio)},aspectStyle:function(){return this.computedAspectRatio?{paddingBottom:1/this.computedAspectRatio*100+"%"}:void 0},__cachedSizer:function(){return this.aspectStyle?this.$createElement("div",{style:this.aspectStyle,staticClass:"v-responsive__sizer"}):[]}},methods:{genContent:function(){return this.$createElement("div",{staticClass:"v-responsive__content",class:this.contentClass},this.$slots.default)}},render:function(t){return t("div",{staticClass:"v-responsive",style:this.measurableStyles,on:this.$listeners},[this.__cachedSizer,this.genContent()])}})},"6b75":function(t,e,n){"use strict";function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,l=new Array(e);n<e;n++)l[n]=t[n];return l}n.d(e,"a",(function(){return l}))},"6ca7":function(t,e,n){},"6d61":function(t,e,n){"use strict";var l=n("23e7"),i=n("da84"),r=n("94ca"),o=n("6eeb"),u=n("f183"),a=n("2266"),s=n("19aa"),c=n("861d"),h=n("d039"),d=n("1c7e"),f=n("d44e"),p=n("7156");t.exports=function(t,e,n){var m=-1!==t.indexOf("Map"),v=-1!==t.indexOf("Weak"),g=m?"set":"add",y=i[t],b=y&&y.prototype,x=y,w={},_=function(t){var e=b[t];o(b,t,"add"==t?function(t){return e.call(this,0===t?0:t),this}:"delete"==t?function(t){return!(v&&!c(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return v&&!c(t)?void 0:e.call(this,0===t?0:t)}:"has"==t?function(t){return!(v&&!c(t))&&e.call(this,0===t?0:t)}:function(t,n){return e.call(this,0===t?0:t,n),this})};if(r(t,"function"!=typeof y||!(v||b.forEach&&!h((function(){(new y).entries().next()})))))x=n.getConstructor(e,t,m,g),u.REQUIRED=!0;else if(r(t,!0)){var M=new x,S=M[g](v?{}:-0,1)!=M,T=h((function(){M.has(1)})),E=d((function(t){new y(t)})),A=!v&&h((function(){var t=new y,e=5;while(e--)t[g](e,e);return!t.has(-0)}));E||(x=e((function(e,n){s(e,x,t);var l=p(new y,e,x);return void 0!=n&&a(n,l[g],{that:l,AS_ENTRIES:m}),l})),x.prototype=b,b.constructor=x),(T||A)&&(_("delete"),_("has"),m&&_("get")),(A||S)&&_(g),v&&b.clear&&delete b.clear}return w[t]=x,l({global:!0,forced:x!=y},w),f(x,t),v||n.setStrong(x,t,m),x}},"6ece":function(t,e,n){},"6eeb":function(t,e,n){var l=n("da84"),i=n("9112"),r=n("5135"),o=n("ce4e"),u=n("8925"),a=n("69f3"),s=a.get,c=a.enforce,h=String(String).split("String");(t.exports=function(t,e,n,u){var a,s=!!u&&!!u.unsafe,d=!!u&&!!u.enumerable,f=!!u&&!!u.noTargetGet;"function"==typeof n&&("string"!=typeof e||r(n,"name")||i(n,"name",e),a=c(n),a.source||(a.source=h.join("string"==typeof e?e:""))),t!==l?(s?!f&&t[e]&&(d=!0):delete t[e],d?t[e]=n:i(t,e,n)):d?t[e]=n:o(e,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&s(this).source||u(this)}))},"6f53":function(t,e,n){var l=n("83ab"),i=n("df75"),r=n("fc6a"),o=n("d1e7").f,u=function(t){return function(e){var n,u=r(e),a=i(u),s=a.length,c=0,h=[];while(s>c)n=a[c++],l&&!o.call(u,n)||h.push(t?[n,u[n]]:u[n]);return h}};t.exports={entries:u(!0),values:u(!1)}},7156:function(t,e,n){var l=n("861d"),i=n("d2bb");t.exports=function(t,e,n){var r,o;return i&&"function"==typeof(r=e.constructor)&&r!==n&&l(o=r.prototype)&&o!==n.prototype&&i(t,o),t}},"72f7":function(t,e,n){"use strict";var l=n("ebb5").exportTypedArrayMethod,i=n("d039"),r=n("da84"),o=r.Uint8Array,u=o&&o.prototype||{},a=[].toString,s=[].join;i((function(){a.call({})}))&&(a=function(){return s.call(this)});var c=u.toString!=a;l("toString",a,c)},"735e":function(t,e,n){"use strict";var l=n("ebb5"),i=n("81d5"),r=l.aTypedArray,o=l.exportTypedArrayMethod;o("fill",(function(t){return i.apply(r(this),arguments)}))},7418:function(t,e){e.f=Object.getOwnPropertySymbols},7435:function(t,e,n){},"746f":function(t,e,n){var l=n("428f"),i=n("5135"),r=n("e538"),o=n("9bf2").f;t.exports=function(t){var e=l.Symbol||(l.Symbol={});i(e,t)||o(e,t,{value:r.f(t)})}},7496:function(t,e,n){"use strict";var l=n("5530"),i=(n("df86"),n("7560")),r=n("58df");e["a"]=Object(r["a"])(i["a"]).extend({name:"v-app",props:{dark:{type:Boolean,default:void 0},id:{type:String,default:"app"},light:{type:Boolean,default:void 0}},computed:{isDark:function(){return this.$vuetify.theme.dark}},beforeCreate:function(){if(!this.$vuetify||this.$vuetify===this.$root)throw new Error("Vuetify is not properly initialized, see https://vuetifyjs.com/getting-started/quick-start#bootstrapping-the-vuetify-object")},render:function(t){var e=t("div",{staticClass:"v-application--wrap"},this.$slots.default);return t("div",{staticClass:"v-application",class:Object(l["a"])({"v-application--is-rtl":this.$vuetify.rtl,"v-application--is-ltr":!this.$vuetify.rtl},this.themeClasses),attrs:{"data-app":!0},domProps:{id:this.id}},[e])}})},"74e8":function(t,e,n){"use strict";var l=n("23e7"),i=n("da84"),r=n("83ab"),o=n("8aa7"),u=n("ebb5"),a=n("621a"),s=n("19aa"),c=n("5c6c"),h=n("9112"),d=n("50c4"),f=n("0b25"),p=n("182d"),m=n("c04e"),v=n("5135"),g=n("f5df"),y=n("861d"),b=n("7c73"),x=n("d2bb"),w=n("241c").f,_=n("a078"),M=n("b727").forEach,S=n("2626"),T=n("9bf2"),E=n("06cf"),A=n("69f3"),C=n("7156"),O=A.get,L=A.set,P=T.f,R=E.f,k=Math.round,I=i.RangeError,D=a.ArrayBuffer,N=a.DataView,j=u.NATIVE_ARRAY_BUFFER_VIEWS,B=u.TYPED_ARRAY_TAG,z=u.TypedArray,F=u.TypedArrayPrototype,U=u.aTypedArrayConstructor,V=u.isTypedArray,H="BYTES_PER_ELEMENT",G="Wrong length",W=function(t,e){var n=0,l=e.length,i=new(U(t))(l);while(l>n)i[n]=e[n++];return i},$=function(t,e){P(t,e,{get:function(){return O(this)[e]}})},q=function(t){var e;return t instanceof D||"ArrayBuffer"==(e=g(t))||"SharedArrayBuffer"==e},X=function(t,e){return V(t)&&"symbol"!=typeof e&&e in t&&String(+e)==String(e)},Y=function(t,e){return X(t,e=m(e,!0))?c(2,t[e]):R(t,e)},Z=function(t,e,n){return!(X(t,e=m(e,!0))&&y(n)&&v(n,"value"))||v(n,"get")||v(n,"set")||n.configurable||v(n,"writable")&&!n.writable||v(n,"enumerable")&&!n.enumerable?P(t,e,n):(t[e]=n.value,t)};r?(j||(E.f=Y,T.f=Z,$(F,"buffer"),$(F,"byteOffset"),$(F,"byteLength"),$(F,"length")),l({target:"Object",stat:!0,forced:!j},{getOwnPropertyDescriptor:Y,defineProperty:Z}),t.exports=function(t,e,n){var r=t.match(/\d+$/)[0]/8,u=t+(n?"Clamped":"")+"Array",a="get"+t,c="set"+t,m=i[u],v=m,g=v&&v.prototype,T={},E=function(t,e){var n=O(t);return n.view[a](e*r+n.byteOffset,!0)},A=function(t,e,l){var i=O(t);n&&(l=(l=k(l))<0?0:l>255?255:255&l),i.view[c](e*r+i.byteOffset,l,!0)},R=function(t,e){P(t,e,{get:function(){return E(this,e)},set:function(t){return A(this,e,t)},enumerable:!0})};j?o&&(v=e((function(t,e,n,l){return s(t,v,u),C(function(){return y(e)?q(e)?void 0!==l?new m(e,p(n,r),l):void 0!==n?new m(e,p(n,r)):new m(e):V(e)?W(v,e):_.call(v,e):new m(f(e))}(),t,v)})),x&&x(v,z),M(w(m),(function(t){t in v||h(v,t,m[t])})),v.prototype=g):(v=e((function(t,e,n,l){s(t,v,u);var i,o,a,c=0,h=0;if(y(e)){if(!q(e))return V(e)?W(v,e):_.call(v,e);i=e,h=p(n,r);var m=e.byteLength;if(void 0===l){if(m%r)throw I(G);if(o=m-h,o<0)throw I(G)}else if(o=d(l)*r,o+h>m)throw I(G);a=o/r}else a=f(e),o=a*r,i=new D(o);L(t,{buffer:i,byteOffset:h,byteLength:o,length:a,view:new N(i)});while(c<a)R(t,c++)})),x&&x(v,z),g=v.prototype=b(F)),g.constructor!==v&&h(g,"constructor",v),B&&h(g,B,u),T[u]=v,l({global:!0,forced:v!=m,sham:!j},T),H in v||h(v,H,r),H in g||h(g,H,r),S(u)}):t.exports=function(){}},7560:function(t,e,n){"use strict";n.d(e,"b",(function(){return o}));var l=n("5530"),i=n("2b0e"),r=i["a"].extend().extend({name:"themeable",provide:function(){return{theme:this.themeableProvide}},inject:{theme:{default:{isDark:!1}}},props:{dark:{type:Boolean,default:null},light:{type:Boolean,default:null}},data:function(){return{themeableProvide:{isDark:!1}}},computed:{appIsDark:function(){return this.$vuetify.theme.dark||!1},isDark:function(){return!0===this.dark||!0!==this.light&&this.theme.isDark},themeClasses:function(){return{"theme--dark":this.isDark,"theme--light":!this.isDark}},rootIsDark:function(){return!0===this.dark||!0!==this.light&&this.appIsDark},rootThemeClasses:function(){return{"theme--dark":this.rootIsDark,"theme--light":!this.rootIsDark}}},watch:{isDark:{handler:function(t,e){t!==e&&(this.themeableProvide.isDark=this.isDark)},immediate:!0}}});function o(t){var e=Object(l["a"])(Object(l["a"])({},t.props),t.injections),n=r.options.computed.isDark.call(e);return r.options.computed.themeClasses.call({isDark:n})}e["a"]=r},"75eb":function(t,e,n){"use strict";n("4160"),n("159b");var l=n("ade3"),i=n("53ca"),r=n("9d65"),o=n("80d2"),u=n("58df"),a=n("d9bd");function s(t){var e=Object(i["a"])(t);return"boolean"===e||"string"===e||t.nodeType===Node.ELEMENT_NODE}e["a"]=Object(u["a"])(r["a"]).extend({name:"detachable",props:{attach:{default:!1,validator:s},contentClass:{type:String,default:""}},data:function(){return{activatorNode:null,hasDetached:!1}},watch:{attach:function(){this.hasDetached=!1,this.initDetach()},hasContent:function(){this.$nextTick(this.initDetach)}},beforeMount:function(){var t=this;this.$nextTick((function(){if(t.activatorNode){var e=Array.isArray(t.activatorNode)?t.activatorNode:[t.activatorNode];e.forEach((function(e){if(e.elm&&t.$el.parentNode){var n=t.$el===t.$el.parentNode.firstChild?t.$el:t.$el.nextSibling;t.$el.parentNode.insertBefore(e.elm,n)}}))}}))},mounted:function(){this.hasContent&&this.initDetach()},deactivated:function(){this.isActive=!1},beforeDestroy:function(){try{if(this.$refs.content&&this.$refs.content.parentNode&&this.$refs.content.parentNode.removeChild(this.$refs.content),this.activatorNode){var t=Array.isArray(this.activatorNode)?this.activatorNode:[this.activatorNode];t.forEach((function(t){t.elm&&t.elm.parentNode&&t.elm.parentNode.removeChild(t.elm)}))}}catch(e){console.log(e)}},methods:{getScopeIdAttrs:function(){var t=Object(o["m"])(this.$vnode,"context.$options._scopeId");return t&&Object(l["a"])({},t,"")},initDetach:function(){var t;this._isDestroyed||!this.$refs.content||this.hasDetached||""===this.attach||!0===this.attach||"attach"===this.attach||(t=!1===this.attach?document.querySelector("[data-app]"):"string"===typeof this.attach?document.querySelector(this.attach):this.attach,t?(t.appendChild(this.$refs.content),this.hasDetached=!0):Object(a["c"])("Unable to locate target ".concat(this.attach||"[data-app]"),this))}}})},"77a7":function(t,e){var n=1/0,l=Math.abs,i=Math.pow,r=Math.floor,o=Math.log,u=Math.LN2,a=function(t,e,a){var s,c,h,d=new Array(a),f=8*a-e-1,p=(1<<f)-1,m=p>>1,v=23===e?i(2,-24)-i(2,-77):0,g=t<0||0===t&&1/t<0?1:0,y=0;for(t=l(t),t!=t||t===n?(c=t!=t?1:0,s=p):(s=r(o(t)/u),t*(h=i(2,-s))<1&&(s--,h*=2),t+=s+m>=1?v/h:v*i(2,1-m),t*h>=2&&(s++,h/=2),s+m>=p?(c=0,s=p):s+m>=1?(c=(t*h-1)*i(2,e),s+=m):(c=t*i(2,m-1)*i(2,e),s=0));e>=8;d[y++]=255&c,c/=256,e-=8);for(s=s<<e|c,f+=e;f>0;d[y++]=255&s,s/=256,f-=8);return d[--y]|=128*g,d},s=function(t,e){var l,r=t.length,o=8*r-e-1,u=(1<<o)-1,a=u>>1,s=o-7,c=r-1,h=t[c--],d=127&h;for(h>>=7;s>0;d=256*d+t[c],c--,s-=8);for(l=d&(1<<-s)-1,d>>=-s,s+=e;s>0;l=256*l+t[c],c--,s-=8);if(0===d)d=1-a;else{if(d===u)return l?NaN:h?-n:n;l+=i(2,e),d-=a}return(h?-1:1)*l*i(2,d-e)};t.exports={pack:a,unpack:s}},7839:function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},"7b0b":function(t,e,n){var l=n("1d80");t.exports=function(t){return Object(l(t))}},"7bc6":function(t,e,n){"use strict";n.d(e,"d",(function(){return i})),n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return o})),n.d(e,"a",(function(){return u}));n("99af"),n("a15b"),n("d81d"),n("fb6a"),n("b0c0"),n("d3b7"),n("07ac"),n("ac1f"),n("25f0"),n("466d"),n("38cf"),n("5319"),n("1276"),n("2ca0"),n("498a"),n("5530"),n("3835");var l=n("d9bd");n("80d2"),n("8da5");function i(t){return!!t&&!!t.match(/^(#|var\(--|(rgb|hsl)a?\()/)}function r(t){var e;if("number"===typeof t)e=t;else{if("string"!==typeof t)throw new TypeError("Colors can only be numbers or strings, recieved ".concat(null==t?t:t.constructor.name," instead"));var n="#"===t[0]?t.substring(1):t;3===n.length&&(n=n.split("").map((function(t){return t+t})).join("")),6!==n.length&&Object(l["c"])("'".concat(t,"' is not a valid rgb color")),e=parseInt(n,16)}return e<0?(Object(l["c"])("Colors cannot be negative: '".concat(t,"'")),e=0):(e>16777215||isNaN(e))&&(Object(l["c"])("'".concat(t,"' is not a valid rgb color")),e=16777215),e}function o(t){var e=t.toString(16);return e.length<6&&(e="0".repeat(6-e.length)+e),"#"+e}function u(t){return o(r(t))}},"7c73":function(t,e,n){var l,i=n("825a"),r=n("37e8"),o=n("7839"),u=n("d012"),a=n("1be4"),s=n("cc12"),c=n("f772"),h=">",d="<",f="prototype",p="script",m=c("IE_PROTO"),v=function(){},g=function(t){return d+p+h+t+d+"/"+p+h},y=function(t){t.write(g("")),t.close();var e=t.parentWindow.Object;return t=null,e},b=function(){var t,e=s("iframe"),n="java"+p+":";return e.style.display="none",a.appendChild(e),e.src=String(n),t=e.contentWindow.document,t.open(),t.write(g("document.F=Object")),t.close(),t.F},x=function(){try{l=document.domain&&new ActiveXObject("htmlfile")}catch(e){}x=l?y(l):b();var t=o.length;while(t--)delete x[f][o[t]];return x()};u[m]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(v[f]=i(t),n=new v,v[f]=null,n[m]=t):n=x(),void 0===e?n:r(n,e)}},"7db0":function(t,e,n){"use strict";var l=n("23e7"),i=n("b727").find,r=n("44d2"),o=n("ae40"),u="find",a=!0,s=o(u);u in[]&&Array(1)[u]((function(){a=!1})),l({target:"Array",proto:!0,forced:a||!s},{find:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),r(u)},"7dd0":function(t,e,n){"use strict";var l=n("23e7"),i=n("9ed3"),r=n("e163"),o=n("d2bb"),u=n("d44e"),a=n("9112"),s=n("6eeb"),c=n("b622"),h=n("c430"),d=n("3f8c"),f=n("ae93"),p=f.IteratorPrototype,m=f.BUGGY_SAFARI_ITERATORS,v=c("iterator"),g="keys",y="values",b="entries",x=function(){return this};t.exports=function(t,e,n,c,f,w,_){i(n,e,c);var M,S,T,E=function(t){if(t===f&&P)return P;if(!m&&t in O)return O[t];switch(t){case g:return function(){return new n(this,t)};case y:return function(){return new n(this,t)};case b:return function(){return new n(this,t)}}return function(){return new n(this)}},A=e+" Iterator",C=!1,O=t.prototype,L=O[v]||O["@@iterator"]||f&&O[f],P=!m&&L||E(f),R="Array"==e&&O.entries||L;if(R&&(M=r(R.call(new t)),p!==Object.prototype&&M.next&&(h||r(M)===p||(o?o(M,p):"function"!=typeof M[v]&&a(M,v,x)),u(M,A,!0,!0),h&&(d[A]=x))),f==y&&L&&L.name!==y&&(C=!0,P=function(){return L.call(this)}),h&&!_||O[v]===P||a(O,v,P),d[e]=P,f)if(S={values:E(y),keys:w?P:E(g),entries:E(b)},_)for(T in S)(m||C||!(T in O))&&s(O,T,S[T]);else l({target:e,proto:!0,forced:m||C},S);return S}},"7e2b":function(t,e,n){"use strict";var l=n("2b0e");function i(t){return function(e,n){for(var l in n)Object.prototype.hasOwnProperty.call(e,l)||this.$delete(this.$data[t],l);for(var i in e)this.$set(this.$data[t],i,e[i])}}e["a"]=l["a"].extend({data:function(){return{attrs$:{},listeners$:{}}},created:function(){this.$watch("$attrs",i("attrs$"),{immediate:!0}),this.$watch("$listeners",i("listeners$"),{immediate:!0})}})},"7f9a":function(t,e,n){var l=n("da84"),i=n("8925"),r=l.WeakMap;t.exports="function"===typeof r&&/native code/.test(i(r))},"80d2":function(t,e,n){"use strict";n.d(e,"h",(function(){return r})),n.d(e,"a",(function(){return o})),n.d(e,"x",(function(){return u})),n.d(e,"b",(function(){return s})),n.d(e,"l",(function(){return c})),n.d(e,"i",(function(){return h})),n.d(e,"m",(function(){return d})),n.d(e,"n",(function(){return f})),n.d(e,"g",(function(){return p})),n.d(e,"q",(function(){return m})),n.d(e,"j",(function(){return g})),n.d(e,"k",(function(){return y})),n.d(e,"f",(function(){return b})),n.d(e,"s",(function(){return x})),n.d(e,"t",(function(){return _})),n.d(e,"y",(function(){return M})),n.d(e,"u",(function(){return S})),n.d(e,"c",(function(){return E})),n.d(e,"z",(function(){return A})),n.d(e,"A",(function(){return C})),n.d(e,"p",(function(){return O})),n.d(e,"o",(function(){return L})),n.d(e,"e",(function(){return P})),n.d(e,"w",(function(){return R})),n.d(e,"d",(function(){return k})),n.d(e,"r",(function(){return I})),n.d(e,"v",(function(){return D}));n("99af"),n("a623"),n("cb29"),n("4de4"),n("a630"),n("c975"),n("d81d"),n("13d5"),n("fb6a"),n("45fc"),n("b0c0"),n("a9e3"),n("b680"),n("dca8"),n("b64b"),n("d3b7"),n("ac1f"),n("25f0"),n("3ca3"),n("38cf"),n("5319"),n("1276"),n("2ca0"),n("498a"),n("3835");var l=n("53ca"),i=(n("5530"),n("2b0e"));function r(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"div",n=arguments.length>2?arguments[2]:void 0;return i["a"].extend({name:n||t.replace(/__/g,"-"),functional:!0,render:function(n,l){var i=l.data,r=l.children;return i.staticClass="".concat(t," ").concat(i.staticClass||"").trim(),n(e,i,r)}})}function o(t,e,n){var l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=function i(r){n(r),t.removeEventListener(e,i,l)};t.addEventListener(e,i,l)}var u=!1;try{if("undefined"!==typeof window){var a=Object.defineProperty({},"passive",{get:function(){u=!0}});window.addEventListener("testListener",a,a),window.removeEventListener("testListener",a,a)}}catch(N){console.warn(N)}function s(t,e,n,l){t.addEventListener(e,n,!!u&&l)}function c(t,e,n){var l=e.length-1;if(l<0)return void 0===t?n:t;for(var i=0;i<l;i++){if(null==t)return n;t=t[e[i]]}return null==t||void 0===t[e[l]]?n:t[e[l]]}function h(t,e){if(t===e)return!0;if(t instanceof Date&&e instanceof Date&&t.getTime()!==e.getTime())return!1;if(t!==Object(t)||e!==Object(e))return!1;var n=Object.keys(t);return n.length===Object.keys(e).length&&n.every((function(n){return h(t[n],e[n])}))}function d(t,e,n){return null!=t&&e&&"string"===typeof e?void 0!==t[e]?t[e]:(e=e.replace(/\[(\w+)\]/g,".$1"),e=e.replace(/^\./,""),c(t,e.split("."),n)):n}function f(t,e,n){if(null==e)return void 0===t?n:t;if(t!==Object(t))return void 0===n?t:n;if("string"===typeof e)return d(t,e,n);if(Array.isArray(e))return c(t,e,n);if("function"!==typeof e)return n;var l=e(t,n);return"undefined"===typeof l?n:l}function p(t){return Array.from({length:t},(function(t,e){return e}))}function m(t){if(!t||t.nodeType!==Node.ELEMENT_NODE)return 0;var e=+window.getComputedStyle(t).getPropertyValue("z-index");return e||m(t.parentNode)}var v={"&":"&amp;","<":"&lt;",">":"&gt;"};function g(t){return t.replace(/[&<>]/g,(function(t){return v[t]||t}))}function y(t,e){for(var n={},l=0;l<e.length;l++){var i=e[l];"undefined"!==typeof t[i]&&(n[i]=t[i])}return n}function b(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"px";return null==t||""===t?void 0:isNaN(+t)?String(t):"".concat(Number(t)).concat(e)}function x(t){return(t||"").replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function w(t){return null!==t&&"object"===Object(l["a"])(t)}var _=Object.freeze({enter:13,tab:9,delete:46,esc:27,space:32,up:38,down:40,left:37,right:39,end:35,home:36,del:46,backspace:8,insert:45,pageup:33,pagedown:34});function M(t,e){var n=t.$vuetify.icons.component;if(e.startsWith("$")){var l="$vuetify.icons.values.".concat(e.split("$").pop().split(".").pop()),i=d(t,l,e);if("string"!==typeof i)return i;e=i}return null==n?e:{component:n,props:{icon:e}}}function S(t){return Object.keys(t)}var T=/-(\w)/g,E=function(t){return t.replace(T,(function(t,e){return e?e.toUpperCase():""}))};function A(t){return t.charAt(0).toUpperCase()+t.slice(1)}function C(t){return null!=t?Array.isArray(t)?t:[t]:[]}function O(t,e,n){return t.$slots[e]&&t.$scopedSlots[e]&&t.$scopedSlots[e].name?n?"v-slot":"scoped":t.$slots[e]?"normal":t.$scopedSlots[e]?"scoped":void 0}function L(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"default",n=arguments.length>2?arguments[2]:void 0,l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return t.$scopedSlots[e]?t.$scopedSlots[e](n instanceof Function?n():n):!t.$slots[e]||n&&!l?void 0:t.$slots[e]}function P(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Math.max(e,Math.min(n,t))}function R(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"0";return t+n.repeat(Math.max(0,e-t.length))}function k(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=[],l=0;while(l<t.length)n.push(t.substr(l,e)),l+=e;return n}function I(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e?1024:1e3;if(t<n)return"".concat(t," B");var l=e?["Ki","Mi","Gi"]:["k","M","G"],i=-1;while(Math.abs(t)>=n&&i<l.length-1)t/=n,++i;return"".concat(t.toFixed(1)," ").concat(l[i],"B")}function D(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var n in e){var l=t[n],i=e[n];w(l)&&w(i)?t[n]=D(l,i):t[n]=i}return t}},"81d5":function(t,e,n){"use strict";var l=n("7b0b"),i=n("23cb"),r=n("50c4");t.exports=function(t){var e=l(this),n=r(e.length),o=arguments.length,u=i(o>1?arguments[1]:void 0,n),a=o>2?arguments[2]:void 0,s=void 0===a?n:i(a,n);while(s>u)e[u++]=t;return e}},"825a":function(t,e,n){var l=n("861d");t.exports=function(t){if(!l(t))throw TypeError(String(t)+" is not an object");return t}},"82f8":function(t,e,n){"use strict";var l=n("ebb5"),i=n("4d64").includes,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("includes",(function(t){return i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},8336:function(t,e,n){"use strict";n("4160"),n("caad"),n("a9e3"),n("c7cd");var l=n("53ca"),i=n("3835"),r=n("5530"),o=(n("86cc"),n("10d2")),u=n("490a"),a=u["a"],s=n("4e82"),c=n("f2e7"),h=n("c995"),d=n("fe6c"),f=n("1c87"),p=n("af2b"),m=n("58df"),v=n("d9bd"),g=Object(m["a"])(o["a"],f["a"],d["a"],p["a"],Object(s["a"])("btnToggle"),Object(c["b"])("inputValue"));e["a"]=g.extend().extend({name:"v-btn",props:{activeClass:{type:String,default:function(){return this.btnToggle?this.btnToggle.activeClass:""}},block:Boolean,depressed:Boolean,fab:Boolean,icon:Boolean,loading:Boolean,outlined:Boolean,plain:Boolean,retainFocusOnClick:Boolean,rounded:Boolean,tag:{type:String,default:"button"},text:Boolean,tile:Boolean,type:{type:String,default:"button"},value:null},data:function(){return{proxyClass:"v-btn--active"}},computed:{classes:function(){return Object(r["a"])(Object(r["a"])(Object(r["a"])(Object(r["a"])(Object(r["a"])({"v-btn":!0},f["a"].options.computed.classes.call(this)),{},{"v-btn--absolute":this.absolute,"v-btn--block":this.block,"v-btn--bottom":this.bottom,"v-btn--disabled":this.disabled,"v-btn--is-elevated":this.isElevated,"v-btn--fab":this.fab,"v-btn--fixed":this.fixed,"v-btn--has-bg":this.hasBg,"v-btn--icon":this.icon,"v-btn--left":this.left,"v-btn--loading":this.loading,"v-btn--outlined":this.outlined,"v-btn--plain":this.plain,"v-btn--right":this.right,"v-btn--round":this.isRound,"v-btn--rounded":this.rounded,"v-btn--router":this.to,"v-btn--text":this.text,"v-btn--tile":this.tile,"v-btn--top":this.top},this.themeClasses),this.groupClasses),this.elevationClasses),this.sizeableClasses)},computedElevation:function(){if(!this.disabled)return h["a"].options.computed.computedElevation.call(this)},computedRipple:function(){var t,e=!this.icon&&!this.fab||{circle:!0};return!this.disabled&&(null!=(t=this.ripple)?t:e)},hasBg:function(){return!this.text&&!this.plain&&!this.outlined&&!this.icon},isElevated:function(){return Boolean(!this.icon&&!this.text&&!this.outlined&&!this.depressed&&!this.disabled&&!this.plain&&(null==this.elevation||Number(this.elevation)>0))},isRound:function(){return Boolean(this.icon||this.fab)},styles:function(){return Object(r["a"])({},this.measurableStyles)}},created:function(){var t=this,e=[["flat","text"],["outline","outlined"],["round","rounded"]];e.forEach((function(e){var n=Object(i["a"])(e,2),l=n[0],r=n[1];t.$attrs.hasOwnProperty(l)&&Object(v["a"])(l,r,t)}))},methods:{click:function(t){!this.retainFocusOnClick&&!this.fab&&t.detail&&this.$el.blur(),this.$emit("click",t),this.btnToggle&&this.toggle()},genContent:function(){return this.$createElement("span",{staticClass:"v-btn__content"},this.$slots.default)},genLoader:function(){return this.$createElement("span",{class:"v-btn__loader"},this.$slots.loader||[this.$createElement(a,{props:{indeterminate:!0,size:23,width:2}})])}},render:function(t){var e=[this.genContent(),this.loading&&this.genLoader()],n=this.generateRouteLink(),i=n.tag,r=n.data,o=this.hasBg?this.setBackgroundColor:this.setTextColor;return"button"===i&&(r.attrs.type=this.type,r.attrs.disabled=this.disabled),r.attrs.value=["string","number"].includes(Object(l["a"])(this.value))?this.value:JSON.stringify(this.value),t(i,this.disabled?r:o(this.color,r),e)}})},"83ab":function(t,e,n){var l=n("d039");t.exports=!l((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},8418:function(t,e,n){"use strict";var l=n("c04e"),i=n("9bf2"),r=n("5c6c");t.exports=function(t,e,n){var o=l(e);o in t?i.f(t,o,r(0,n)):t[o]=n}},8547:function(t,e,n){"use strict";var l=n("2b0e"),i=n("80d2");e["a"]=l["a"].extend({name:"comparable",props:{valueComparator:{type:Function,default:i["i"]}}})},"857a":function(t,e,n){var l=n("1d80"),i=/"/g;t.exports=function(t,e,n,r){var o=String(l(t)),u="<"+e;return""!==n&&(u+=" "+n+'="'+String(r).replace(i,"&quot;")+'"'),u+">"+o+"</"+e+">"}},"861d":function(t,e){t.exports=function(t){return"object"===typeof t?null!==t:"function"===typeof t}},8654:function(t,e,n){"use strict";n("0481"),n("caad"),n("4069"),n("a9e3"),n("2b19"),n("d3b7"),n("25f0");var l=n("2909"),i=n("5530"),r=(n("4ff9"),n("c37a")),o=(n("99af"),n("e9b1"),n("7560")),u=n("58df"),a=Object(u["a"])(o["a"]).extend({name:"v-counter",functional:!0,props:{value:{type:[Number,String],default:""},max:[Number,String]},render:function(t,e){var n=e.props,l=parseInt(n.max,10),r=parseInt(n.value,10),u=l?"".concat(r," / ").concat(l):String(n.value),a=l&&r>l;return t("div",{staticClass:"v-counter",class:Object(i["a"])({"error--text":a},Object(o["b"])(e))},u)}}),s=a,c=n("ba87"),h=(n("7db0"),n("53ca"));function d(t,e){var n=e.modifiers||{},l=e.value,i="object"===Object(h["a"])(l)?l:{handler:l,options:{}},r=i.handler,o=i.options,u=new IntersectionObserver((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],l=arguments.length>1?arguments[1]:void 0;if(t._observe){if(r&&(!n.quiet||t._observe.init)){var i=Boolean(e.find((function(t){return t.isIntersecting})));r(e,l,i)}t._observe.init&&n.once?f(t):t._observe.init=!0}}),o);t._observe={init:!1,observer:u},u.observe(t)}function f(t){t._observe&&(t._observe.observer.unobserve(t),delete t._observe)}var p={inserted:d,unbind:f},m=p,v=n("d9bd"),g=n("2b0e");function y(t){return"undefined"!==typeof window&&"IntersectionObserver"in window?g["a"].extend({name:"intersectable",mounted:function(){m.inserted(this.$el,{name:"intersect",value:this.onObserve})},destroyed:function(){m.unbind(this.$el)},methods:{onObserve:function(e,n,l){if(l)for(var i=0,r=t.onVisible.length;i<r;i++){var o=this[t.onVisible[i]];"function"!==typeof o?Object(v["c"])(t.onVisible[i]+" method is not available on the instance but referenced in intersectable mixin options"):o()}}}}):g["a"].extend({name:"intersectable"})}var b=n("297c"),x=n("38cb"),w=n("dc22"),_=n("5607"),M=n("80d2"),S=Object(u["a"])(r["a"],y({onVisible:["onResize","tryAutofocus"]}),b["a"]),T=["color","file","time","date","datetime-local","week","month"];e["a"]=S.extend().extend({name:"v-text-field",directives:{resize:w["a"],ripple:_["a"]},inheritAttrs:!1,props:{appendOuterIcon:String,autofocus:Boolean,clearable:Boolean,clearIcon:{type:String,default:"$clear"},counter:[Boolean,Number,String],counterValue:Function,filled:Boolean,flat:Boolean,fullWidth:Boolean,label:String,outlined:Boolean,placeholder:String,prefix:String,prependInnerIcon:String,reverse:Boolean,rounded:Boolean,shaped:Boolean,singleLine:Boolean,solo:Boolean,soloInverted:Boolean,suffix:String,type:{type:String,default:"text"}},data:function(){return{badInput:!1,labelWidth:0,prefixWidth:0,prependWidth:0,initialValue:null,isBooted:!1,isClearing:!1}},computed:{classes:function(){return Object(i["a"])(Object(i["a"])({},r["a"].options.computed.classes.call(this)),{},{"v-text-field":!0,"v-text-field--full-width":this.fullWidth,"v-text-field--prefix":this.prefix,"v-text-field--single-line":this.isSingle,"v-text-field--solo":this.isSolo,"v-text-field--solo-inverted":this.soloInverted,"v-text-field--solo-flat":this.flat,"v-text-field--filled":this.filled,"v-text-field--is-booted":this.isBooted,"v-text-field--enclosed":this.isEnclosed,"v-text-field--reverse":this.reverse,"v-text-field--outlined":this.outlined,"v-text-field--placeholder":this.placeholder,"v-text-field--rounded":this.rounded,"v-text-field--shaped":this.shaped})},computedColor:function(){var t=x["a"].options.computed.computedColor.call(this);return this.soloInverted&&this.isFocused?this.color||"primary":t},computedCounterValue:function(){return"function"===typeof this.counterValue?this.counterValue(this.internalValue):Object(l["a"])((this.internalValue||"").toString()).length},hasCounter:function(){return!1!==this.counter&&null!=this.counter},hasDetails:function(){return r["a"].options.computed.hasDetails.call(this)||this.hasCounter},internalValue:{get:function(){return this.lazyValue},set:function(t){this.lazyValue=t,this.$emit("input",this.lazyValue)}},isDirty:function(){var t;return(null==(t=this.lazyValue)?void 0:t.toString().length)>0||this.badInput},isEnclosed:function(){return this.filled||this.isSolo||this.outlined},isLabelActive:function(){return this.isDirty||T.includes(this.type)},isSingle:function(){return this.isSolo||this.singleLine||this.fullWidth||this.filled&&!this.hasLabel},isSolo:function(){return this.solo||this.soloInverted},labelPosition:function(){var t=this.prefix&&!this.labelValue?this.prefixWidth:0;return this.labelValue&&this.prependWidth&&(t-=this.prependWidth),this.$vuetify.rtl===this.reverse?{left:t,right:"auto"}:{left:"auto",right:t}},showLabel:function(){return this.hasLabel&&!(this.isSingle&&this.labelValue)},labelValue:function(){return this.isFocused||this.isLabelActive}},watch:{outlined:"setLabelWidth",label:function(){this.$nextTick(this.setLabelWidth)},prefix:function(){this.$nextTick(this.setPrefixWidth)},isFocused:"updateValue",value:function(t){this.lazyValue=t}},created:function(){this.$attrs.hasOwnProperty("box")&&Object(v["a"])("box","filled",this),this.$attrs.hasOwnProperty("browser-autocomplete")&&Object(v["a"])("browser-autocomplete","autocomplete",this),this.shaped&&!(this.filled||this.outlined||this.isSolo)&&Object(v["c"])("shaped should be used with either filled or outlined",this)},mounted:function(){var t=this;this.$watch((function(){return t.labelValue}),this.setLabelWidth),this.autofocus&&this.tryAutofocus(),requestAnimationFrame((function(){return t.isBooted=!0}))},methods:{focus:function(){this.onFocus()},blur:function(t){var e=this;window.requestAnimationFrame((function(){e.$refs.input&&e.$refs.input.blur()}))},clearableCallback:function(){var t=this;this.$refs.input&&this.$refs.input.focus(),this.$nextTick((function(){return t.internalValue=null}))},genAppendSlot:function(){var t=[];return this.$slots["append-outer"]?t.push(this.$slots["append-outer"]):this.appendOuterIcon&&t.push(this.genIcon("appendOuter")),this.genSlot("append","outer",t)},genPrependInnerSlot:function(){var t=[];return this.$slots["prepend-inner"]?t.push(this.$slots["prepend-inner"]):this.prependInnerIcon&&t.push(this.genIcon("prependInner")),this.genSlot("prepend","inner",t)},genIconSlot:function(){var t=[];return this.$slots.append?t.push(this.$slots.append):this.appendIcon&&t.push(this.genIcon("append")),this.genSlot("append","inner",t)},genInputSlot:function(){var t=r["a"].options.methods.genInputSlot.call(this),e=this.genPrependInnerSlot();return e&&(t.children=t.children||[],t.children.unshift(e)),t},genClearIcon:function(){if(!this.clearable)return null;var t=this.isDirty?void 0:{attrs:{disabled:!0}};return this.genSlot("append","inner",[this.genIcon("clear",this.clearableCallback,t)])},genCounter:function(){var t;if(!this.hasCounter)return null;var e=!0===this.counter?this.attrs$.maxlength:this.counter,n={dark:this.dark,light:this.light,max:e,value:this.computedCounterValue};return null!=(t=null==this.$scopedSlots.counter?void 0:this.$scopedSlots.counter({props:n}))?t:this.$createElement(s,{props:n})},genControl:function(){return r["a"].options.methods.genControl.call(this)},genDefaultSlot:function(){return[this.genFieldset(),this.genTextFieldSlot(),this.genClearIcon(),this.genIconSlot(),this.genProgress()]},genFieldset:function(){return this.outlined?this.$createElement("fieldset",{attrs:{"aria-hidden":!0}},[this.genLegend()]):null},genLabel:function(){if(!this.showLabel)return null;var t={props:{absolute:!0,color:this.validationState,dark:this.dark,disabled:this.isDisabled,focused:!this.isSingle&&(this.isFocused||!!this.validationState),for:this.computedId,left:this.labelPosition.left,light:this.light,right:this.labelPosition.right,value:this.labelValue}};return this.$createElement(c["a"],t,this.$slots.label||this.label)},genLegend:function(){var t=this.singleLine||!this.labelValue&&!this.isDirty?0:this.labelWidth,e=this.$createElement("span",{domProps:{innerHTML:"&#8203;"}});return this.$createElement("legend",{style:{width:this.isSingle?void 0:Object(M["f"])(t)}},[e])},genInput:function(){var t=Object.assign({},this.listeners$);return delete t.change,this.$createElement("input",{style:{},domProps:{value:"number"===this.type&&Object.is(this.lazyValue,-0)?"-0":this.lazyValue},attrs:Object(i["a"])(Object(i["a"])({},this.attrs$),{},{autofocus:this.autofocus,disabled:this.isDisabled,id:this.computedId,placeholder:this.isFocused||!this.hasLabel?this.placeholder:void 0,readonly:this.isReadonly,type:this.type}),on:Object.assign(t,{blur:this.onBlur,input:this.onInput,focus:this.onFocus,keydown:this.onKeyDown}),ref:"input",directives:[{name:"resize",modifiers:{quiet:!0},value:this.onResize}]})},genMessages:function(){if(!this.showDetails)return null;var t=r["a"].options.methods.genMessages.call(this),e=this.genCounter();return this.$createElement("div",{staticClass:"v-text-field__details"},[t,e])},genTextFieldSlot:function(){return this.$createElement("div",{staticClass:"v-text-field__slot"},[this.genLabel(),this.prefix?this.genAffix("prefix"):null,this.genInput(),this.suffix?this.genAffix("suffix"):null])},genAffix:function(t){return this.$createElement("div",{class:"v-text-field__".concat(t),ref:t},this[t])},onBlur:function(t){var e=this;this.isFocused=!1,t&&this.$nextTick((function(){return e.$emit("blur",t)}))},onClick:function(){this.isFocused||this.isDisabled||!this.$refs.input||this.$refs.input.focus()},onFocus:function(t){if(this.$refs.input)return document.activeElement!==this.$refs.input?this.$refs.input.focus():void(this.isFocused||(this.isFocused=!0,t&&this.$emit("focus",t)))},onInput:function(t){var e=t.target;this.internalValue=e.value,this.badInput=e.validity&&e.validity.badInput},onKeyDown:function(t){t.keyCode===M["t"].enter&&this.$emit("change",this.internalValue),this.$emit("keydown",t)},onMouseDown:function(t){t.target!==this.$refs.input&&(t.preventDefault(),t.stopPropagation()),r["a"].options.methods.onMouseDown.call(this,t)},onMouseUp:function(t){this.hasMouseDown&&this.focus(),r["a"].options.methods.onMouseUp.call(this,t)},setLabelWidth:function(){this.outlined&&(this.labelWidth=this.$refs.label?Math.min(.75*this.$refs.label.scrollWidth+6,this.$el.offsetWidth-24):0)},setPrefixWidth:function(){this.$refs.prefix&&(this.prefixWidth=this.$refs.prefix.offsetWidth)},setPrependWidth:function(){this.outlined&&this.$refs["prepend-inner"]&&(this.prependWidth=this.$refs["prepend-inner"].offsetWidth)},tryAutofocus:function(){return!(!this.autofocus||"undefined"===typeof document||!this.$refs.input||document.activeElement===this.$refs.input)&&(this.$refs.input.focus(),!0)},updateValue:function(t){this.hasColor=t,t?this.initialValue=this.lazyValue:this.initialValue!==this.lazyValue&&this.$emit("change",this.lazyValue)},onResize:function(){this.setLabelWidth(),this.setPrefixWidth(),this.setPrependWidth()}}})},"86cc":function(t,e,n){},8860:function(t,e,n){"use strict";n("c740"),n("0481"),n("a434"),n("4069");var l=n("b85c"),i=n("5530"),r=(n("3ad0"),n("8dd9"));e["a"]=r["a"].extend().extend({name:"v-list",provide:function(){return{isInList:!0,list:this}},inject:{isInMenu:{default:!1},isInNav:{default:!1}},props:{dense:Boolean,disabled:Boolean,expand:Boolean,flat:Boolean,nav:Boolean,rounded:Boolean,subheader:Boolean,threeLine:Boolean,twoLine:Boolean},data:function(){return{groups:[]}},computed:{classes:function(){return Object(i["a"])(Object(i["a"])({},r["a"].options.computed.classes.call(this)),{},{"v-list--dense":this.dense,"v-list--disabled":this.disabled,"v-list--flat":this.flat,"v-list--nav":this.nav,"v-list--rounded":this.rounded,"v-list--subheader":this.subheader,"v-list--two-line":this.twoLine,"v-list--three-line":this.threeLine})}},methods:{register:function(t){this.groups.push(t)},unregister:function(t){var e=this.groups.findIndex((function(e){return e._uid===t._uid}));e>-1&&this.groups.splice(e,1)},listClick:function(t){if(!this.expand){var e,n=Object(l["a"])(this.groups);try{for(n.s();!(e=n.n()).done;){var i=e.value;i.toggle(t)}}catch(r){n.e(r)}finally{n.f()}}}},render:function(t){var e={staticClass:"v-list",class:this.classes,style:this.styles,attrs:Object(i["a"])({role:this.isInNav||this.isInMenu?void 0:"list"},this.attrs$)};return t(this.tag,this.setBackgroundColor(this.color,e),[this.$slots.default])}})},8925:function(t,e,n){var l=n("c6cd"),i=Function.toString;"function"!=typeof l.inspectSource&&(l.inspectSource=function(t){return i.call(t)}),t.exports=l.inspectSource},"899c":function(t,e,n){},"8a59":function(t,e,n){var l=n("74e8");l("Uint8",(function(t){return function(e,n,l){return t(this,e,n,l)}}),!0)},"8aa5":function(t,e,n){"use strict";var l=n("6547").charAt;t.exports=function(t,e,n){return e+(n?l(t,e).length:1)}},"8aa7":function(t,e,n){var l=n("da84"),i=n("d039"),r=n("1c7e"),o=n("ebb5").NATIVE_ARRAY_BUFFER_VIEWS,u=l.ArrayBuffer,a=l.Int8Array;t.exports=!o||!i((function(){a(1)}))||!i((function(){new a(-1)}))||!r((function(t){new a,new a(null),new a(1.5),new a(t)}),!0)||i((function(){return 1!==new a(new u(2),1,void 0).length}))},"8adc":function(t,e,n){},"8c4f":function(t,e,n){"use strict";
/*!
  * vue-router v3.5.0
  * (c) 2021 Evan You
  * @license MIT
  */function l(t,e){0}function i(t,e){for(var n in e)t[n]=e[n];return t}var r=/[!'()*]/g,o=function(t){return"%"+t.charCodeAt(0).toString(16)},u=/%2C/g,a=function(t){return encodeURIComponent(t).replace(r,o).replace(u,",")};function s(t){try{return decodeURIComponent(t)}catch(e){0}return t}function c(t,e,n){void 0===e&&(e={});var l,i=n||d;try{l=i(t||"")}catch(u){l={}}for(var r in e){var o=e[r];l[r]=Array.isArray(o)?o.map(h):h(o)}return l}var h=function(t){return null==t||"object"===typeof t?t:String(t)};function d(t){var e={};return t=t.trim().replace(/^(\?|#|&)/,""),t?(t.split("&").forEach((function(t){var n=t.replace(/\+/g," ").split("="),l=s(n.shift()),i=n.length>0?s(n.join("=")):null;void 0===e[l]?e[l]=i:Array.isArray(e[l])?e[l].push(i):e[l]=[e[l],i]})),e):e}function f(t){var e=t?Object.keys(t).map((function(e){var n=t[e];if(void 0===n)return"";if(null===n)return a(e);if(Array.isArray(n)){var l=[];return n.forEach((function(t){void 0!==t&&(null===t?l.push(a(e)):l.push(a(e)+"="+a(t)))})),l.join("&")}return a(e)+"="+a(n)})).filter((function(t){return t.length>0})).join("&"):null;return e?"?"+e:""}var p=/\/?$/;function m(t,e,n,l){var i=l&&l.options.stringifyQuery,r=e.query||{};try{r=v(r)}catch(u){}var o={name:e.name||t&&t.name,meta:t&&t.meta||{},path:e.path||"/",hash:e.hash||"",query:r,params:e.params||{},fullPath:b(e,i),matched:t?y(t):[]};return n&&(o.redirectedFrom=b(n,i)),Object.freeze(o)}function v(t){if(Array.isArray(t))return t.map(v);if(t&&"object"===typeof t){var e={};for(var n in t)e[n]=v(t[n]);return e}return t}var g=m(null,{path:"/"});function y(t){var e=[];while(t)e.unshift(t),t=t.parent;return e}function b(t,e){var n=t.path,l=t.query;void 0===l&&(l={});var i=t.hash;void 0===i&&(i="");var r=e||f;return(n||"/")+r(l)+i}function x(t,e,n){return e===g?t===e:!!e&&(t.path&&e.path?t.path.replace(p,"")===e.path.replace(p,"")&&(n||t.hash===e.hash&&w(t.query,e.query)):!(!t.name||!e.name)&&(t.name===e.name&&(n||t.hash===e.hash&&w(t.query,e.query)&&w(t.params,e.params))))}function w(t,e){if(void 0===t&&(t={}),void 0===e&&(e={}),!t||!e)return t===e;var n=Object.keys(t).sort(),l=Object.keys(e).sort();return n.length===l.length&&n.every((function(n,i){var r=t[n],o=l[i];if(o!==n)return!1;var u=e[n];return null==r||null==u?r===u:"object"===typeof r&&"object"===typeof u?w(r,u):String(r)===String(u)}))}function _(t,e){return 0===t.path.replace(p,"/").indexOf(e.path.replace(p,"/"))&&(!e.hash||t.hash===e.hash)&&M(t.query,e.query)}function M(t,e){for(var n in e)if(!(n in t))return!1;return!0}function S(t){for(var e=0;e<t.matched.length;e++){var n=t.matched[e];for(var l in n.instances){var i=n.instances[l],r=n.enteredCbs[l];if(i&&r){delete n.enteredCbs[l];for(var o=0;o<r.length;o++)i._isBeingDestroyed||r[o](i)}}}}var T={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(t,e){var n=e.props,l=e.children,r=e.parent,o=e.data;o.routerView=!0;var u=r.$createElement,a=n.name,s=r.$route,c=r._routerViewCache||(r._routerViewCache={}),h=0,d=!1;while(r&&r._routerRoot!==r){var f=r.$vnode?r.$vnode.data:{};f.routerView&&h++,f.keepAlive&&r._directInactive&&r._inactive&&(d=!0),r=r.$parent}if(o.routerViewDepth=h,d){var p=c[a],m=p&&p.component;return m?(p.configProps&&E(m,o,p.route,p.configProps),u(m,o,l)):u()}var v=s.matched[h],g=v&&v.components[a];if(!v||!g)return c[a]=null,u();c[a]={component:g},o.registerRouteInstance=function(t,e){var n=v.instances[a];(e&&n!==t||!e&&n===t)&&(v.instances[a]=e)},(o.hook||(o.hook={})).prepatch=function(t,e){v.instances[a]=e.componentInstance},o.hook.init=function(t){t.data.keepAlive&&t.componentInstance&&t.componentInstance!==v.instances[a]&&(v.instances[a]=t.componentInstance),S(s)};var y=v.props&&v.props[a];return y&&(i(c[a],{route:s,configProps:y}),E(g,o,s,y)),u(g,o,l)}};function E(t,e,n,l){var r=e.props=A(n,l);if(r){r=e.props=i({},r);var o=e.attrs=e.attrs||{};for(var u in r)t.props&&u in t.props||(o[u]=r[u],delete r[u])}}function A(t,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(t);case"boolean":return e?t.params:void 0;default:0}}function C(t,e,n){var l=t.charAt(0);if("/"===l)return t;if("?"===l||"#"===l)return e+t;var i=e.split("/");n&&i[i.length-1]||i.pop();for(var r=t.replace(/^\//,"").split("/"),o=0;o<r.length;o++){var u=r[o];".."===u?i.pop():"."!==u&&i.push(u)}return""!==i[0]&&i.unshift(""),i.join("/")}function O(t){var e="",n="",l=t.indexOf("#");l>=0&&(e=t.slice(l),t=t.slice(0,l));var i=t.indexOf("?");return i>=0&&(n=t.slice(i+1),t=t.slice(0,i)),{path:t,query:n,hash:e}}function L(t){return t.replace(/\/\//g,"/")}var P=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},R=J,k=B,I=z,D=V,N=Z,j=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function B(t,e){var n,l=[],i=0,r=0,o="",u=e&&e.delimiter||"/";while(null!=(n=j.exec(t))){var a=n[0],s=n[1],c=n.index;if(o+=t.slice(r,c),r=c+a.length,s)o+=s[1];else{var h=t[r],d=n[2],f=n[3],p=n[4],m=n[5],v=n[6],g=n[7];o&&(l.push(o),o="");var y=null!=d&&null!=h&&h!==d,b="+"===v||"*"===v,x="?"===v||"*"===v,w=n[2]||u,_=p||m;l.push({name:f||i++,prefix:d||"",delimiter:w,optional:x,repeat:b,partial:y,asterisk:!!g,pattern:_?G(_):g?".*":"[^"+H(w)+"]+?"})}}return r<t.length&&(o+=t.substr(r)),o&&l.push(o),l}function z(t,e){return V(B(t,e),e)}function F(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function U(t){return encodeURI(t).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function V(t,e){for(var n=new Array(t.length),l=0;l<t.length;l++)"object"===typeof t[l]&&(n[l]=new RegExp("^(?:"+t[l].pattern+")$",$(e)));return function(e,l){for(var i="",r=e||{},o=l||{},u=o.pretty?F:encodeURIComponent,a=0;a<t.length;a++){var s=t[a];if("string"!==typeof s){var c,h=r[s.name];if(null==h){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(P(h)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(h)+"`");if(0===h.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<h.length;d++){if(c=u(h[d]),!n[a].test(c))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===d?s.prefix:s.delimiter)+c}}else{if(c=s.asterisk?U(h):u(h),!n[a].test(c))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+c+'"');i+=s.prefix+c}}else i+=s}return i}}function H(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function G(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function W(t,e){return t.keys=e,t}function $(t){return t&&t.sensitive?"":"i"}function q(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var l=0;l<n.length;l++)e.push({name:l,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return W(t,e)}function X(t,e,n){for(var l=[],i=0;i<t.length;i++)l.push(J(t[i],e,n).source);var r=new RegExp("(?:"+l.join("|")+")",$(n));return W(r,e)}function Y(t,e,n){return Z(B(t,n),e,n)}function Z(t,e,n){P(e)||(n=e||n,e=[]),n=n||{};for(var l=n.strict,i=!1!==n.end,r="",o=0;o<t.length;o++){var u=t[o];if("string"===typeof u)r+=H(u);else{var a=H(u.prefix),s="(?:"+u.pattern+")";e.push(u),u.repeat&&(s+="(?:"+a+s+")*"),s=u.optional?u.partial?a+"("+s+")?":"(?:"+a+"("+s+"))?":a+"("+s+")",r+=s}}var c=H(n.delimiter||"/"),h=r.slice(-c.length)===c;return l||(r=(h?r.slice(0,-c.length):r)+"(?:"+c+"(?=$))?"),r+=i?"$":l&&h?"":"(?="+c+"|$)",W(new RegExp("^"+r,$(n)),e)}function J(t,e,n){return P(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?q(t,e):P(t)?X(t,e,n):Y(t,e,n)}R.parse=k,R.compile=I,R.tokensToFunction=D,R.tokensToRegExp=N;var K=Object.create(null);function Q(t,e,n){e=e||{};try{var l=K[t]||(K[t]=R.compile(t));return"string"===typeof e.pathMatch&&(e[0]=e.pathMatch),l(e,{pretty:!0})}catch(i){return""}finally{delete e[0]}}function tt(t,e,n,l){var r="string"===typeof t?{path:t}:t;if(r._normalized)return r;if(r.name){r=i({},t);var o=r.params;return o&&"object"===typeof o&&(r.params=i({},o)),r}if(!r.path&&r.params&&e){r=i({},r),r._normalized=!0;var u=i(i({},e.params),r.params);if(e.name)r.name=e.name,r.params=u;else if(e.matched.length){var a=e.matched[e.matched.length-1].path;r.path=Q(a,u,"path "+e.path)}else 0;return r}var s=O(r.path||""),h=e&&e.path||"/",d=s.path?C(s.path,h,n||r.append):h,f=c(s.query,r.query,l&&l.options.parseQuery),p=r.hash||s.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:d,query:f,hash:p}}var et,nt=[String,Object],lt=[String,Array],it=function(){},rt={name:"RouterLink",props:{to:{type:nt,required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:lt,default:"click"}},render:function(t){var e=this,n=this.$router,l=this.$route,r=n.resolve(this.to,l,this.append),o=r.location,u=r.route,a=r.href,s={},c=n.options.linkActiveClass,h=n.options.linkExactActiveClass,d=null==c?"router-link-active":c,f=null==h?"router-link-exact-active":h,p=null==this.activeClass?d:this.activeClass,v=null==this.exactActiveClass?f:this.exactActiveClass,g=u.redirectedFrom?m(null,tt(u.redirectedFrom),null,n):u;s[v]=x(l,g,this.exactPath),s[p]=this.exact||this.exactPath?s[v]:_(l,g);var y=s[v]?this.ariaCurrentValue:null,b=function(t){ot(t)&&(e.replace?n.replace(o,it):n.push(o,it))},w={click:ot};Array.isArray(this.event)?this.event.forEach((function(t){w[t]=b})):w[this.event]=b;var M={class:s},S=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:a,route:u,navigate:b,isActive:s[p],isExactActive:s[v]});if(S){if(1===S.length)return S[0];if(S.length>1||!S.length)return 0===S.length?t():t("span",{},S)}if("a"===this.tag)M.on=w,M.attrs={href:a,"aria-current":y};else{var T=ut(this.$slots.default);if(T){T.isStatic=!1;var E=T.data=i({},T.data);for(var A in E.on=E.on||{},E.on){var C=E.on[A];A in w&&(E.on[A]=Array.isArray(C)?C:[C])}for(var O in w)O in E.on?E.on[O].push(w[O]):E.on[O]=b;var L=T.data.attrs=i({},T.data.attrs);L.href=a,L["aria-current"]=y}else M.on=w}return t(this.tag,M,this.$slots.default)}};function ot(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)&&!t.defaultPrevented&&(void 0===t.button||0===t.button)){if(t.currentTarget&&t.currentTarget.getAttribute){var e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}function ut(t){if(t)for(var e,n=0;n<t.length;n++){if(e=t[n],"a"===e.tag)return e;if(e.children&&(e=ut(e.children)))return e}}function at(t){if(!at.installed||et!==t){at.installed=!0,et=t;var e=function(t){return void 0!==t},n=function(t,n){var l=t.$options._parentVnode;e(l)&&e(l=l.data)&&e(l=l.registerRouteInstance)&&l(t,n)};t.mixin({beforeCreate:function(){e(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,n(this,this)},destroyed:function(){n(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",T),t.component("RouterLink",rt);var l=t.config.optionMergeStrategies;l.beforeRouteEnter=l.beforeRouteLeave=l.beforeRouteUpdate=l.created}}var st="undefined"!==typeof window;function ct(t,e,n,l,i){var r=e||[],o=n||Object.create(null),u=l||Object.create(null);t.forEach((function(t){ht(r,o,u,t,i)}));for(var a=0,s=r.length;a<s;a++)"*"===r[a]&&(r.push(r.splice(a,1)[0]),s--,a--);return{pathList:r,pathMap:o,nameMap:u}}function ht(t,e,n,l,i,r){var o=l.path,u=l.name;var a=l.pathToRegexpOptions||{},s=ft(o,i,a.strict);"boolean"===typeof l.caseSensitive&&(a.sensitive=l.caseSensitive);var c={path:s,regex:dt(s,a),components:l.components||{default:l.component},alias:l.alias?"string"===typeof l.alias?[l.alias]:l.alias:[],instances:{},enteredCbs:{},name:u,parent:i,matchAs:r,redirect:l.redirect,beforeEnter:l.beforeEnter,meta:l.meta||{},props:null==l.props?{}:l.components?l.props:{default:l.props}};if(l.children&&l.children.forEach((function(l){var i=r?L(r+"/"+l.path):void 0;ht(t,e,n,l,c,i)})),e[c.path]||(t.push(c.path),e[c.path]=c),void 0!==l.alias)for(var h=Array.isArray(l.alias)?l.alias:[l.alias],d=0;d<h.length;++d){var f=h[d];0;var p={path:f,children:l.children};ht(t,e,n,p,i,c.path||"/")}u&&(n[u]||(n[u]=c))}function dt(t,e){var n=R(t,[],e);return n}function ft(t,e,n){return n||(t=t.replace(/\/$/,"")),"/"===t[0]||null==e?t:L(e.path+"/"+t)}function pt(t,e){var n=ct(t),l=n.pathList,i=n.pathMap,r=n.nameMap;function o(t){ct(t,l,i,r)}function u(t,e){var n="object"!==typeof t?r[t]:void 0;ct([e||t],l,i,r,n),n&&ct(n.alias.map((function(t){return{path:t,children:[e]}})),l,i,r,n)}function a(){return l.map((function(t){return i[t]}))}function s(t,n,o){var u=tt(t,n,!1,e),a=u.name;if(a){var s=r[a];if(!s)return d(null,u);var c=s.regex.keys.filter((function(t){return!t.optional})).map((function(t){return t.name}));if("object"!==typeof u.params&&(u.params={}),n&&"object"===typeof n.params)for(var h in n.params)!(h in u.params)&&c.indexOf(h)>-1&&(u.params[h]=n.params[h]);return u.path=Q(s.path,u.params,'named route "'+a+'"'),d(s,u,o)}if(u.path){u.params={};for(var f=0;f<l.length;f++){var p=l[f],m=i[p];if(mt(m.regex,u.path,u.params))return d(m,u,o)}}return d(null,u)}function c(t,n){var l=t.redirect,i="function"===typeof l?l(m(t,n,null,e)):l;if("string"===typeof i&&(i={path:i}),!i||"object"!==typeof i)return d(null,n);var o=i,u=o.name,a=o.path,c=n.query,h=n.hash,f=n.params;if(c=o.hasOwnProperty("query")?o.query:c,h=o.hasOwnProperty("hash")?o.hash:h,f=o.hasOwnProperty("params")?o.params:f,u){r[u];return s({_normalized:!0,name:u,query:c,hash:h,params:f},void 0,n)}if(a){var p=vt(a,t),v=Q(p,f,'redirect route with path "'+p+'"');return s({_normalized:!0,path:v,query:c,hash:h},void 0,n)}return d(null,n)}function h(t,e,n){var l=Q(n,e.params,'aliased route with path "'+n+'"'),i=s({_normalized:!0,path:l});if(i){var r=i.matched,o=r[r.length-1];return e.params=i.params,d(o,e)}return d(null,e)}function d(t,n,l){return t&&t.redirect?c(t,l||n):t&&t.matchAs?h(t,n,t.matchAs):m(t,n,l,e)}return{match:s,addRoute:u,getRoutes:a,addRoutes:o}}function mt(t,e,n){var l=e.match(t);if(!l)return!1;if(!n)return!0;for(var i=1,r=l.length;i<r;++i){var o=t.keys[i-1];o&&(n[o.name||"pathMatch"]="string"===typeof l[i]?s(l[i]):l[i])}return!0}function vt(t,e){return C(t,e.parent?e.parent.path:"/",!0)}var gt=st&&window.performance&&window.performance.now?window.performance:Date;function yt(){return gt.now().toFixed(3)}var bt=yt();function xt(){return bt}function wt(t){return bt=t}var _t=Object.create(null);function Mt(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var t=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(t,""),n=i({},window.history.state);return n.key=xt(),window.history.replaceState(n,"",e),window.addEventListener("popstate",Et),function(){window.removeEventListener("popstate",Et)}}function St(t,e,n,l){if(t.app){var i=t.options.scrollBehavior;i&&t.app.$nextTick((function(){var r=At(),o=i.call(t,e,n,l?r:null);o&&("function"===typeof o.then?o.then((function(t){It(t,r)})).catch((function(t){0})):It(o,r))}))}}function Tt(){var t=xt();t&&(_t[t]={x:window.pageXOffset,y:window.pageYOffset})}function Et(t){Tt(),t.state&&t.state.key&&wt(t.state.key)}function At(){var t=xt();if(t)return _t[t]}function Ct(t,e){var n=document.documentElement,l=n.getBoundingClientRect(),i=t.getBoundingClientRect();return{x:i.left-l.left-e.x,y:i.top-l.top-e.y}}function Ot(t){return Rt(t.x)||Rt(t.y)}function Lt(t){return{x:Rt(t.x)?t.x:window.pageXOffset,y:Rt(t.y)?t.y:window.pageYOffset}}function Pt(t){return{x:Rt(t.x)?t.x:0,y:Rt(t.y)?t.y:0}}function Rt(t){return"number"===typeof t}var kt=/^#\d/;function It(t,e){var n="object"===typeof t;if(n&&"string"===typeof t.selector){var l=kt.test(t.selector)?document.getElementById(t.selector.slice(1)):document.querySelector(t.selector);if(l){var i=t.offset&&"object"===typeof t.offset?t.offset:{};i=Pt(i),e=Ct(l,i)}else Ot(t)&&(e=Lt(t))}else n&&Ot(t)&&(e=Lt(t));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:t.behavior}):window.scrollTo(e.x,e.y))}var Dt=st&&function(){var t=window.navigator.userAgent;return(-1===t.indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&(window.history&&"function"===typeof window.history.pushState)}();function Nt(t,e){Tt();var n=window.history;try{if(e){var l=i({},n.state);l.key=xt(),n.replaceState(l,"",t)}else n.pushState({key:wt(yt())},"",t)}catch(r){window.location[e?"replace":"assign"](t)}}function jt(t){Nt(t,!0)}function Bt(t,e,n){var l=function(i){i>=t.length?n():t[i]?e(t[i],(function(){l(i+1)})):l(i+1)};l(0)}var zt={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ft(t,e){return Gt(t,e,zt.redirected,'Redirected when going from "'+t.fullPath+'" to "'+$t(e)+'" via a navigation guard.')}function Ut(t,e){var n=Gt(t,e,zt.duplicated,'Avoided redundant navigation to current location: "'+t.fullPath+'".');return n.name="NavigationDuplicated",n}function Vt(t,e){return Gt(t,e,zt.cancelled,'Navigation cancelled from "'+t.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Ht(t,e){return Gt(t,e,zt.aborted,'Navigation aborted from "'+t.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}function Gt(t,e,n,l){var i=new Error(l);return i._isRouter=!0,i.from=t,i.to=e,i.type=n,i}var Wt=["params","query","hash"];function $t(t){if("string"===typeof t)return t;if("path"in t)return t.path;var e={};return Wt.forEach((function(n){n in t&&(e[n]=t[n])})),JSON.stringify(e,null,2)}function qt(t){return Object.prototype.toString.call(t).indexOf("Error")>-1}function Xt(t,e){return qt(t)&&t._isRouter&&(null==e||t.type===e)}function Yt(t){return function(e,n,l){var i=!1,r=0,o=null;Zt(t,(function(t,e,n,u){if("function"===typeof t&&void 0===t.cid){i=!0,r++;var a,s=te((function(e){Qt(e)&&(e=e.default),t.resolved="function"===typeof e?e:et.extend(e),n.components[u]=e,r--,r<=0&&l()})),c=te((function(t){var e="Failed to resolve async component "+u+": "+t;o||(o=qt(t)?t:new Error(e),l(o))}));try{a=t(s,c)}catch(d){c(d)}if(a)if("function"===typeof a.then)a.then(s,c);else{var h=a.component;h&&"function"===typeof h.then&&h.then(s,c)}}})),i||l()}}function Zt(t,e){return Jt(t.map((function(t){return Object.keys(t.components).map((function(n){return e(t.components[n],t.instances[n],t,n)}))})))}function Jt(t){return Array.prototype.concat.apply([],t)}var Kt="function"===typeof Symbol&&"symbol"===typeof Symbol.toStringTag;function Qt(t){return t.__esModule||Kt&&"Module"===t[Symbol.toStringTag]}function te(t){var e=!1;return function(){var n=[],l=arguments.length;while(l--)n[l]=arguments[l];if(!e)return e=!0,t.apply(this,n)}}var ee=function(t,e){this.router=t,this.base=ne(e),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ne(t){if(!t)if(st){var e=document.querySelector("base");t=e&&e.getAttribute("href")||"/",t=t.replace(/^https?:\/\/[^\/]+/,"")}else t="/";return"/"!==t.charAt(0)&&(t="/"+t),t.replace(/\/$/,"")}function le(t,e){var n,l=Math.max(t.length,e.length);for(n=0;n<l;n++)if(t[n]!==e[n])break;return{updated:e.slice(0,n),activated:e.slice(n),deactivated:t.slice(n)}}function ie(t,e,n,l){var i=Zt(t,(function(t,l,i,r){var o=re(t,e);if(o)return Array.isArray(o)?o.map((function(t){return n(t,l,i,r)})):n(o,l,i,r)}));return Jt(l?i.reverse():i)}function re(t,e){return"function"!==typeof t&&(t=et.extend(t)),t.options[e]}function oe(t){return ie(t,"beforeRouteLeave",ae,!0)}function ue(t){return ie(t,"beforeRouteUpdate",ae)}function ae(t,e){if(e)return function(){return t.apply(e,arguments)}}function se(t){return ie(t,"beforeRouteEnter",(function(t,e,n,l){return ce(t,n,l)}))}function ce(t,e,n){return function(l,i,r){return t(l,i,(function(t){"function"===typeof t&&(e.enteredCbs[n]||(e.enteredCbs[n]=[]),e.enteredCbs[n].push(t)),r(t)}))}}ee.prototype.listen=function(t){this.cb=t},ee.prototype.onReady=function(t,e){this.ready?t():(this.readyCbs.push(t),e&&this.readyErrorCbs.push(e))},ee.prototype.onError=function(t){this.errorCbs.push(t)},ee.prototype.transitionTo=function(t,e,n){var l,i=this;try{l=this.router.match(t,this.current)}catch(o){throw this.errorCbs.forEach((function(t){t(o)})),o}var r=this.current;this.confirmTransition(l,(function(){i.updateRoute(l),e&&e(l),i.ensureURL(),i.router.afterHooks.forEach((function(t){t&&t(l,r)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(t){t(l)})))}),(function(t){n&&n(t),t&&!i.ready&&(Xt(t,zt.redirected)&&r===g||(i.ready=!0,i.readyErrorCbs.forEach((function(e){e(t)}))))}))},ee.prototype.confirmTransition=function(t,e,n){var i=this,r=this.current;this.pending=t;var o=function(t){!Xt(t)&&qt(t)&&(i.errorCbs.length?i.errorCbs.forEach((function(e){e(t)})):(l(!1,"uncaught error during route navigation:"),console.error(t))),n&&n(t)},u=t.matched.length-1,a=r.matched.length-1;if(x(t,r)&&u===a&&t.matched[u]===r.matched[a])return this.ensureURL(),o(Ut(r,t));var s=le(this.current.matched,t.matched),c=s.updated,h=s.deactivated,d=s.activated,f=[].concat(oe(h),this.router.beforeHooks,ue(c),d.map((function(t){return t.beforeEnter})),Yt(d)),p=function(e,n){if(i.pending!==t)return o(Vt(r,t));try{e(t,r,(function(e){!1===e?(i.ensureURL(!0),o(Ht(r,t))):qt(e)?(i.ensureURL(!0),o(e)):"string"===typeof e||"object"===typeof e&&("string"===typeof e.path||"string"===typeof e.name)?(o(Ft(r,t)),"object"===typeof e&&e.replace?i.replace(e):i.push(e)):n(e)}))}catch(l){o(l)}};Bt(f,p,(function(){var n=se(d),l=n.concat(i.router.resolveHooks);Bt(l,p,(function(){if(i.pending!==t)return o(Vt(r,t));i.pending=null,e(t),i.router.app&&i.router.app.$nextTick((function(){S(t)}))}))}))},ee.prototype.updateRoute=function(t){this.current=t,this.cb&&this.cb(t)},ee.prototype.setupListeners=function(){},ee.prototype.teardown=function(){this.listeners.forEach((function(t){t()})),this.listeners=[],this.current=g,this.pending=null};var he=function(t){function e(e,n){t.call(this,e,n),this._startLocation=de(this.base)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var e=this.router,n=e.options.scrollBehavior,l=Dt&&n;l&&this.listeners.push(Mt());var i=function(){var n=t.current,i=de(t.base);t.current===g&&i===t._startLocation||t.transitionTo(i,(function(t){l&&St(e,t,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},e.prototype.go=function(t){window.history.go(t)},e.prototype.push=function(t,e,n){var l=this,i=this,r=i.current;this.transitionTo(t,(function(t){Nt(L(l.base+t.fullPath)),St(l.router,t,r,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var l=this,i=this,r=i.current;this.transitionTo(t,(function(t){jt(L(l.base+t.fullPath)),St(l.router,t,r,!1),e&&e(t)}),n)},e.prototype.ensureURL=function(t){if(de(this.base)!==this.current.fullPath){var e=L(this.base+this.current.fullPath);t?Nt(e):jt(e)}},e.prototype.getCurrentLocation=function(){return de(this.base)},e}(ee);function de(t){var e=window.location.pathname;return t&&0===e.toLowerCase().indexOf(t.toLowerCase())&&(e=e.slice(t.length)),(e||"/")+window.location.search+window.location.hash}var fe=function(t){function e(e,n,l){t.call(this,e,n),l&&pe(this.base)||me()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this;if(!(this.listeners.length>0)){var e=this.router,n=e.options.scrollBehavior,l=Dt&&n;l&&this.listeners.push(Mt());var i=function(){var e=t.current;me()&&t.transitionTo(ve(),(function(n){l&&St(t.router,n,e,!0),Dt||be(n.fullPath)}))},r=Dt?"popstate":"hashchange";window.addEventListener(r,i),this.listeners.push((function(){window.removeEventListener(r,i)}))}},e.prototype.push=function(t,e,n){var l=this,i=this,r=i.current;this.transitionTo(t,(function(t){ye(t.fullPath),St(l.router,t,r,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var l=this,i=this,r=i.current;this.transitionTo(t,(function(t){be(t.fullPath),St(l.router,t,r,!1),e&&e(t)}),n)},e.prototype.go=function(t){window.history.go(t)},e.prototype.ensureURL=function(t){var e=this.current.fullPath;ve()!==e&&(t?ye(e):be(e))},e.prototype.getCurrentLocation=function(){return ve()},e}(ee);function pe(t){var e=de(t);if(!/^\/#/.test(e))return window.location.replace(L(t+"/#"+e)),!0}function me(){var t=ve();return"/"===t.charAt(0)||(be("/"+t),!1)}function ve(){var t=window.location.href,e=t.indexOf("#");return e<0?"":(t=t.slice(e+1),t)}function ge(t){var e=window.location.href,n=e.indexOf("#"),l=n>=0?e.slice(0,n):e;return l+"#"+t}function ye(t){Dt?Nt(ge(t)):window.location.hash=t}function be(t){Dt?jt(ge(t)):window.location.replace(ge(t))}var xe=function(t){function e(e,n){t.call(this,e,n),this.stack=[],this.index=-1}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.push=function(t,e,n){var l=this;this.transitionTo(t,(function(t){l.stack=l.stack.slice(0,l.index+1).concat(t),l.index++,e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var l=this;this.transitionTo(t,(function(t){l.stack=l.stack.slice(0,l.index).concat(t),e&&e(t)}),n)},e.prototype.go=function(t){var e=this,n=this.index+t;if(!(n<0||n>=this.stack.length)){var l=this.stack[n];this.confirmTransition(l,(function(){var t=e.current;e.index=n,e.updateRoute(l),e.router.afterHooks.forEach((function(e){e&&e(l,t)}))}),(function(t){Xt(t,zt.duplicated)&&(e.index=n)}))}},e.prototype.getCurrentLocation=function(){var t=this.stack[this.stack.length-1];return t?t.fullPath:"/"},e.prototype.ensureURL=function(){},e}(ee),we=function(t){void 0===t&&(t={}),this.app=null,this.apps=[],this.options=t,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=pt(t.routes||[],this);var e=t.mode||"hash";switch(this.fallback="history"===e&&!Dt&&!1!==t.fallback,this.fallback&&(e="hash"),st||(e="abstract"),this.mode=e,e){case"history":this.history=new he(this,t.base);break;case"hash":this.history=new fe(this,t.base,this.fallback);break;case"abstract":this.history=new xe(this,t.base);break;default:0}},_e={currentRoute:{configurable:!0}};function Me(t,e){return t.push(e),function(){var n=t.indexOf(e);n>-1&&t.splice(n,1)}}function Se(t,e,n){var l="hash"===n?"#"+e:e;return t?L(t+"/"+l):l}we.prototype.match=function(t,e,n){return this.matcher.match(t,e,n)},_e.currentRoute.get=function(){return this.history&&this.history.current},we.prototype.init=function(t){var e=this;if(this.apps.push(t),t.$once("hook:destroyed",(function(){var n=e.apps.indexOf(t);n>-1&&e.apps.splice(n,1),e.app===t&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=t;var n=this.history;if(n instanceof he||n instanceof fe){var l=function(t){var l=n.current,i=e.options.scrollBehavior,r=Dt&&i;r&&"fullPath"in t&&St(e,t,l,!1)},i=function(t){n.setupListeners(),l(t)};n.transitionTo(n.getCurrentLocation(),i,i)}n.listen((function(t){e.apps.forEach((function(e){e._route=t}))}))}},we.prototype.beforeEach=function(t){return Me(this.beforeHooks,t)},we.prototype.beforeResolve=function(t){return Me(this.resolveHooks,t)},we.prototype.afterEach=function(t){return Me(this.afterHooks,t)},we.prototype.onReady=function(t,e){this.history.onReady(t,e)},we.prototype.onError=function(t){this.history.onError(t)},we.prototype.push=function(t,e,n){var l=this;if(!e&&!n&&"undefined"!==typeof Promise)return new Promise((function(e,n){l.history.push(t,e,n)}));this.history.push(t,e,n)},we.prototype.replace=function(t,e,n){var l=this;if(!e&&!n&&"undefined"!==typeof Promise)return new Promise((function(e,n){l.history.replace(t,e,n)}));this.history.replace(t,e,n)},we.prototype.go=function(t){this.history.go(t)},we.prototype.back=function(){this.go(-1)},we.prototype.forward=function(){this.go(1)},we.prototype.getMatchedComponents=function(t){var e=t?t.matched?t:this.resolve(t).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(t){return Object.keys(t.components).map((function(e){return t.components[e]}))}))):[]},we.prototype.resolve=function(t,e,n){e=e||this.history.current;var l=tt(t,e,n,this),i=this.match(l,e),r=i.redirectedFrom||i.fullPath,o=this.history.base,u=Se(o,r,this.mode);return{location:l,route:i,href:u,normalizedTo:l,resolved:i}},we.prototype.getRoutes=function(){return this.matcher.getRoutes()},we.prototype.addRoute=function(t,e){this.matcher.addRoute(t,e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},we.prototype.addRoutes=function(t){this.matcher.addRoutes(t),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(we.prototype,_e),we.install=at,we.version="3.5.0",we.isNavigationFailure=Xt,we.NavigationFailureType=zt,we.START_LOCATION=g,st&&window.Vue&&window.Vue.use(we),e["a"]=we},"8ce9":function(t,e,n){},"8d4f":function(t,e,n){},"8da5":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s}));var l=n("80d2"),i=[[3.2406,-1.5372,-.4986],[-.9689,1.8758,.0415],[.0557,-.204,1.057]],r=function(t){return t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055},o=[[.4124,.3576,.1805],[.2126,.7152,.0722],[.0193,.1192,.9505]],u=function(t){return t<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)};function a(t){for(var e=Array(3),n=r,o=i,u=0;u<3;++u)e[u]=Math.round(255*Object(l["e"])(n(o[u][0]*t[0]+o[u][1]*t[1]+o[u][2]*t[2])));return(e[0]<<16)+(e[1]<<8)+(e[2]<<0)}function s(t){for(var e=[0,0,0],n=u,l=o,i=n((t>>16&255)/255),r=n((t>>8&255)/255),a=n((t>>0&255)/255),s=0;s<3;++s)e[s]=l[s][0]*i+l[s][1]*r+l[s][2]*a;return e}},"8dd9":function(t,e,n){"use strict";var l=n("5530"),i=(n("25a8"),n("7e2b")),r=n("a9ad"),o=n("c995"),u=n("24b2"),a=n("a236"),s=n("7560"),c=n("58df");e["a"]=Object(c["a"])(i["a"],r["a"],o["a"],u["a"],a["a"],s["a"]).extend({name:"v-sheet",props:{outlined:Boolean,shaped:Boolean,tag:{type:String,default:"div"}},computed:{classes:function(){return Object(l["a"])(Object(l["a"])(Object(l["a"])({"v-sheet":!0,"v-sheet--outlined":this.outlined,"v-sheet--shaped":this.shaped},this.themeClasses),this.elevationClasses),this.roundedClasses)},styles:function(){return this.measurableStyles}},render:function(t){var e={class:this.classes,style:this.styles,on:this.listeners$};return t(this.tag,this.setBackgroundColor(this.color,e),this.$slots.default)}})},"8ff2":function(t,e,n){},"90d7":function(t,e,n){var l=n("23e7"),i=Math.log,r=Math.LN2;l({target:"Math",stat:!0},{log2:function(t){return i(t)/r}})},"90e3":function(t,e){var n=0,l=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++n+l).toString(36)}},9112:function(t,e,n){var l=n("83ab"),i=n("9bf2"),r=n("5c6c");t.exports=l?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},9263:function(t,e,n){"use strict";var l=n("ad6d"),i=n("9f7f"),r=RegExp.prototype.exec,o=String.prototype.replace,u=r,a=function(){var t=/a/,e=/b*/g;return r.call(t,"a"),r.call(e,"a"),0!==t.lastIndex||0!==e.lastIndex}(),s=i.UNSUPPORTED_Y||i.BROKEN_CARET,c=void 0!==/()??/.exec("")[1],h=a||c||s;h&&(u=function(t){var e,n,i,u,h=this,d=s&&h.sticky,f=l.call(h),p=h.source,m=0,v=t;return d&&(f=f.replace("y",""),-1===f.indexOf("g")&&(f+="g"),v=String(t).slice(h.lastIndex),h.lastIndex>0&&(!h.multiline||h.multiline&&"\n"!==t[h.lastIndex-1])&&(p="(?: "+p+")",v=" "+v,m++),n=new RegExp("^(?:"+p+")",f)),c&&(n=new RegExp("^"+p+"$(?!\\s)",f)),a&&(e=h.lastIndex),i=r.call(d?n:h,v),d?i?(i.input=i.input.slice(m),i[0]=i[0].slice(m),i.index=h.lastIndex,h.lastIndex+=i[0].length):h.lastIndex=0:a&&i&&(h.lastIndex=h.global?i.index+i[0].length:e),c&&i&&i.length>1&&o.call(i[0],n,(function(){for(u=1;u<arguments.length-2;u++)void 0===arguments[u]&&(i[u]=void 0)})),i}),t.exports=u},"94ca":function(t,e,n){var l=n("d039"),i=/#|\.prototype\./,r=function(t,e){var n=u[o(t)];return n==s||n!=a&&("function"==typeof e?l(e):!!e)},o=r.normalize=function(t){return String(t).replace(i,".").toLowerCase()},u=r.data={},a=r.NATIVE="N",s=r.POLYFILL="P";t.exports=r},"95ed":function(t,e,n){},"96cf":function(t,e,n){var l=function(t){"use strict";var e,n=Object.prototype,l=n.hasOwnProperty,i="function"===typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function a(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(R){a=function(t,e,n){return t[e]=n}}function s(t,e,n,l){var i=e&&e.prototype instanceof v?e:v,r=Object.create(i.prototype),o=new O(l||[]);return r._invoke=T(t,n,o),r}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(R){return{type:"throw",arg:R}}}t.wrap=s;var h="suspendedStart",d="suspendedYield",f="executing",p="completed",m={};function v(){}function g(){}function y(){}var b={};b[r]=function(){return this};var x=Object.getPrototypeOf,w=x&&x(x(L([])));w&&w!==n&&l.call(w,r)&&(b=w);var _=y.prototype=v.prototype=Object.create(b);function M(t){["next","throw","return"].forEach((function(e){a(t,e,(function(t){return this._invoke(e,t)}))}))}function S(t,e){function n(i,r,o,u){var a=c(t[i],t,r);if("throw"!==a.type){var s=a.arg,h=s.value;return h&&"object"===typeof h&&l.call(h,"__await")?e.resolve(h.__await).then((function(t){n("next",t,o,u)}),(function(t){n("throw",t,o,u)})):e.resolve(h).then((function(t){s.value=t,o(s)}),(function(t){return n("throw",t,o,u)}))}u(a.arg)}var i;function r(t,l){function r(){return new e((function(e,i){n(t,l,e,i)}))}return i=i?i.then(r,r):r()}this._invoke=r}function T(t,e,n){var l=h;return function(i,r){if(l===f)throw new Error("Generator is already running");if(l===p){if("throw"===i)throw r;return P()}n.method=i,n.arg=r;while(1){var o=n.delegate;if(o){var u=E(o,n);if(u){if(u===m)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(l===h)throw l=p,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);l=f;var a=c(t,e,n);if("normal"===a.type){if(l=n.done?p:d,a.arg===m)continue;return{value:a.arg,done:n.done}}"throw"===a.type&&(l=p,n.method="throw",n.arg=a.arg)}}}function E(t,n){var l=t.iterator[n.method];if(l===e){if(n.delegate=null,"throw"===n.method){if(t.iterator["return"]&&(n.method="return",n.arg=e,E(t,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var i=c(l,t.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,m;var r=i.arg;return r?r.done?(n[t.resultName]=r.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):r:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function A(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function C(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function O(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(A,this),this.reset(!0)}function L(t){if(t){var n=t[r];if(n)return n.call(t);if("function"===typeof t.next)return t;if(!isNaN(t.length)){var i=-1,o=function n(){while(++i<t.length)if(l.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}return{next:P}}function P(){return{value:e,done:!0}}return g.prototype=_.constructor=y,y.constructor=g,g.displayName=a(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"===typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,a(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},M(S.prototype),S.prototype[o]=function(){return this},t.AsyncIterator=S,t.async=function(e,n,l,i,r){void 0===r&&(r=Promise);var o=new S(s(e,n,l,i),r);return t.isGeneratorFunction(n)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},M(_),a(_,u,"Generator"),_[r]=function(){return this},_.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){while(e.length){var l=e.pop();if(l in t)return n.value=l,n.done=!1,n}return n.done=!0,n}},t.values=L,O.prototype={constructor:O,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(C),!t)for(var n in this)"t"===n.charAt(0)&&l.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0],e=t.completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(l,i){return u.type="throw",u.arg=t,n.next=l,i&&(n.method="next",n.arg=e),!!i}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],u=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var a=l.call(o,"catchLoc"),s=l.call(o,"finallyLoc");if(a&&s){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&l.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var r=i;break}}r&&("break"===t||"continue"===t)&&r.tryLoc<=e&&e<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=t,o.arg=e,r?(this.method="next",this.next=r.finallyLoc,m):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),C(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var l=n.completion;if("throw"===l.type){var i=l.arg;C(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,l){return this.delegate={iterator:L(t),resultName:n,nextLoc:l},"next"===this.method&&(this.arg=e),m}},t}(t.exports);try{regeneratorRuntime=l}catch(i){Function("r","regeneratorRuntime = r")(l)}},9734:function(t,e,n){},9861:function(t,e,n){"use strict";n("e260");var l=n("23e7"),i=n("d066"),r=n("0d3b"),o=n("6eeb"),u=n("e2cc"),a=n("d44e"),s=n("9ed3"),c=n("69f3"),h=n("19aa"),d=n("5135"),f=n("0366"),p=n("f5df"),m=n("825a"),v=n("861d"),g=n("7c73"),y=n("5c6c"),b=n("9a1f"),x=n("35a1"),w=n("b622"),_=i("fetch"),M=i("Headers"),S=w("iterator"),T="URLSearchParams",E=T+"Iterator",A=c.set,C=c.getterFor(T),O=c.getterFor(E),L=/\+/g,P=Array(4),R=function(t){return P[t-1]||(P[t-1]=RegExp("((?:%[\\da-f]{2}){"+t+"})","gi"))},k=function(t){try{return decodeURIComponent(t)}catch(e){return t}},I=function(t){var e=t.replace(L," "),n=4;try{return decodeURIComponent(e)}catch(l){while(n)e=e.replace(R(n--),k);return e}},D=/[!'()~]|%20/g,N={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},j=function(t){return N[t]},B=function(t){return encodeURIComponent(t).replace(D,j)},z=function(t,e){if(e){var n,l,i=e.split("&"),r=0;while(r<i.length)n=i[r++],n.length&&(l=n.split("="),t.push({key:I(l.shift()),value:I(l.join("="))}))}},F=function(t){this.entries.length=0,z(this.entries,t)},U=function(t,e){if(t<e)throw TypeError("Not enough arguments")},V=s((function(t,e){A(this,{type:E,iterator:b(C(t).entries),kind:e})}),"Iterator",(function(){var t=O(this),e=t.kind,n=t.iterator.next(),l=n.value;return n.done||(n.value="keys"===e?l.key:"values"===e?l.value:[l.key,l.value]),n})),H=function(){h(this,H,T);var t,e,n,l,i,r,o,u,a,s=arguments.length>0?arguments[0]:void 0,c=this,f=[];if(A(c,{type:T,entries:f,updateURL:function(){},updateSearchParams:F}),void 0!==s)if(v(s))if(t=x(s),"function"===typeof t){e=t.call(s),n=e.next;while(!(l=n.call(e)).done){if(i=b(m(l.value)),r=i.next,(o=r.call(i)).done||(u=r.call(i)).done||!r.call(i).done)throw TypeError("Expected sequence with length 2");f.push({key:o.value+"",value:u.value+""})}}else for(a in s)d(s,a)&&f.push({key:a,value:s[a]+""});else z(f,"string"===typeof s?"?"===s.charAt(0)?s.slice(1):s:s+"")},G=H.prototype;u(G,{append:function(t,e){U(arguments.length,2);var n=C(this);n.entries.push({key:t+"",value:e+""}),n.updateURL()},delete:function(t){U(arguments.length,1);var e=C(this),n=e.entries,l=t+"",i=0;while(i<n.length)n[i].key===l?n.splice(i,1):i++;e.updateURL()},get:function(t){U(arguments.length,1);for(var e=C(this).entries,n=t+"",l=0;l<e.length;l++)if(e[l].key===n)return e[l].value;return null},getAll:function(t){U(arguments.length,1);for(var e=C(this).entries,n=t+"",l=[],i=0;i<e.length;i++)e[i].key===n&&l.push(e[i].value);return l},has:function(t){U(arguments.length,1);var e=C(this).entries,n=t+"",l=0;while(l<e.length)if(e[l++].key===n)return!0;return!1},set:function(t,e){U(arguments.length,1);for(var n,l=C(this),i=l.entries,r=!1,o=t+"",u=e+"",a=0;a<i.length;a++)n=i[a],n.key===o&&(r?i.splice(a--,1):(r=!0,n.value=u));r||i.push({key:o,value:u}),l.updateURL()},sort:function(){var t,e,n,l=C(this),i=l.entries,r=i.slice();for(i.length=0,n=0;n<r.length;n++){for(t=r[n],e=0;e<n;e++)if(i[e].key>t.key){i.splice(e,0,t);break}e===n&&i.push(t)}l.updateURL()},forEach:function(t){var e,n=C(this).entries,l=f(t,arguments.length>1?arguments[1]:void 0,3),i=0;while(i<n.length)e=n[i++],l(e.value,e.key,this)},keys:function(){return new V(this,"keys")},values:function(){return new V(this,"values")},entries:function(){return new V(this,"entries")}},{enumerable:!0}),o(G,S,G.entries),o(G,"toString",(function(){var t,e=C(this).entries,n=[],l=0;while(l<e.length)t=e[l++],n.push(B(t.key)+"="+B(t.value));return n.join("&")}),{enumerable:!0}),a(H,T),l({global:!0,forced:!r},{URLSearchParams:H}),r||"function"!=typeof _||"function"!=typeof M||l({global:!0,enumerable:!0,forced:!0},{fetch:function(t){var e,n,l,i=[t];return arguments.length>1&&(e=arguments[1],v(e)&&(n=e.body,p(n)===T&&(l=e.headers?new M(e.headers):new M,l.has("content-type")||l.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),e=g(e,{body:y(0,String(n)),headers:y(0,l)}))),i.push(e)),_.apply(this,i)}}),t.exports={URLSearchParams:H,getState:C}},9911:function(t,e,n){"use strict";var l=n("23e7"),i=n("857a"),r=n("af03");l({target:"String",proto:!0,forced:r("link")},{link:function(t){return i(this,"a","href",t)}})},"99af":function(t,e,n){"use strict";var l=n("23e7"),i=n("d039"),r=n("e8b5"),o=n("861d"),u=n("7b0b"),a=n("50c4"),s=n("8418"),c=n("65f0"),h=n("1dde"),d=n("b622"),f=n("2d00"),p=d("isConcatSpreadable"),m=9007199254740991,v="Maximum allowed index exceeded",g=f>=51||!i((function(){var t=[];return t[p]=!1,t.concat()[0]!==t})),y=h("concat"),b=function(t){if(!o(t))return!1;var e=t[p];return void 0!==e?!!e:r(t)},x=!g||!y;l({target:"Array",proto:!0,forced:x},{concat:function(t){var e,n,l,i,r,o=u(this),h=c(o,0),d=0;for(e=-1,l=arguments.length;e<l;e++)if(r=-1===e?o:arguments[e],b(r)){if(i=a(r.length),d+i>m)throw TypeError(v);for(n=0;n<i;n++,d++)n in r&&s(h,d,r[n])}else{if(d>=m)throw TypeError(v);s(h,d++,r)}return h.length=d,h}})},"99d9":function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return a}));var l=n("b0af"),i=n("80d2"),r=Object(i["h"])("v-card__actions"),o=Object(i["h"])("v-card__subtitle"),u=Object(i["h"])("v-card__text"),a=Object(i["h"])("v-card__title");l["a"]},"9a18":function(t,e,n){"use strict";var l=n("ba0d");e["a"]=l["a"]},"9a1f":function(t,e,n){var l=n("825a"),i=n("35a1");t.exports=function(t){var e=i(t);if("function"!=typeof e)throw TypeError(String(t)+" is not iterable");return l(e.call(t))}},"9a8c":function(t,e,n){"use strict";var l=n("ebb5"),i=n("145e"),r=l.aTypedArray,o=l.exportTypedArrayMethod;o("copyWithin",(function(t,e){return i.call(r(this),t,e,arguments.length>2?arguments[2]:void 0)}))},"9bdd":function(t,e,n){var l=n("825a"),i=n("2a62");t.exports=function(t,e,n,r){try{return r?e(l(n)[0],n[1]):e(n)}catch(o){throw i(t),o}}},"9bf2":function(t,e,n){var l=n("83ab"),i=n("0cfb"),r=n("825a"),o=n("c04e"),u=Object.defineProperty;e.f=l?u:function(t,e,n){if(r(t),e=o(e,!0),r(n),i)try{return u(t,e,n)}catch(l){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},"9d01":function(t,e,n){},"9d26":function(t,e,n){"use strict";var l=n("132d");e["a"]=l["a"]},"9d65":function(t,e,n){"use strict";var l=n("d9bd"),i=n("2b0e");e["a"]=i["a"].extend().extend({name:"bootable",props:{eager:Boolean},data:function(){return{isBooted:!1}},computed:{hasContent:function(){return this.isBooted||this.eager||this.isActive}},watch:{isActive:function(){this.isBooted=!0}},created:function(){"lazy"in this.$attrs&&Object(l["e"])("lazy",this)},methods:{showLazyContent:function(t){return this.hasContent&&t?t():[this.$createElement()]}}})},"9e29":function(t,e,n){},"9ed3":function(t,e,n){"use strict";var l=n("ae93").IteratorPrototype,i=n("7c73"),r=n("5c6c"),o=n("d44e"),u=n("3f8c"),a=function(){return this};t.exports=function(t,e,n){var s=e+" Iterator";return t.prototype=i(l,{next:r(1,n)}),o(t,s,!1,!0),u[s]=a,t}},"9f7f":function(t,e,n){"use strict";var l=n("d039");function i(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=l((function(){var t=i("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),e.BROKEN_CARET=l((function(){var t=i("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},a078:function(t,e,n){var l=n("7b0b"),i=n("50c4"),r=n("35a1"),o=n("e95a"),u=n("0366"),a=n("ebb5").aTypedArrayConstructor;t.exports=function(t){var e,n,s,c,h,d,f=l(t),p=arguments.length,m=p>1?arguments[1]:void 0,v=void 0!==m,g=r(f);if(void 0!=g&&!o(g)){h=g.call(f),d=h.next,f=[];while(!(c=d.call(h)).done)f.push(c.value)}for(v&&p>2&&(m=u(m,arguments[2],2)),n=i(f.length),s=new(a(this))(n),e=0;n>e;e++)s[e]=v?m(f[e],e):f[e];return s}},a15b:function(t,e,n){"use strict";var l=n("23e7"),i=n("44ad"),r=n("fc6a"),o=n("a640"),u=[].join,a=i!=Object,s=o("join",",");l({target:"Array",proto:!0,forced:a||!s},{join:function(t){return u.call(r(this),void 0===t?",":t)}})},a236:function(t,e,n){"use strict";n("a15b"),n("ac1f"),n("1276");var l=n("ade3"),i=n("b85c"),r=n("2b0e");e["a"]=r["a"].extend({name:"roundable",props:{rounded:[Boolean,String],tile:Boolean},computed:{roundedClasses:function(){var t=[],e="string"===typeof this.rounded?String(this.rounded):!0===this.rounded;if(this.tile)t.push("rounded-0");else if("string"===typeof e){var n,r=e.split(" "),o=Object(i["a"])(r);try{for(o.s();!(n=o.n()).done;){var u=n.value;t.push("rounded-".concat(u))}}catch(a){o.e(a)}finally{o.f()}}else e&&t.push("rounded");return t.length>0?Object(l["a"])({},t.join(" "),!0):{}}}})},a293:function(t,e,n){"use strict";n("45fc");var l=n("53ca");function i(){return!0}function r(t,e,n){var r="function"===typeof n.value?n.value:n.value.handler,o="object"===Object(l["a"])(n.value)&&n.value.closeConditional||i;if(t&&!1!==o(t)){var u=("object"===Object(l["a"])(n.value)&&n.value.include||function(){return[]})();u.push(e),!u.some((function(e){return e.contains(t.target)}))&&setTimeout((function(){o(t)&&r&&r(t)}),0)}}var o={inserted:function(t,e){var n=function(n){return r(n,t,e)},l=document.querySelector("[data-app]")||document.body;l.addEventListener("click",n,!0),t._clickOutside=n},unbind:function(t){if(t._clickOutside){var e=document.querySelector("[data-app]")||document.body;e&&e.removeEventListener("click",t._clickOutside,!0),delete t._clickOutside}}};e["a"]=o},a2bf:function(t,e,n){"use strict";var l=n("e8b5"),i=n("50c4"),r=n("0366"),o=function(t,e,n,u,a,s,c,h){var d,f=a,p=0,m=!!c&&r(c,h,3);while(p<u){if(p in n){if(d=m?m(n[p],p,e):n[p],s>0&&l(d))f=o(t,e,d,i(d.length),f,s-1)-1;else{if(f>=9007199254740991)throw TypeError("Exceed the acceptable array length");t[f]=d}f++}p++}return f};t.exports=o},a434:function(t,e,n){"use strict";var l=n("23e7"),i=n("23cb"),r=n("a691"),o=n("50c4"),u=n("7b0b"),a=n("65f0"),s=n("8418"),c=n("1dde"),h=n("ae40"),d=c("splice"),f=h("splice",{ACCESSORS:!0,0:0,1:2}),p=Math.max,m=Math.min,v=9007199254740991,g="Maximum allowed length exceeded";l({target:"Array",proto:!0,forced:!d||!f},{splice:function(t,e){var n,l,c,h,d,f,y=u(this),b=o(y.length),x=i(t,b),w=arguments.length;if(0===w?n=l=0:1===w?(n=0,l=b-x):(n=w-2,l=m(p(r(e),0),b-x)),b+n-l>v)throw TypeError(g);for(c=a(y,l),h=0;h<l;h++)d=x+h,d in y&&s(c,h,y[d]);if(c.length=l,n<l){for(h=x;h<b-l;h++)d=h+l,f=h+n,d in y?y[f]=y[d]:delete y[f];for(h=b;h>b-l+n;h--)delete y[h-1]}else if(n>l)for(h=b-l;h>x;h--)d=h+l-1,f=h+n-1,d in y?y[f]=y[d]:delete y[f];for(h=0;h<n;h++)y[h+x]=arguments[h+2];return y.length=b-l+n,c}})},a452:function(t,e,n){"use strict";var l=n("ade3"),i=n("2b0e");function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"value",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"change";return i["a"].extend({name:"proxyable",model:{prop:t,event:e},props:Object(l["a"])({},t,{required:!1}),data:function(){return{internalLazyValue:this[t]}},computed:{internalValue:{get:function(){return this.internalLazyValue},set:function(t){t!==this.internalLazyValue&&(this.internalLazyValue=t,this.$emit(e,t))}}},watch:Object(l["a"])({},t,(function(t){this.internalLazyValue=t}))})}var o=r();e["a"]=o},a4b4:function(t,e,n){var l=n("342f");t.exports=/web0s(?!.*chrome)/i.test(l)},a4d3:function(t,e,n){"use strict";var l=n("23e7"),i=n("da84"),r=n("d066"),o=n("c430"),u=n("83ab"),a=n("4930"),s=n("fdbf"),c=n("d039"),h=n("5135"),d=n("e8b5"),f=n("861d"),p=n("825a"),m=n("7b0b"),v=n("fc6a"),g=n("c04e"),y=n("5c6c"),b=n("7c73"),x=n("df75"),w=n("241c"),_=n("057f"),M=n("7418"),S=n("06cf"),T=n("9bf2"),E=n("d1e7"),A=n("9112"),C=n("6eeb"),O=n("5692"),L=n("f772"),P=n("d012"),R=n("90e3"),k=n("b622"),I=n("e538"),D=n("746f"),N=n("d44e"),j=n("69f3"),B=n("b727").forEach,z=L("hidden"),F="Symbol",U="prototype",V=k("toPrimitive"),H=j.set,G=j.getterFor(F),W=Object[U],$=i.Symbol,q=r("JSON","stringify"),X=S.f,Y=T.f,Z=_.f,J=E.f,K=O("symbols"),Q=O("op-symbols"),tt=O("string-to-symbol-registry"),et=O("symbol-to-string-registry"),nt=O("wks"),lt=i.QObject,it=!lt||!lt[U]||!lt[U].findChild,rt=u&&c((function(){return 7!=b(Y({},"a",{get:function(){return Y(this,"a",{value:7}).a}})).a}))?function(t,e,n){var l=X(W,e);l&&delete W[e],Y(t,e,n),l&&t!==W&&Y(W,e,l)}:Y,ot=function(t,e){var n=K[t]=b($[U]);return H(n,{type:F,tag:t,description:e}),u||(n.description=e),n},ut=s?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof $},at=function(t,e,n){t===W&&at(Q,e,n),p(t);var l=g(e,!0);return p(n),h(K,l)?(n.enumerable?(h(t,z)&&t[z][l]&&(t[z][l]=!1),n=b(n,{enumerable:y(0,!1)})):(h(t,z)||Y(t,z,y(1,{})),t[z][l]=!0),rt(t,l,n)):Y(t,l,n)},st=function(t,e){p(t);var n=v(e),l=x(n).concat(pt(n));return B(l,(function(e){u&&!ht.call(n,e)||at(t,e,n[e])})),t},ct=function(t,e){return void 0===e?b(t):st(b(t),e)},ht=function(t){var e=g(t,!0),n=J.call(this,e);return!(this===W&&h(K,e)&&!h(Q,e))&&(!(n||!h(this,e)||!h(K,e)||h(this,z)&&this[z][e])||n)},dt=function(t,e){var n=v(t),l=g(e,!0);if(n!==W||!h(K,l)||h(Q,l)){var i=X(n,l);return!i||!h(K,l)||h(n,z)&&n[z][l]||(i.enumerable=!0),i}},ft=function(t){var e=Z(v(t)),n=[];return B(e,(function(t){h(K,t)||h(P,t)||n.push(t)})),n},pt=function(t){var e=t===W,n=Z(e?Q:v(t)),l=[];return B(n,(function(t){!h(K,t)||e&&!h(W,t)||l.push(K[t])})),l};if(a||($=function(){if(this instanceof $)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=R(t),n=function(t){this===W&&n.call(Q,t),h(this,z)&&h(this[z],e)&&(this[z][e]=!1),rt(this,e,y(1,t))};return u&&it&&rt(W,e,{configurable:!0,set:n}),ot(e,t)},C($[U],"toString",(function(){return G(this).tag})),C($,"withoutSetter",(function(t){return ot(R(t),t)})),E.f=ht,T.f=at,S.f=dt,w.f=_.f=ft,M.f=pt,I.f=function(t){return ot(k(t),t)},u&&(Y($[U],"description",{configurable:!0,get:function(){return G(this).description}}),o||C(W,"propertyIsEnumerable",ht,{unsafe:!0}))),l({global:!0,wrap:!0,forced:!a,sham:!a},{Symbol:$}),B(x(nt),(function(t){D(t)})),l({target:F,stat:!0,forced:!a},{for:function(t){var e=String(t);if(h(tt,e))return tt[e];var n=$(e);return tt[e]=n,et[n]=e,n},keyFor:function(t){if(!ut(t))throw TypeError(t+" is not a symbol");if(h(et,t))return et[t]},useSetter:function(){it=!0},useSimple:function(){it=!1}}),l({target:"Object",stat:!0,forced:!a,sham:!u},{create:ct,defineProperty:at,defineProperties:st,getOwnPropertyDescriptor:dt}),l({target:"Object",stat:!0,forced:!a},{getOwnPropertyNames:ft,getOwnPropertySymbols:pt}),l({target:"Object",stat:!0,forced:c((function(){M.f(1)}))},{getOwnPropertySymbols:function(t){return M.f(m(t))}}),q){var mt=!a||c((function(){var t=$();return"[null]"!=q([t])||"{}"!=q({a:t})||"{}"!=q(Object(t))}));l({target:"JSON",stat:!0,forced:mt},{stringify:function(t,e,n){var l,i=[t],r=1;while(arguments.length>r)i.push(arguments[r++]);if(l=e,(f(e)||void 0!==t)&&!ut(t))return d(e)||(e=function(t,e){if("function"==typeof l&&(e=l.call(this,t,e)),!ut(e))return e}),i[1]=e,q.apply(null,i)}})}$[U][V]||A($[U],V,$[U].valueOf),N($,F),P[z]=!0},a623:function(t,e,n){"use strict";var l=n("23e7"),i=n("b727").every,r=n("a640"),o=n("ae40"),u=r("every"),a=o("every");l({target:"Array",proto:!0,forced:!u||!a},{every:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},a630:function(t,e,n){var l=n("23e7"),i=n("4df4"),r=n("1c7e"),o=!r((function(t){Array.from(t)}));l({target:"Array",stat:!0,forced:o},{from:i})},a640:function(t,e,n){"use strict";var l=n("d039");t.exports=function(t,e){var n=[][t];return!!n&&l((function(){n.call(null,e||function(){throw 1},1)}))}},a691:function(t,e){var n=Math.ceil,l=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?l:n)(t)}},a79d:function(t,e,n){"use strict";var l=n("23e7"),i=n("c430"),r=n("fea9"),o=n("d039"),u=n("d066"),a=n("4840"),s=n("cdf9"),c=n("6eeb"),h=!!r&&o((function(){r.prototype["finally"].call({then:function(){}},(function(){}))}));l({target:"Promise",proto:!0,real:!0,forced:h},{finally:function(t){var e=a(this,u("Promise")),n="function"==typeof t;return this.then(n?function(n){return s(e,t()).then((function(){return n}))}:t,n?function(n){return s(e,t()).then((function(){throw n}))}:t)}}),i||"function"!=typeof r||r.prototype["finally"]||c(r.prototype,"finally",u("Promise").prototype["finally"])},a975:function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").every,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("every",(function(t){return i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},a981:function(t,e){t.exports="undefined"!==typeof ArrayBuffer&&"undefined"!==typeof DataView},a9ad:function(t,e,n){"use strict";n("d3b7"),n("ac1f"),n("25f0"),n("1276"),n("498a");var l=n("3835"),i=n("ade3"),r=n("5530"),o=n("2b0e"),u=n("d9bd"),a=n("7bc6");e["a"]=o["a"].extend({name:"colorable",props:{color:String},methods:{setBackgroundColor:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"===typeof e.style?(Object(u["b"])("style must be an object",this),e):"string"===typeof e.class?(Object(u["b"])("class must be an object",this),e):(Object(a["d"])(t)?e.style=Object(r["a"])(Object(r["a"])({},e.style),{},{"background-color":"".concat(t),"border-color":"".concat(t)}):t&&(e.class=Object(r["a"])(Object(r["a"])({},e.class),{},Object(i["a"])({},t,!0))),e)},setTextColor:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("string"===typeof e.style)return Object(u["b"])("style must be an object",this),e;if("string"===typeof e.class)return Object(u["b"])("class must be an object",this),e;if(Object(a["d"])(t))e.style=Object(r["a"])(Object(r["a"])({},e.style),{},{color:"".concat(t),"caret-color":"".concat(t)});else if(t){var n=t.toString().trim().split(" ",2),o=Object(l["a"])(n,2),s=o[0],c=o[1];e.class=Object(r["a"])(Object(r["a"])({},e.class),{},Object(i["a"])({},s+"--text",!0)),c&&(e.class["text--"+c]=!0)}return e}}})},a9e3:function(t,e,n){"use strict";var l=n("83ab"),i=n("da84"),r=n("94ca"),o=n("6eeb"),u=n("5135"),a=n("c6b6"),s=n("7156"),c=n("c04e"),h=n("d039"),d=n("7c73"),f=n("241c").f,p=n("06cf").f,m=n("9bf2").f,v=n("58a8").trim,g="Number",y=i[g],b=y.prototype,x=a(d(b))==g,w=function(t){var e,n,l,i,r,o,u,a,s=c(t,!1);if("string"==typeof s&&s.length>2)if(s=v(s),e=s.charCodeAt(0),43===e||45===e){if(n=s.charCodeAt(2),88===n||120===n)return NaN}else if(48===e){switch(s.charCodeAt(1)){case 66:case 98:l=2,i=49;break;case 79:case 111:l=8,i=55;break;default:return+s}for(r=s.slice(2),o=r.length,u=0;u<o;u++)if(a=r.charCodeAt(u),a<48||a>i)return NaN;return parseInt(r,l)}return+s};if(r(g,!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var _,M=function(t){var e=arguments.length<1?0:t,n=this;return n instanceof M&&(x?h((function(){b.valueOf.call(n)})):a(n)!=g)?s(new y(w(e)),n,M):w(e)},S=l?f(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),T=0;S.length>T;T++)u(y,_=S[T])&&!u(M,_)&&m(M,_,p(y,_));M.prototype=b,b.constructor=M,o(i,g,M)}},ab13:function(t,e,n){var l=n("b622"),i=l("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(n){try{return e[i]=!1,"/./"[t](e)}catch(l){}}return!1}},ac1f:function(t,e,n){"use strict";var l=n("23e7"),i=n("9263");l({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},ac7c:function(t,e,n){"use strict";n("d3b7"),n("25f0");var l=n("5530"),i=(n("6ca7"),n("ec29"),n("9d26")),r=n("c37a"),o=n("fe09");e["a"]=o["a"].extend({name:"v-checkbox",props:{indeterminate:Boolean,indeterminateIcon:{type:String,default:"$checkboxIndeterminate"},offIcon:{type:String,default:"$checkboxOff"},onIcon:{type:String,default:"$checkboxOn"}},data:function(){return{inputIndeterminate:this.indeterminate}},computed:{classes:function(){return Object(l["a"])(Object(l["a"])({},r["a"].options.computed.classes.call(this)),{},{"v-input--selection-controls":!0,"v-input--checkbox":!0,"v-input--indeterminate":this.inputIndeterminate})},computedIcon:function(){return this.inputIndeterminate?this.indeterminateIcon:this.isActive?this.onIcon:this.offIcon},validationState:function(){if(!this.isDisabled||this.inputIndeterminate)return this.hasError&&this.shouldValidate?"error":this.hasSuccess?"success":null!==this.hasColor?this.computedColor:void 0}},watch:{indeterminate:function(t){var e=this;this.$nextTick((function(){return e.inputIndeterminate=t}))},inputIndeterminate:function(t){this.$emit("update:indeterminate",t)},isActive:function(){this.indeterminate&&(this.inputIndeterminate=!1)}},methods:{genCheckbox:function(){return this.$createElement("div",{staticClass:"v-input--selection-controls__input"},[this.$createElement(i["a"],this.setTextColor(this.validationState,{props:{dense:this.dense,dark:this.dark,light:this.light}}),this.computedIcon),this.genInput("checkbox",Object(l["a"])(Object(l["a"])({},this.attrs$),{},{"aria-checked":this.inputIndeterminate?"mixed":this.isActive.toString()})),this.genRipple(this.setTextColor(this.rippleState))])},genDefaultSlot:function(){return[this.genCheckbox(),this.genLabel()]}}})},ad6d:function(t,e,n){"use strict";var l=n("825a");t.exports=function(){var t=l(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},ade3:function(t,e,n){"use strict";function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}n.d(e,"a",(function(){return l}))},ae40:function(t,e,n){var l=n("83ab"),i=n("d039"),r=n("5135"),o=Object.defineProperty,u={},a=function(t){throw t};t.exports=function(t,e){if(r(u,t))return u[t];e||(e={});var n=[][t],s=!!r(e,"ACCESSORS")&&e.ACCESSORS,c=r(e,0)?e[0]:a,h=r(e,1)?e[1]:void 0;return u[t]=!!n&&!i((function(){if(s&&!l)return!0;var t={length:-1};s?o(t,1,{enumerable:!0,get:a}):t[1]=1,n.call(t,c,h)}))}},ae93:function(t,e,n){"use strict";var l,i,r,o=n("d039"),u=n("e163"),a=n("9112"),s=n("5135"),c=n("b622"),h=n("c430"),d=c("iterator"),f=!1,p=function(){return this};[].keys&&(r=[].keys(),"next"in r?(i=u(u(r)),i!==Object.prototype&&(l=i)):f=!0);var m=void 0==l||o((function(){var t={};return l[d].call(t)!==t}));m&&(l={}),h&&!m||s(l,d)||a(l,d,p),t.exports={IteratorPrototype:l,BUGGY_SAFARI_ITERATORS:f}},af03:function(t,e,n){var l=n("d039");t.exports=function(t){return l((function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3}))}},af2b:function(t,e,n){"use strict";n("c96a");var l=n("2b0e");e["a"]=l["a"].extend({name:"sizeable",props:{large:Boolean,small:Boolean,xLarge:Boolean,xSmall:Boolean},computed:{medium:function(){return Boolean(!this.xSmall&&!this.small&&!this.large&&!this.xLarge)},sizeableClasses:function(){return{"v-size--x-small":this.xSmall,"v-size--small":this.small,"v-size--default":this.medium,"v-size--large":this.large,"v-size--x-large":this.xLarge}}}})},b041:function(t,e,n){"use strict";var l=n("00ee"),i=n("f5df");t.exports=l?{}.toString:function(){return"[object "+i(this)+"]"}},b0af:function(t,e,n){"use strict";n("0481"),n("4069"),n("a9e3");var l=n("5530"),i=(n("615b"),n("10d2")),r=n("297c"),o=n("1c87"),u=n("58df");e["a"]=Object(u["a"])(r["a"],o["a"],i["a"]).extend({name:"v-card",props:{flat:Boolean,hover:Boolean,img:String,link:Boolean,loaderHeight:{type:[Number,String],default:4},raised:Boolean},computed:{classes:function(){return Object(l["a"])(Object(l["a"])({"v-card":!0},o["a"].options.computed.classes.call(this)),{},{"v-card--flat":this.flat,"v-card--hover":this.hover,"v-card--link":this.isClickable,"v-card--loading":this.loading,"v-card--disabled":this.disabled,"v-card--raised":this.raised},i["a"].options.computed.classes.call(this))},styles:function(){var t=Object(l["a"])({},i["a"].options.computed.styles.call(this));return this.img&&(t.background='url("'.concat(this.img,'") center center / cover no-repeat')),t}},methods:{genProgress:function(){var t=r["a"].options.methods.genProgress.call(this);return t?this.$createElement("div",{staticClass:"v-card__progress",key:"progress"},[t]):null}},render:function(t){var e=this.generateRouteLink(),n=e.tag,l=e.data;return l.style=this.styles,this.isClickable&&(l.attrs=l.attrs||{},l.attrs.tabindex=0),t(n,this.setBackgroundColor(this.color,l),[this.genProgress(),this.$slots.default])}})},b0c0:function(t,e,n){var l=n("83ab"),i=n("9bf2").f,r=Function.prototype,o=r.toString,u=/^\s*function ([^ (]*)/,a="name";l&&!(a in r)&&i(r,a,{configurable:!0,get:function(){try{return o.call(this).match(u)[1]}catch(t){return""}}})},b39a:function(t,e,n){"use strict";var l=n("da84"),i=n("ebb5"),r=n("d039"),o=l.Int8Array,u=i.aTypedArray,a=i.exportTypedArrayMethod,s=[].toLocaleString,c=[].slice,h=!!o&&r((function(){s.call(new o(1))})),d=r((function(){return[1,2].toLocaleString()!=new o([1,2]).toLocaleString()}))||!r((function(){o.prototype.toLocaleString.call([1,2])}));a("toLocaleString",(function(){return s.apply(h?c.call(u(this)):u(this),arguments)}),d)},b575:function(t,e,n){var l,i,r,o,u,a,s,c,h=n("da84"),d=n("06cf").f,f=n("2cf4").set,p=n("1cdc"),m=n("a4b4"),v=n("605d"),g=h.MutationObserver||h.WebKitMutationObserver,y=h.document,b=h.process,x=h.Promise,w=d(h,"queueMicrotask"),_=w&&w.value;_||(l=function(){var t,e;v&&(t=b.domain)&&t.exit();while(i){e=i.fn,i=i.next;try{e()}catch(n){throw i?o():r=void 0,n}}r=void 0,t&&t.enter()},p||v||m||!g||!y?x&&x.resolve?(s=x.resolve(void 0),c=s.then,o=function(){c.call(s,l)}):o=v?function(){b.nextTick(l)}:function(){f.call(h,l)}:(u=!0,a=y.createTextNode(""),new g(l).observe(a,{characterData:!0}),o=function(){a.data=u=!u})),t.exports=_||function(t){var e={fn:t,next:void 0};r&&(r.next=e),i||(i=e,o()),r=e}},b622:function(t,e,n){var l=n("da84"),i=n("5692"),r=n("5135"),o=n("90e3"),u=n("4930"),a=n("fdbf"),s=i("wks"),c=l.Symbol,h=a?c:c&&c.withoutSetter||o;t.exports=function(t){return r(s,t)||(u&&r(c,t)?s[t]=c[t]:s[t]=h("Symbol."+t)),s[t]}},b64b:function(t,e,n){var l=n("23e7"),i=n("7b0b"),r=n("df75"),o=n("d039"),u=o((function(){r(1)}));l({target:"Object",stat:!0,forced:u},{keys:function(t){return r(i(t))}})},b680:function(t,e,n){"use strict";var l=n("23e7"),i=n("a691"),r=n("408a"),o=n("1148"),u=n("d039"),a=1..toFixed,s=Math.floor,c=function(t,e,n){return 0===e?n:e%2===1?c(t,e-1,n*t):c(t*t,e/2,n)},h=function(t){var e=0,n=t;while(n>=4096)e+=12,n/=4096;while(n>=2)e+=1,n/=2;return e},d=a&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!u((function(){a.call({})}));l({target:"Number",proto:!0,forced:d},{toFixed:function(t){var e,n,l,u,a=r(this),d=i(t),f=[0,0,0,0,0,0],p="",m="0",v=function(t,e){var n=-1,l=e;while(++n<6)l+=t*f[n],f[n]=l%1e7,l=s(l/1e7)},g=function(t){var e=6,n=0;while(--e>=0)n+=f[e],f[e]=s(n/t),n=n%t*1e7},y=function(){var t=6,e="";while(--t>=0)if(""!==e||0===t||0!==f[t]){var n=String(f[t]);e=""===e?n:e+o.call("0",7-n.length)+n}return e};if(d<0||d>20)throw RangeError("Incorrect fraction digits");if(a!=a)return"NaN";if(a<=-1e21||a>=1e21)return String(a);if(a<0&&(p="-",a=-a),a>1e-21)if(e=h(a*c(2,69,1))-69,n=e<0?a*c(2,-e,1):a/c(2,e,1),n*=4503599627370496,e=52-e,e>0){v(0,n),l=d;while(l>=7)v(1e7,0),l-=7;v(c(10,l,1),0),l=e-1;while(l>=23)g(1<<23),l-=23;g(1<<l),v(1,1),g(2),m=y()}else v(0,n),v(1<<-e,0),m=y()+o.call("0",d);return d>0?(u=m.length,m=p+(u<=d?"0."+o.call("0",d-u)+m:m.slice(0,u-d)+"."+m.slice(u-d))):m=p+m,m}})},b727:function(t,e,n){var l=n("0366"),i=n("44ad"),r=n("7b0b"),o=n("50c4"),u=n("65f0"),a=[].push,s=function(t){var e=1==t,n=2==t,s=3==t,c=4==t,h=6==t,d=7==t,f=5==t||h;return function(p,m,v,g){for(var y,b,x=r(p),w=i(x),_=l(m,v,3),M=o(w.length),S=0,T=g||u,E=e?T(p,M):n||d?T(p,0):void 0;M>S;S++)if((f||S in w)&&(y=w[S],b=_(y,S,x),t))if(e)E[S]=b;else if(b)switch(t){case 3:return!0;case 5:return y;case 6:return S;case 2:a.call(E,y)}else switch(t){case 4:return!1;case 7:a.call(E,y)}return h?-1:s||c?c:E}};t.exports={forEach:s(0),map:s(1),filter:s(2),some:s(3),every:s(4),find:s(5),findIndex:s(6),filterOut:s(7)}},b73d:function(t,e,n){"use strict";n("0481"),n("4069");var l=n("5530"),i=(n("ec29"),n("9d01"),n("fe09")),r=n("c37a"),o=(n("4160"),n("159b"),n("80d2")),u=function(t){var e=t.touchstartX,n=t.touchendX,l=t.touchstartY,i=t.touchendY,r=.5,o=16;t.offsetX=n-e,t.offsetY=i-l,Math.abs(t.offsetY)<r*Math.abs(t.offsetX)&&(t.left&&n<e-o&&t.left(t),t.right&&n>e+o&&t.right(t)),Math.abs(t.offsetX)<r*Math.abs(t.offsetY)&&(t.up&&i<l-o&&t.up(t),t.down&&i>l+o&&t.down(t))};function a(t,e){var n=t.changedTouches[0];e.touchstartX=n.clientX,e.touchstartY=n.clientY,e.start&&e.start(Object.assign(t,e))}function s(t,e){var n=t.changedTouches[0];e.touchendX=n.clientX,e.touchendY=n.clientY,e.end&&e.end(Object.assign(t,e)),u(e)}function c(t,e){var n=t.changedTouches[0];e.touchmoveX=n.clientX,e.touchmoveY=n.clientY,e.move&&e.move(Object.assign(t,e))}function h(t){var e={touchstartX:0,touchstartY:0,touchendX:0,touchendY:0,touchmoveX:0,touchmoveY:0,offsetX:0,offsetY:0,left:t.left,right:t.right,up:t.up,down:t.down,start:t.start,move:t.move,end:t.end};return{touchstart:function(t){return a(t,e)},touchend:function(t){return s(t,e)},touchmove:function(t){return c(t,e)}}}function d(t,e,n){var l=e.value,i=l.parent?t.parentElement:t,r=l.options||{passive:!0};if(i){var u=h(e.value);i._touchHandlers=Object(i._touchHandlers),i._touchHandlers[n.context._uid]=u,Object(o["u"])(u).forEach((function(t){i.addEventListener(t,u[t],r)}))}}function f(t,e,n){var l=e.value.parent?t.parentElement:t;if(l&&l._touchHandlers){var i=l._touchHandlers[n.context._uid];Object(o["u"])(i).forEach((function(t){l.removeEventListener(t,i[t])})),delete l._touchHandlers[n.context._uid]}}var p={inserted:d,unbind:f},m=p,v=n("0789"),g=n("490a");e["a"]=i["a"].extend({name:"v-switch",directives:{Touch:m},props:{inset:Boolean,loading:{type:[Boolean,String],default:!1},flat:{type:Boolean,default:!1}},computed:{classes:function(){return Object(l["a"])(Object(l["a"])({},r["a"].options.computed.classes.call(this)),{},{"v-input--selection-controls v-input--switch":!0,"v-input--switch--flat":this.flat,"v-input--switch--inset":this.inset})},attrs:function(){return{"aria-checked":String(this.isActive),"aria-disabled":String(this.isDisabled),role:"switch"}},validationState:function(){return this.hasError&&this.shouldValidate?"error":this.hasSuccess?"success":null!==this.hasColor?this.computedColor:void 0},switchData:function(){return this.setTextColor(this.loading?void 0:this.validationState,{class:this.themeClasses})}},methods:{genDefaultSlot:function(){return[this.genSwitch(),this.genLabel()]},genSwitch:function(){return this.$createElement("div",{staticClass:"v-input--selection-controls__input"},[this.genInput("checkbox",Object(l["a"])(Object(l["a"])({},this.attrs),this.attrs$)),this.genRipple(this.setTextColor(this.validationState,{directives:[{name:"touch",value:{left:this.onSwipeLeft,right:this.onSwipeRight}}]})),this.$createElement("div",Object(l["a"])({staticClass:"v-input--switch__track"},this.switchData)),this.$createElement("div",Object(l["a"])({staticClass:"v-input--switch__thumb"},this.switchData),[this.genProgress()])])},genProgress:function(){return this.$createElement(v["c"],{},[!1===this.loading?null:this.$slots.progress||this.$createElement(g["a"],{props:{color:!0===this.loading||""===this.loading?this.color||"primary":this.loading,size:16,width:2,indeterminate:!0}})])},onSwipeLeft:function(){this.isActive&&this.onChange()},onSwipeRight:function(){this.isActive||this.onChange()},onKeydown:function(t){(t.keyCode===o["t"].left&&this.isActive||t.keyCode===o["t"].right&&!this.isActive)&&this.onChange()}}})},b848:function(t,e,n){"use strict";var l=n("2909"),i=n("58df");function r(t){for(var e=[],n=0;n<t.length;n++){var i=t[n];i.isActive&&i.isDependent?e.push(i):e.push.apply(e,Object(l["a"])(r(i.$children)))}return e}e["a"]=Object(i["a"])().extend({name:"dependent",data:function(){return{closeDependents:!0,isActive:!1,isDependent:!0}},watch:{isActive:function(t){if(!t)for(var e=this.getOpenDependents(),n=0;n<e.length;n++)e[n].isActive=!1}},methods:{getOpenDependents:function(){return this.closeDependents?r(this.$children):[]},getOpenDependentElements:function(){for(var t=[],e=this.getOpenDependents(),n=0;n<e.length;n++)t.push.apply(t,Object(l["a"])(e[n].getClickableDependentElements()));return t},getClickableDependentElements:function(){var t=[this.$el];return this.$refs.content&&t.push(this.$refs.content),this.overlay&&t.push(this.overlay.$el),t.push.apply(t,Object(l["a"])(this.getOpenDependentElements())),t}}})},b85c:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n("a4d3"),n("e01a"),n("d28b"),n("d3b7"),n("3ca3"),n("ddb0");var l=n("06c5");function i(t,e){var n;if("undefined"===typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(n=Object(l["a"])(t))||e&&t&&"number"===typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,u=!0,a=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return u=t.done,t},e:function(t){a=!0,o=t},f:function(){try{u||null==n["return"]||n["return"]()}finally{if(a)throw o}}}}},b974:function(t,e,n){"use strict";n("99af"),n("4de4"),n("c740"),n("a630"),n("caad"),n("d81d"),n("13d5"),n("fb6a"),n("a434"),n("b0c0"),n("4ec9"),n("d3b7"),n("ac1f"),n("25f0"),n("2532"),n("3ca3"),n("1276"),n("2ca0"),n("498a"),n("ddb0");var l=n("b85c"),i=n("ade3"),r=n("5530"),o=(n("4ff9"),n("68dd"),n("34ef")),u=n("326d"),a=(n("c975"),n("a15b"),n("b64b"),n("4160"),n("159b"),n("cf36"),n("5607")),s=n("2b0e"),c=n("132d"),h=n("a9ad"),d=n("7560"),f=n("d9f7"),p=n("80d2"),m=s["a"].extend({name:"v-simple-checkbox",functional:!0,directives:{ripple:a["a"]},props:Object(r["a"])(Object(r["a"])(Object(r["a"])({},h["a"].options.props),d["a"].options.props),{},{disabled:Boolean,ripple:{type:Boolean,default:!0},value:Boolean,indeterminate:Boolean,indeterminateIcon:{type:String,default:"$checkboxIndeterminate"},onIcon:{type:String,default:"$checkboxOn"},offIcon:{type:String,default:"$checkboxOff"}}),render:function(t,e){var n=e.props,l=e.data,i=(e.listeners,[]);if(n.ripple&&!n.disabled){var r=t("div",h["a"].options.methods.setTextColor(n.color,{staticClass:"v-input--selection-controls__ripple",directives:[{name:"ripple",value:{center:!0}}]}));i.push(r)}var o=n.offIcon;n.indeterminate?o=n.indeterminateIcon:n.value&&(o=n.onIcon),i.push(t(c["a"],h["a"].options.methods.setTextColor(n.value&&n.color,{props:{disabled:n.disabled,dark:n.dark,light:n.light}}),o));var u={"v-simple-checkbox":!0,"v-simple-checkbox--disabled":n.disabled};return t("div",Object(f["a"])(l,{class:u,on:{click:function(t){t.stopPropagation(),l.on&&l.on.input&&!n.disabled&&Object(p["A"])(l.on.input).forEach((function(t){return t(!n.value)}))}}}),i)}}),v=(n("8ce9"),d["a"].extend({name:"v-divider",props:{inset:Boolean,vertical:Boolean},render:function(t){var e;return this.$attrs.role&&"separator"!==this.$attrs.role||(e=this.vertical?"vertical":"horizontal"),t("hr",{class:Object(r["a"])({"v-divider":!0,"v-divider--inset":this.inset,"v-divider--vertical":this.vertical},this.themeClasses),attrs:Object(r["a"])({role:"separator","aria-orientation":e},this.$attrs),on:this.$listeners})}})),g=v,y=n("24e2"),b=n("da13"),x=n("1800"),w=n("5d23"),_=n("8860"),M=n("58df"),S=Object(M["a"])(h["a"],d["a"]).extend({name:"v-select-list",directives:{ripple:a["a"]},props:{action:Boolean,dense:Boolean,hideSelected:Boolean,items:{type:Array,default:function(){return[]}},itemDisabled:{type:[String,Array,Function],default:"disabled"},itemText:{type:[String,Array,Function],default:"text"},itemValue:{type:[String,Array,Function],default:"value"},noDataText:String,noFilter:Boolean,searchInput:null,selectedItems:{type:Array,default:function(){return[]}}},computed:{parsedItems:function(){var t=this;return this.selectedItems.map((function(e){return t.getValue(e)}))},tileActiveClass:function(){return Object.keys(this.setTextColor(this.color).class||{}).join(" ")},staticNoDataTile:function(){var t={attrs:{role:void 0},on:{mousedown:function(t){return t.preventDefault()}}};return this.$createElement(b["a"],t,[this.genTileContent(this.noDataText)])}},methods:{genAction:function(t,e){var n=this;return this.$createElement(x["a"],[this.$createElement(m,{props:{color:this.color,value:e},on:{input:function(){return n.$emit("select",t)}}})])},genDivider:function(t){return this.$createElement(g,{props:t})},genFilteredText:function(t){if(t=t||"",!this.searchInput||this.noFilter)return Object(p["j"])(t);var e=this.getMaskedCharacters(t),n=e.start,l=e.middle,i=e.end;return"".concat(Object(p["j"])(n)).concat(this.genHighlight(l)).concat(Object(p["j"])(i))},genHeader:function(t){return this.$createElement(y["a"],{props:t},t.header)},genHighlight:function(t){return'<span class="v-list-item__mask">'.concat(Object(p["j"])(t),"</span>")},getMaskedCharacters:function(t){var e=(this.searchInput||"").toString().toLocaleLowerCase(),n=t.toLocaleLowerCase().indexOf(e);if(n<0)return{start:t,middle:"",end:""};var l=t.slice(0,n),i=t.slice(n,n+e.length),r=t.slice(n+e.length);return{start:l,middle:i,end:r}},genTile:function(t){var e=this,n=t.item,l=t.index,i=t.disabled,o=void 0===i?null:i,u=t.value,a=void 0!==u&&u;a||(a=this.hasItem(n)),n===Object(n)&&(o=null!==o?o:this.getDisabled(n));var s={attrs:{"aria-selected":String(a),id:"list-item-".concat(this._uid,"-").concat(l),role:"option"},on:{mousedown:function(t){t.preventDefault()},click:function(){return o||e.$emit("select",n)}},props:{activeClass:this.tileActiveClass,disabled:o,ripple:!0,inputValue:a}};if(!this.$scopedSlots.item)return this.$createElement(b["a"],s,[this.action&&!this.hideSelected&&this.items.length>0?this.genAction(n,a):null,this.genTileContent(n,l)]);var c=this,h=this.$scopedSlots.item({parent:c,item:n,attrs:Object(r["a"])(Object(r["a"])({},s.attrs),s.props),on:s.on});return this.needsTile(h)?this.$createElement(b["a"],s,h):h},genTileContent:function(t){var e=this.genFilteredText(this.getText(t));return this.$createElement(w["a"],[this.$createElement(w["c"],{domProps:{innerHTML:e}})])},hasItem:function(t){return this.parsedItems.indexOf(this.getValue(t))>-1},needsTile:function(t){return 1!==t.length||null==t[0].componentOptions||"v-list-item"!==t[0].componentOptions.Ctor.options.name},getDisabled:function(t){return Boolean(Object(p["n"])(t,this.itemDisabled,!1))},getText:function(t){return String(Object(p["n"])(t,this.itemText,t))},getValue:function(t){return Object(p["n"])(t,this.itemValue,this.getText(t))}},render:function(){for(var t=[],e=this.items.length,n=0;n<e;n++){var l=this.items[n];this.hideSelected&&this.hasItem(l)||(null==l?t.push(this.genTile({item:l,index:n})):l.header?t.push(this.genHeader(l)):l.divider?t.push(this.genDivider(l)):t.push(this.genTile({item:l,index:n})))}return t.length||t.push(this.$slots["no-data"]||this.staticNoDataTile),this.$slots["prepend-item"]&&t.unshift(this.$slots["prepend-item"]),this.$slots["append-item"]&&t.push(this.$slots["append-item"]),this.$createElement(_["a"],{staticClass:"v-select-list",class:this.themeClasses,attrs:{role:"listbox",tabindex:-1},props:{dense:this.dense}},t)}}),T=n("c37a"),E=n("8654"),A=n("8547"),C=n("b848"),O=s["a"].extend({name:"filterable",props:{noDataText:{type:String,default:"$vuetify.noDataText"}}}),L=n("a293"),P=n("d9bd"),R={closeOnClick:!1,closeOnContentClick:!1,disableKeys:!0,openOnClick:!1,maxHeight:304},k=Object(M["a"])(E["a"],A["a"],C["a"],O);e["a"]=k.extend().extend({name:"v-select",directives:{ClickOutside:L["a"]},props:{appendIcon:{type:String,default:"$dropdown"},attach:{type:null,default:!1},cacheItems:Boolean,chips:Boolean,clearable:Boolean,deletableChips:Boolean,disableLookup:Boolean,eager:Boolean,hideSelected:Boolean,items:{type:Array,default:function(){return[]}},itemColor:{type:String,default:"primary"},itemDisabled:{type:[String,Array,Function],default:"disabled"},itemText:{type:[String,Array,Function],default:"text"},itemValue:{type:[String,Array,Function],default:"value"},menuProps:{type:[String,Array,Object],default:function(){return R}},multiple:Boolean,openOnClear:Boolean,returnObject:Boolean,smallChips:Boolean},data:function(){return{cachedItems:this.cacheItems?this.items:[],menuIsBooted:!1,isMenuActive:!1,lastItem:20,lazyValue:void 0!==this.value?this.value:this.multiple?[]:void 0,selectedIndex:-1,selectedItems:[],keyboardLookupPrefix:"",keyboardLookupLastTime:0}},computed:{allItems:function(){return this.filterDuplicates(this.cachedItems.concat(this.items))},classes:function(){return Object(r["a"])(Object(r["a"])({},E["a"].options.computed.classes.call(this)),{},{"v-select":!0,"v-select--chips":this.hasChips,"v-select--chips--small":this.smallChips,"v-select--is-menu-active":this.isMenuActive,"v-select--is-multi":this.multiple})},computedItems:function(){return this.allItems},computedOwns:function(){return"list-".concat(this._uid)},computedCounterValue:function(){return this.multiple?this.selectedItems.length:(this.getText(this.selectedItems[0])||"").toString().length},directives:function(){var t=this;return this.isFocused?[{name:"click-outside",value:{handler:this.blur,closeConditional:this.closeConditional,include:function(){return t.getOpenDependentElements()}}}]:void 0},dynamicHeight:function(){return"auto"},hasChips:function(){return this.chips||this.smallChips},hasSlot:function(){return Boolean(this.hasChips||this.$scopedSlots.selection)},isDirty:function(){return this.selectedItems.length>0},listData:function(){var t=this.$vnode&&this.$vnode.context.$options._scopeId,e=t?Object(i["a"])({},t,!0):{};return{attrs:Object(r["a"])(Object(r["a"])({},e),{},{id:this.computedOwns}),props:{action:this.multiple,color:this.itemColor,dense:this.dense,hideSelected:this.hideSelected,items:this.virtualizedItems,itemDisabled:this.itemDisabled,itemText:this.itemText,itemValue:this.itemValue,noDataText:this.$vuetify.lang.t(this.noDataText),selectedItems:this.selectedItems},on:{select:this.selectItem},scopedSlots:{item:this.$scopedSlots.item}}},staticList:function(){return(this.$slots["no-data"]||this.$slots["prepend-item"]||this.$slots["append-item"])&&Object(P["b"])("assert: staticList should not be called if slots are used"),this.$createElement(S,this.listData)},virtualizedItems:function(){return this.$_menuProps.auto?this.computedItems:this.computedItems.slice(0,this.lastItem)},menuCanShow:function(){return!0},$_menuProps:function(){var t="string"===typeof this.menuProps?this.menuProps.split(","):this.menuProps;return Array.isArray(t)&&(t=t.reduce((function(t,e){return t[e.trim()]=!0,t}),{})),Object(r["a"])(Object(r["a"])({},R),{},{eager:this.eager,value:this.menuCanShow&&this.isMenuActive,nudgeBottom:t.offsetY?1:0},t)}},watch:{internalValue:function(t){this.initialValue=t,this.setSelectedItems()},isMenuActive:function(t){var e=this;window.setTimeout((function(){return e.onMenuActiveChange(t)}))},items:{immediate:!0,handler:function(t){var e=this;this.cacheItems&&this.$nextTick((function(){e.cachedItems=e.filterDuplicates(e.cachedItems.concat(t))})),this.setSelectedItems()}}},methods:{blur:function(t){E["a"].options.methods.blur.call(this,t),this.isMenuActive=!1,this.isFocused=!1,this.selectedIndex=-1,this.setMenuIndex(-1)},activateMenu:function(){this.isInteractive&&!this.isMenuActive&&(this.isMenuActive=!0)},clearableCallback:function(){var t=this;this.setValue(this.multiple?[]:null),this.setMenuIndex(-1),this.$nextTick((function(){return t.$refs.input&&t.$refs.input.focus()})),this.openOnClear&&(this.isMenuActive=!0)},closeConditional:function(t){return!this.isMenuActive||!this._isDestroyed&&(!this.getContent()||!this.getContent().contains(t.target))&&this.$el&&!this.$el.contains(t.target)&&t.target!==this.$el},filterDuplicates:function(t){for(var e=new Map,n=0;n<t.length;++n){var l=t[n];if(l.header||l.divider)e.set(l,l);else{var i=this.getValue(l);!e.has(i)&&e.set(i,l)}}return Array.from(e.values())},findExistingIndex:function(t){var e=this,n=this.getValue(t);return(this.internalValue||[]).findIndex((function(t){return e.valueComparator(e.getValue(t),n)}))},getContent:function(){return this.$refs.menu&&this.$refs.menu.$refs.content},genChipSelection:function(t,e){var n=this,l=!this.isInteractive||this.getDisabled(t);return this.$createElement(o["a"],{staticClass:"v-chip--select",attrs:{tabindex:-1},props:{close:this.deletableChips&&!l,disabled:l,inputValue:e===this.selectedIndex,small:this.smallChips},on:{click:function(t){l||(t.stopPropagation(),n.selectedIndex=e)},"click:close":function(){return n.onChipInput(t)}},key:JSON.stringify(this.getValue(t))},this.getText(t))},genCommaSelection:function(t,e,n){var l=e===this.selectedIndex&&this.computedColor,i=!this.isInteractive||this.getDisabled(t);return this.$createElement("div",this.setTextColor(l,{staticClass:"v-select__selection v-select__selection--comma",class:{"v-select__selection--disabled":i},key:JSON.stringify(this.getValue(t))}),"".concat(this.getText(t)).concat(n?"":", "))},genDefaultSlot:function(){var t=this.genSelections(),e=this.genInput();return Array.isArray(t)?t.push(e):(t.children=t.children||[],t.children.push(e)),[this.genFieldset(),this.$createElement("div",{staticClass:"v-select__slot",directives:this.directives},[this.genLabel(),this.prefix?this.genAffix("prefix"):null,t,this.suffix?this.genAffix("suffix"):null,this.genClearIcon(),this.genIconSlot(),this.genHiddenInput()]),this.genMenu(),this.genProgress()]},genIcon:function(t,e,n){var l=T["a"].options.methods.genIcon.call(this,t,e,n);return"append"===t&&(l.children[0].data=Object(f["a"])(l.children[0].data,{attrs:{tabindex:l.children[0].componentOptions.listeners&&"-1","aria-hidden":"true","aria-label":void 0}})),l},genInput:function(){var t=E["a"].options.methods.genInput.call(this);return delete t.data.attrs.name,t.data=Object(f["a"])(t.data,{domProps:{value:null},attrs:{readonly:!0,type:"text","aria-readonly":String(this.isReadonly),"aria-activedescendant":Object(p["m"])(this.$refs.menu,"activeTile.id"),autocomplete:Object(p["m"])(t.data,"attrs.autocomplete","off")},on:{keypress:this.onKeyPress}}),t},genHiddenInput:function(){return this.$createElement("input",{domProps:{value:this.lazyValue},attrs:{type:"hidden",name:this.attrs$.name}})},genInputSlot:function(){var t=E["a"].options.methods.genInputSlot.call(this);return t.data.attrs=Object(r["a"])(Object(r["a"])({},t.data.attrs),{},{role:"button","aria-haspopup":"listbox","aria-expanded":String(this.isMenuActive),"aria-owns":this.computedOwns}),t},genList:function(){return this.$slots["no-data"]||this.$slots["prepend-item"]||this.$slots["append-item"]?this.genListWithSlot():this.staticList},genListWithSlot:function(){var t=this,e=["prepend-item","no-data","append-item"].filter((function(e){return t.$slots[e]})).map((function(e){return t.$createElement("template",{slot:e},t.$slots[e])}));return this.$createElement(S,Object(r["a"])({},this.listData),e)},genMenu:function(){var t=this,e=this.$_menuProps;return e.activator=this.$refs["input-slot"],""===this.attach||!0===this.attach||"attach"===this.attach?e.attach=this.$el:e.attach=this.attach,this.$createElement(u["a"],{attrs:{role:void 0},props:e,on:{input:function(e){t.isMenuActive=e,t.isFocused=e},scroll:this.onScroll},ref:"menu"},[this.genList()])},genSelections:function(){var t,e=this.selectedItems.length,n=new Array(e);t=this.$scopedSlots.selection?this.genSlotSelection:this.hasChips?this.genChipSelection:this.genCommaSelection;while(e--)n[e]=t(this.selectedItems[e],e,e===n.length-1);return this.$createElement("div",{staticClass:"v-select__selections"},n)},genSlotSelection:function(t,e){var n=this;return this.$scopedSlots.selection({attrs:{class:"v-chip--select"},parent:this,item:t,index:e,select:function(t){t.stopPropagation(),n.selectedIndex=e},selected:e===this.selectedIndex,disabled:!this.isInteractive})},getMenuIndex:function(){return this.$refs.menu?this.$refs.menu.listIndex:-1},getDisabled:function(t){return Object(p["n"])(t,this.itemDisabled,!1)},getText:function(t){return Object(p["n"])(t,this.itemText,t)},getValue:function(t){return Object(p["n"])(t,this.itemValue,this.getText(t))},onBlur:function(t){t&&this.$emit("blur",t)},onChipInput:function(t){this.multiple?this.selectItem(t):this.setValue(null),0===this.selectedItems.length?this.isMenuActive=!0:this.isMenuActive=!1,this.selectedIndex=-1},onClick:function(t){this.isInteractive&&(this.isAppendInner(t.target)||(this.isMenuActive=!0),this.isFocused||(this.isFocused=!0,this.$emit("focus")),this.$emit("click",t))},onEscDown:function(t){t.preventDefault(),this.isMenuActive&&(t.stopPropagation(),this.isMenuActive=!1)},onKeyPress:function(t){var e=this;if(!this.multiple&&this.isInteractive&&!this.disableLookup){var n=1e3,l=performance.now();l-this.keyboardLookupLastTime>n&&(this.keyboardLookupPrefix=""),this.keyboardLookupPrefix+=t.key.toLowerCase(),this.keyboardLookupLastTime=l;var i=this.allItems.findIndex((function(t){var n=(e.getText(t)||"").toString();return n.toLowerCase().startsWith(e.keyboardLookupPrefix)})),r=this.allItems[i];-1!==i&&(this.lastItem=Math.max(this.lastItem,i+5),this.setValue(this.returnObject?r:this.getValue(r)),this.$nextTick((function(){return e.$refs.menu.getTiles()})),setTimeout((function(){return e.setMenuIndex(i)})))}},onKeyDown:function(t){var e=this;if(!this.isReadonly||t.keyCode===p["t"].tab){var n=t.keyCode,l=this.$refs.menu;if([p["t"].enter,p["t"].space].includes(n)&&this.activateMenu(),this.$emit("keydown",t),l)return this.isMenuActive&&n!==p["t"].tab&&this.$nextTick((function(){l.changeListIndex(t),e.$emit("update:list-index",l.listIndex)})),!this.isMenuActive&&[p["t"].up,p["t"].down,p["t"].home,p["t"].end].includes(n)?this.onUpDown(t):n===p["t"].esc?this.onEscDown(t):n===p["t"].tab?this.onTabDown(t):n===p["t"].space?this.onSpaceDown(t):void 0}},onMenuActiveChange:function(t){if(!(this.multiple&&!t||this.getMenuIndex()>-1)){var e=this.$refs.menu;if(e&&this.isDirty)for(var n=0;n<e.tiles.length;n++)if("true"===e.tiles[n].getAttribute("aria-selected")){this.setMenuIndex(n);break}}},onMouseUp:function(t){var e=this;this.hasMouseDown&&3!==t.which&&this.isInteractive&&this.isAppendInner(t.target)&&this.$nextTick((function(){return e.isMenuActive=!e.isMenuActive})),E["a"].options.methods.onMouseUp.call(this,t)},onScroll:function(){var t=this;if(this.isMenuActive){if(this.lastItem>this.computedItems.length)return;var e=this.getContent().scrollHeight-(this.getContent().scrollTop+this.getContent().clientHeight)<200;e&&(this.lastItem+=20)}else requestAnimationFrame((function(){return t.getContent().scrollTop=0}))},onSpaceDown:function(t){t.preventDefault()},onTabDown:function(t){var e=this.$refs.menu;if(e){var n=e.activeTile;!this.multiple&&n&&this.isMenuActive?(t.preventDefault(),t.stopPropagation(),n.click()):this.blur(t)}},onUpDown:function(t){var e=this.$refs.menu;if(e){if(t.preventDefault(),this.multiple)return this.activateMenu();var n=t.keyCode;e.isBooted=!0,window.requestAnimationFrame((function(){switch(e.getTiles(),n){case p["t"].up:e.prevTile();break;case p["t"].down:e.nextTile();break;case p["t"].home:e.firstTile();break;case p["t"].end:e.lastTile();break}e.activeTile&&e.activeTile.click()}))}},selectItem:function(t){var e=this;if(this.multiple){var n=(this.internalValue||[]).slice(),l=this.findExistingIndex(t);if(-1!==l?n.splice(l,1):n.push(t),this.setValue(n.map((function(t){return e.returnObject?t:e.getValue(t)}))),this.$nextTick((function(){e.$refs.menu&&e.$refs.menu.updateDimensions()})),!this.multiple)return;var i=this.getMenuIndex();if(this.setMenuIndex(-1),this.hideSelected)return;this.$nextTick((function(){return e.setMenuIndex(i)}))}else this.setValue(this.returnObject?t:this.getValue(t)),this.isMenuActive=!1},setMenuIndex:function(t){this.$refs.menu&&(this.$refs.menu.listIndex=t)},setSelectedItems:function(){var t,e=this,n=[],i=this.multiple&&Array.isArray(this.internalValue)?this.internalValue:[this.internalValue],r=Object(l["a"])(i);try{var o=function(){var l=t.value,i=e.allItems.findIndex((function(t){return e.valueComparator(e.getValue(t),e.getValue(l))}));i>-1&&n.push(e.allItems[i])};for(r.s();!(t=r.n()).done;)o()}catch(u){r.e(u)}finally{r.f()}this.selectedItems=n},setValue:function(t){var e=this.internalValue;this.internalValue=t,t!==e&&this.$emit("change",t)},isAppendInner:function(t){var e=this.$refs["append-inner"];return e&&(e===t||e.contains(t))}}})},ba0d:function(t,e,n){"use strict";n("99af"),n("caad"),n("c975"),n("d81d"),n("a9e3"),n("b680"),n("d3b7"),n("25f0"),n("2532"),n("498a");var l=n("ade3"),i=n("5530"),r=(n("9e29"),n("c37a")),o=n("0789"),u=n("58df"),a=n("297c"),s=n("a293"),c=n("80d2"),h=n("d9bd");e["a"]=Object(u["a"])(r["a"],a["a"]).extend({name:"v-slider",directives:{ClickOutside:s["a"]},mixins:[a["a"]],props:{disabled:Boolean,inverseLabel:Boolean,max:{type:[Number,String],default:100},min:{type:[Number,String],default:0},step:{type:[Number,String],default:1},thumbColor:String,thumbLabel:{type:[Boolean,String],default:void 0,validator:function(t){return"boolean"===typeof t||"always"===t}},thumbSize:{type:[Number,String],default:32},tickLabels:{type:Array,default:function(){return[]}},ticks:{type:[Boolean,String],default:!1,validator:function(t){return"boolean"===typeof t||"always"===t}},tickSize:{type:[Number,String],default:2},trackColor:String,trackFillColor:String,value:[Number,String],vertical:Boolean},data:function(){return{app:null,oldValue:null,keyPressed:0,isFocused:!1,isActive:!1,noClick:!1}},computed:{classes:function(){return Object(i["a"])(Object(i["a"])({},r["a"].options.computed.classes.call(this)),{},{"v-input__slider":!0,"v-input__slider--vertical":this.vertical,"v-input__slider--inverse-label":this.inverseLabel})},internalValue:{get:function(){return this.lazyValue},set:function(t){t=isNaN(t)?this.minValue:t;var e=this.roundValue(Math.min(Math.max(t,this.minValue),this.maxValue));e!==this.lazyValue&&(this.lazyValue=e,this.$emit("input",e))}},trackTransition:function(){return this.keyPressed>=2?"none":""},minValue:function(){return parseFloat(this.min)},maxValue:function(){return parseFloat(this.max)},stepNumeric:function(){return this.step>0?parseFloat(this.step):0},inputWidth:function(){return(this.roundValue(this.internalValue)-this.minValue)/(this.maxValue-this.minValue)*100},trackFillStyles:function(){var t,e=this.vertical?"bottom":"left",n=this.vertical?"top":"right",i=this.vertical?"height":"width",r=this.$vuetify.rtl?"auto":"0",o=this.$vuetify.rtl?"0":"auto",u=this.isDisabled?"calc(".concat(this.inputWidth,"% - 10px)"):"".concat(this.inputWidth,"%");return t={transition:this.trackTransition},Object(l["a"])(t,e,r),Object(l["a"])(t,n,o),Object(l["a"])(t,i,u),t},trackStyles:function(){var t,e=this.vertical?this.$vuetify.rtl?"bottom":"top":this.$vuetify.rtl?"left":"right",n=this.vertical?"height":"width",i="0px",r=this.isDisabled?"calc(".concat(100-this.inputWidth,"% - 10px)"):"calc(".concat(100-this.inputWidth,"%)");return t={transition:this.trackTransition},Object(l["a"])(t,e,i),Object(l["a"])(t,n,r),t},showTicks:function(){return this.tickLabels.length>0||!(this.isDisabled||!this.stepNumeric||!this.ticks)},numTicks:function(){return Math.ceil((this.maxValue-this.minValue)/this.stepNumeric)},showThumbLabel:function(){return!this.isDisabled&&!(!this.thumbLabel&&!this.$scopedSlots["thumb-label"])},computedTrackColor:function(){if(!this.isDisabled)return this.trackColor?this.trackColor:this.isDark?this.validationState:this.validationState||"primary lighten-3"},computedTrackFillColor:function(){if(!this.isDisabled)return this.trackFillColor?this.trackFillColor:this.validationState||this.computedColor},computedThumbColor:function(){return this.thumbColor?this.thumbColor:this.validationState||this.computedColor}},watch:{min:function(t){var e=parseFloat(t);e>this.internalValue&&this.$emit("input",e)},max:function(t){var e=parseFloat(t);e<this.internalValue&&this.$emit("input",e)},value:{handler:function(t){this.internalValue=t}}},beforeMount:function(){this.internalValue=this.value},mounted:function(){this.app=document.querySelector("[data-app]")||Object(h["c"])("Missing v-app or a non-body wrapping element with the [data-app] attribute",this)},methods:{genDefaultSlot:function(){var t=[this.genLabel()],e=this.genSlider();return this.inverseLabel?t.unshift(e):t.push(e),t.push(this.genProgress()),t},genSlider:function(){return this.$createElement("div",{class:Object(i["a"])({"v-slider":!0,"v-slider--horizontal":!this.vertical,"v-slider--vertical":this.vertical,"v-slider--focused":this.isFocused,"v-slider--active":this.isActive,"v-slider--disabled":this.isDisabled,"v-slider--readonly":this.isReadonly},this.themeClasses),directives:[{name:"click-outside",value:this.onBlur}],on:{click:this.onSliderClick,mousedown:this.onSliderMouseDown}},this.genChildren())},genChildren:function(){return[this.genInput(),this.genTrackContainer(),this.genSteps(),this.genThumbContainer(this.internalValue,this.inputWidth,this.isActive,this.isFocused,this.onSliderMouseDown,this.onFocus,this.onBlur)]},genInput:function(){return this.$createElement("input",{attrs:Object(i["a"])({value:this.internalValue,id:this.computedId,disabled:!0,readonly:!0,tabindex:-1},this.$attrs)})},genTrackContainer:function(){var t=[this.$createElement("div",this.setBackgroundColor(this.computedTrackColor,{staticClass:"v-slider__track-background",style:this.trackStyles})),this.$createElement("div",this.setBackgroundColor(this.computedTrackFillColor,{staticClass:"v-slider__track-fill",style:this.trackFillStyles}))];return this.$createElement("div",{staticClass:"v-slider__track-container",ref:"track"},t)},genSteps:function(){var t=this;if(!this.step||!this.showTicks)return null;var e=parseFloat(this.tickSize),n=Object(c["g"])(this.numTicks+1),i=this.vertical?"bottom":this.$vuetify.rtl?"right":"left",r=this.vertical?this.$vuetify.rtl?"left":"right":"top";this.vertical&&n.reverse();var o=n.map((function(n){var o,u=[];t.tickLabels[n]&&u.push(t.$createElement("div",{staticClass:"v-slider__tick-label"},t.tickLabels[n]));var a=n*(100/t.numTicks),s=t.$vuetify.rtl?100-t.inputWidth<a:a<t.inputWidth;return t.$createElement("span",{key:n,staticClass:"v-slider__tick",class:{"v-slider__tick--filled":s},style:(o={width:"".concat(e,"px"),height:"".concat(e,"px")},Object(l["a"])(o,i,"calc(".concat(a,"% - ").concat(e/2,"px)")),Object(l["a"])(o,r,"calc(50% - ".concat(e/2,"px)")),o)},u)}));return this.$createElement("div",{staticClass:"v-slider__ticks-container",class:{"v-slider__ticks-container--always-show":"always"===this.ticks||this.tickLabels.length>0}},o)},genThumbContainer:function(t,e,n,l,r,o,u){var a=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"thumb",s=[this.genThumb()],c=this.genThumbLabelContent(t);return this.showThumbLabel&&s.push(this.genThumbLabel(c)),this.$createElement("div",this.setTextColor(this.computedThumbColor,{ref:a,key:a,staticClass:"v-slider__thumb-container",class:{"v-slider__thumb-container--active":n,"v-slider__thumb-container--focused":l,"v-slider__thumb-container--show-label":this.showThumbLabel},style:this.getThumbContainerStyles(e),attrs:Object(i["a"])({role:"slider",tabindex:this.isDisabled?-1:this.$attrs.tabindex?this.$attrs.tabindex:0,"aria-label":this.label,"aria-valuemin":this.min,"aria-valuemax":this.max,"aria-valuenow":this.internalValue,"aria-readonly":String(this.isReadonly),"aria-orientation":this.vertical?"vertical":"horizontal"},this.$attrs),on:{focus:o,blur:u,keydown:this.onKeyDown,keyup:this.onKeyUp,touchstart:r,mousedown:r}}),s)},genThumbLabelContent:function(t){return this.$scopedSlots["thumb-label"]?this.$scopedSlots["thumb-label"]({value:t}):[this.$createElement("span",[String(t)])]},genThumbLabel:function(t){var e=Object(c["f"])(this.thumbSize),n=this.vertical?"translateY(20%) translateY(".concat(Number(this.thumbSize)/3-1,"px) translateX(55%) rotate(135deg)"):"translateY(-20%) translateY(-12px) translateX(-50%) rotate(45deg)";return this.$createElement(o["e"],{props:{origin:"bottom center"}},[this.$createElement("div",{staticClass:"v-slider__thumb-label-container",directives:[{name:"show",value:this.isFocused||this.isActive||"always"===this.thumbLabel}]},[this.$createElement("div",this.setBackgroundColor(this.computedThumbColor,{staticClass:"v-slider__thumb-label",style:{height:e,width:e,transform:n}}),[this.$createElement("div",t)])])])},genThumb:function(){return this.$createElement("div",this.setBackgroundColor(this.computedThumbColor,{staticClass:"v-slider__thumb"}))},getThumbContainerStyles:function(t){var e=this.vertical?"top":"left",n=this.$vuetify.rtl?100-t:t;return n=this.vertical?100-n:n,Object(l["a"])({transition:this.trackTransition},e,"".concat(n,"%"))},onSliderMouseDown:function(t){t.preventDefault(),this.oldValue=this.internalValue,this.keyPressed=2,this.isActive=!0;var e=!c["x"]||{passive:!0,capture:!0},n=!!c["x"]&&{passive:!0};"touches"in t?(this.app.addEventListener("touchmove",this.onMouseMove,n),Object(c["a"])(this.app,"touchend",this.onSliderMouseUp,e)):(this.onMouseMove(t),this.app.addEventListener("mousemove",this.onMouseMove,n),Object(c["a"])(this.app,"mouseup",this.onSliderMouseUp,e)),this.$emit("start",this.internalValue)},onSliderMouseUp:function(t){t.stopPropagation(),this.keyPressed=0;var e=!!c["x"]&&{passive:!0};this.app.removeEventListener("touchmove",this.onMouseMove,e),this.app.removeEventListener("mousemove",this.onMouseMove,e),this.$emit("mouseup",t),this.$emit("end",this.internalValue),Object(c["i"])(this.oldValue,this.internalValue)||(this.$emit("change",this.internalValue),this.noClick=!0),this.isActive=!1},onMouseMove:function(t){var e=this.parseMouseMove(t),n=e.value;this.internalValue=n},onKeyDown:function(t){if(this.isInteractive){var e=this.parseKeyDown(t,this.internalValue);null==e||e<this.minValue||e>this.maxValue||(this.internalValue=e,this.$emit("change",e))}},onKeyUp:function(){this.keyPressed=0},onSliderClick:function(t){if(this.noClick)this.noClick=!1;else{var e=this.$refs.thumb;e.focus(),this.onMouseMove(t),this.$emit("change",this.internalValue)}},onBlur:function(t){this.isFocused=!1,this.$emit("blur",t)},onFocus:function(t){this.isFocused=!0,this.$emit("focus",t)},parseMouseMove:function(t){var e=this.vertical?"top":"left",n=this.vertical?"height":"width",l=this.vertical?"clientY":"clientX",i=this.$refs.track.getBoundingClientRect(),r=i[e],o=i[n],u="touches"in t?t.touches[0][l]:t[l],a=Math.min(Math.max((u-r)/o,0),1)||0;this.vertical&&(a=1-a),this.$vuetify.rtl&&(a=1-a);var s=u>=r&&u<=r+o,c=parseFloat(this.min)+a*(this.maxValue-this.minValue);return{value:c,isInsideTrack:s}},parseKeyDown:function(t,e){if(this.isInteractive){var n=c["t"].pageup,l=c["t"].pagedown,i=c["t"].end,r=c["t"].home,o=c["t"].left,u=c["t"].right,a=c["t"].down,s=c["t"].up;if([n,l,i,r,o,u,a,s].includes(t.keyCode)){t.preventDefault();var h=this.stepNumeric||1,d=(this.maxValue-this.minValue)/h;if([o,u,a,s].includes(t.keyCode)){this.keyPressed+=1;var f=this.$vuetify.rtl?[o,s]:[u,s],p=f.includes(t.keyCode)?1:-1,m=t.shiftKey?3:t.ctrlKey?2:1;e+=p*h*m}else if(t.keyCode===r)e=this.minValue;else if(t.keyCode===i)e=this.maxValue;else{var v=t.keyCode===l?1:-1;e-=v*h*(d>100?d/10:10)}return e}}},roundValue:function(t){if(!this.stepNumeric)return t;var e=this.step.toString().trim(),n=e.indexOf(".")>-1?e.length-e.indexOf(".")-1:0,l=this.minValue%this.stepNumeric,i=Math.round((t-l)/this.stepNumeric)*this.stepNumeric+l;return parseFloat(Math.min(i,this.maxValue).toFixed(n))}}})},ba87:function(t,e,n){"use strict";n("a9e3");var l=n("5530"),i=(n("1b2c"),n("a9ad")),r=n("7560"),o=n("58df"),u=n("80d2"),a=Object(o["a"])(r["a"]).extend({name:"v-label",functional:!0,props:{absolute:Boolean,color:{type:String,default:"primary"},disabled:Boolean,focused:Boolean,for:String,left:{type:[Number,String],default:0},right:{type:[Number,String],default:"auto"},value:Boolean},render:function(t,e){var n=e.children,o=e.listeners,a=e.props,s={staticClass:"v-label",class:Object(l["a"])({"v-label--active":a.value,"v-label--is-disabled":a.disabled},Object(r["b"])(e)),attrs:{for:a.for,"aria-hidden":!a.for},on:o,style:{left:Object(u["f"])(a.left),right:Object(u["f"])(a.right),position:a.absolute?"absolute":"relative"},ref:"label"};return t("label",i["a"].options.methods.setTextColor(a.focused&&a.color,s),n)}});e["a"]=a},bb2f:function(t,e,n){var l=n("d039");t.exports=!l((function(){return Object.isExtensible(Object.preventExtensions({}))}))},bd0c:function(t,e,n){},bd8c:function(t,e,n){!function(e,n){t.exports=n()}("undefined"!=typeof self&&self,(function(){return function(t){var e={};function n(l){if(e[l])return e[l].exports;var i=e[l]={i:l,l:!1,exports:{}};return t[l].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,l){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:l})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(l,i,function(e){return t[e]}.bind(null,i));return l},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){t.exports=n(1)},function(t,e,n){"use strict";n.r(e),n.d(e,"ShareNetwork",(function(){return r}));var l={baidu:"http://cang.baidu.com/do/add?iu=@u&it=@t",buffer:"https://bufferapp.com/add?text=@t&url=@u",email:"mailto:?subject=@t&body=@u%0D%0A@d",evernote:"https://www.evernote.com/clip.action?url=@u&title=@t",facebook:"https://www.facebook.com/sharer/sharer.php?u=@u&title=@t&description=@d&quote=@q&hashtag=@h",flipboard:"https://share.flipboard.com/bookmarklet/popout?v=2&url=@u&title=@t",hackernews:"https://news.ycombinator.com/submitlink?u=@u&t=@t",instapaper:"http://www.instapaper.com/edit?url=@u&title=@t&description=@d",line:"http://line.me/R/msg/text/?@t%0D%0A@u%0D%0A@d",linkedin:"https://www.linkedin.com/sharing/share-offsite/?url=@u",odnoklassniki:"https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&st.shareUrl=@u&st.comments=@t",pinterest:"https://pinterest.com/pin/create/button/?url=@u&media=@m&description=@t",pocket:"https://getpocket.com/save?url=@u&title=@t",quora:"https://www.quora.com/share?url=@u&title=@t",reddit:"https://www.reddit.com/submit?url=@u&title=@t",skype:"https://web.skype.com/share?url=@t%0D%0A@u%0D%0A@d",sms:"sms:?body=@t%0D%0A@u%0D%0A@d",stumbleupon:"https://www.stumbleupon.com/submit?url=@u&title=@t",telegram:"https://t.me/share/url?url=@u&text=@t%0D%0A@d",tumblr:"https://www.tumblr.com/share/link?url=@u&name=@t&description=@d",twitter:"https://twitter.com/intent/tweet?text=@t&url=@u&hashtags=@h@tu",viber:"viber://forward?text=@t%0D%0A@u%0D%0A@d",vk:"https://vk.com/share.php?url=@u&title=@t&description=@d&image=@m&noparse=true",weibo:"http://service.weibo.com/share/share.php?url=@u&title=@t&pic=@m",whatsapp:"https://api.whatsapp.com/send?text=@t%0D%0A@u%0D%0A@d",wordpress:"https://wordpress.com/press-this.php?u=@u&t=@t&s=@d&i=@m",xing:"https://www.xing.com/social/share/spi?op=share&url=@u&title=@t",yammer:"https://www.yammer.com/messages/new?login=true&status=@t%0D%0A@u%0D%0A@d"},i="undefined"!=typeof window?window:null,r={name:"ShareNetwork",props:{network:{type:String,required:!0},url:{type:String,required:!0},title:{type:String,required:!0},description:{type:String,default:""},quote:{type:String,default:""},hashtags:{type:String,default:""},twitterUser:{type:String,default:""},media:{type:String,default:""},tag:{type:String,default:"a"},popup:{type:Object,default:function(){return{width:626,height:436}}}},data:function(){return{popupTop:0,popupLeft:0,popupWindow:void 0,popupInterval:null}},computed:{networks:function(){return this.$SocialSharing?this.$SocialSharing.options.networks:l},key:function(){return this.network.toLowerCase()},rawLink:function(){var t=navigator.userAgent.toLowerCase();return"sms"===this.key&&(t.indexOf("iphone")>-1||t.indexOf("ipad")>-1)?this.networks[this.key].replace(":?",":&"):this.networks[this.key]},shareLink:function(){var t=this.rawLink;return"twitter"===this.key&&(this.hashtags.length||(t=t.replace("&hashtags=@h","")),this.twitterUser.length||(t=t.replace("@tu",""))),t.replace(/@tu/g,"&via="+encodeURIComponent(this.twitterUser)).replace(/@u/g,encodeURIComponent(this.url)).replace(/@t/g,encodeURIComponent(this.title)).replace(/@d/g,encodeURIComponent(this.description)).replace(/@q/g,encodeURIComponent(this.quote)).replace(/@h/g,this.encodedHashtags).replace(/@m/g,encodeURIComponent(this.media))},encodedHashtags:function(){return"facebook"===this.key&&this.hashtags.length?"%23"+this.hashtags.split(",")[0]:this.hashtags}},render:function(t){var e=this;if(!this.networks.hasOwnProperty(this.key))throw new Error("Network "+this.key+" does not exist");var n={class:"share-network-"+this.key,on:{click:function(){return e["http"===e.rawLink.substring(0,4)?"share":"touch"]()}}};return"a"===this.tag&&(n.attrs={href:"#"}),t(this.tag,n,this.$slots.default)},methods:{resizePopup:function(){var t=i.innerWidth||document.documentElement.clientWidth||i.screenX,e=i.innerHeight||document.documentElement.clientHeight||i.screenY,n=t/i.screen.availWidth;this.popupLeft=(t-this.popup.width)/2/n+(void 0!==i.screenLeft?i.screenLeft:i.screenX),this.popupTop=(e-this.popup.height)/2/n+(void 0!==i.screenTop?i.screenTop:i.screenY)},share:function(){var t=this;this.resizePopup(),this.popupWindow&&this.popupInterval&&(clearInterval(this.popupInterval),this.popupWindow.close(),this.emit("change")),this.popupWindow=i.open(this.shareLink,"sharer-"+this.key,",height="+this.popup.height+",width="+this.popup.width+",left="+this.popupLeft+",top="+this.popupTop+",screenX="+this.popupLeft+",screenY="+this.popupTop),this.popupWindow&&(this.popupWindow.focus(),this.popupInterval=setInterval((function(){t.popupWindow&&!t.popupWindow.closed||(clearInterval(t.popupInterval),t.popupWindow=null,t.emit("close"))}),500),this.emit("open"))},touch:function(){window.open(this.shareLink,"_blank"),this.emit("open")},emit:function(t){this.$root.$emit("share_network_"+t,this.key,this.url),this.$emit(t,this.key,this.url)}}};e.default={install:function(t,e){t.component(r.name,r),t.prototype.$SocialSharing={options:{networks:e&&e.hasOwnProperty("networks")?Object.assign(l,e.networks):l}}}}}])}))},bee2:function(t,e,n){"use strict";function l(t,e){for(var n=0;n<e.length;n++){var l=e[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(t,l.key,l)}}function i(t,e,n){return e&&l(t.prototype,e),n&&l(t,n),t}n.d(e,"a",(function(){return i}))},c04e:function(t,e,n){var l=n("861d");t.exports=function(t,e){if(!l(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!l(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!l(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!l(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},c1ac:function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").filter,r=n("4840"),o=l.aTypedArray,u=l.aTypedArrayConstructor,a=l.exportTypedArrayMethod;a("filter",(function(t){var e=i(o(this),t,arguments.length>1?arguments[1]:void 0),n=r(this,this.constructor),l=0,a=e.length,s=new(u(n))(a);while(a>l)s[l]=e[l++];return s}))},c37a:function(t,e,n){"use strict";n("99af"),n("4de4"),n("d81d"),n("a9e3"),n("ac1f"),n("1276");var l=n("5530"),i=(n("d191"),n("9d26")),r=n("ba87"),o=(n("8ff2"),n("a9ad")),u=n("7560"),a=n("58df"),s=n("80d2"),c=Object(a["a"])(o["a"],u["a"]).extend({name:"v-messages",props:{value:{type:Array,default:function(){return[]}}},methods:{genChildren:function(){return this.$createElement("transition-group",{staticClass:"v-messages__wrapper",attrs:{name:"message-transition",tag:"div"}},this.value.map(this.genMessage))},genMessage:function(t,e){return this.$createElement("div",{staticClass:"v-messages__message",key:e},Object(s["o"])(this,"default",{message:t,key:e})||[t])}},render:function(t){return t("div",this.setTextColor(this.color,{staticClass:"v-messages",class:this.themeClasses}),[this.genChildren()])}}),h=c,d=n("7e2b"),f=n("38cb"),p=n("d9f7"),m=Object(a["a"])(d["a"],f["a"]),v=m.extend().extend({name:"v-input",inheritAttrs:!1,props:{appendIcon:String,backgroundColor:{type:String,default:""},dense:Boolean,height:[Number,String],hideDetails:[Boolean,String],hint:String,id:String,label:String,loading:Boolean,persistentHint:Boolean,prependIcon:String,value:null},data:function(){return{lazyValue:this.value,hasMouseDown:!1}},computed:{classes:function(){return Object(l["a"])({"v-input--has-state":this.hasState,"v-input--hide-details":!this.showDetails,"v-input--is-label-active":this.isLabelActive,"v-input--is-dirty":this.isDirty,"v-input--is-disabled":this.isDisabled,"v-input--is-focused":this.isFocused,"v-input--is-loading":!1!==this.loading&&null!=this.loading,"v-input--is-readonly":this.isReadonly,"v-input--dense":this.dense},this.themeClasses)},computedId:function(){return this.id||"input-".concat(this._uid)},hasDetails:function(){return this.messagesToDisplay.length>0},hasHint:function(){return!this.hasMessages&&!!this.hint&&(this.persistentHint||this.isFocused)},hasLabel:function(){return!(!this.$slots.label&&!this.label)},internalValue:{get:function(){return this.lazyValue},set:function(t){this.lazyValue=t,this.$emit(this.$_modelEvent,t)}},isDirty:function(){return!!this.lazyValue},isLabelActive:function(){return this.isDirty},messagesToDisplay:function(){var t=this;return this.hasHint?[this.hint]:this.hasMessages?this.validations.map((function(e){if("string"===typeof e)return e;var n=e(t.internalValue);return"string"===typeof n?n:""})).filter((function(t){return""!==t})):[]},showDetails:function(){return!1===this.hideDetails||"auto"===this.hideDetails&&this.hasDetails}},watch:{value:function(t){this.lazyValue=t}},beforeCreate:function(){this.$_modelEvent=this.$options.model&&this.$options.model.event||"input"},methods:{genContent:function(){return[this.genPrependSlot(),this.genControl(),this.genAppendSlot()]},genControl:function(){return this.$createElement("div",{staticClass:"v-input__control"},[this.genInputSlot(),this.genMessages()])},genDefaultSlot:function(){return[this.genLabel(),this.$slots.default]},genIcon:function(t,e){var n=this,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=this["".concat(t,"Icon")],o="click:".concat(Object(s["s"])(t)),u=!(!this.listeners$[o]&&!e),a=Object(p["a"])({attrs:{"aria-label":u?Object(s["s"])(t).split("-")[0]+" icon":void 0,color:this.validationState,dark:this.dark,disabled:this.isDisabled,light:this.light},on:u?{click:function(t){t.preventDefault(),t.stopPropagation(),n.$emit(o,t),e&&e(t)},mouseup:function(t){t.preventDefault(),t.stopPropagation()}}:void 0},l);return this.$createElement("div",{staticClass:"v-input__icon",class:t?"v-input__icon--".concat(Object(s["s"])(t)):void 0},[this.$createElement(i["a"],a,r)])},genInputSlot:function(){return this.$createElement("div",this.setBackgroundColor(this.backgroundColor,{staticClass:"v-input__slot",style:{height:Object(s["f"])(this.height)},on:{click:this.onClick,mousedown:this.onMouseDown,mouseup:this.onMouseUp},ref:"input-slot"}),[this.genDefaultSlot()])},genLabel:function(){return this.hasLabel?this.$createElement(r["a"],{props:{color:this.validationState,dark:this.dark,disabled:this.isDisabled,focused:this.hasState,for:this.computedId,light:this.light}},this.$slots.label||this.label):null},genMessages:function(){var t=this;return this.showDetails?this.$createElement(h,{props:{color:this.hasHint?"":this.validationState,dark:this.dark,light:this.light,value:this.messagesToDisplay},attrs:{role:this.hasMessages?"alert":null},scopedSlots:{default:function(e){return Object(s["o"])(t,"message",e)}}}):null},genSlot:function(t,e,n){if(!n.length)return null;var l="".concat(t,"-").concat(e);return this.$createElement("div",{staticClass:"v-input__".concat(l),ref:l},n)},genPrependSlot:function(){var t=[];return this.$slots.prepend?t.push(this.$slots.prepend):this.prependIcon&&t.push(this.genIcon("prepend")),this.genSlot("prepend","outer",t)},genAppendSlot:function(){var t=[];return this.$slots.append?t.push(this.$slots.append):this.appendIcon&&t.push(this.genIcon("append")),this.genSlot("append","outer",t)},onClick:function(t){this.$emit("click",t)},onMouseDown:function(t){this.hasMouseDown=!0,this.$emit("mousedown",t)},onMouseUp:function(t){this.hasMouseDown=!1,this.$emit("mouseup",t)}},render:function(t){return t("div",this.setTextColor(this.validationState,{staticClass:"v-input",class:this.classes}),this.genContent())}});e["a"]=v},c430:function(t,e){t.exports=!1},c6b6:function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},c6cd:function(t,e,n){var l=n("da84"),i=n("ce4e"),r="__core-js_shared__",o=l[r]||i(r,{});t.exports=o},c740:function(t,e,n){"use strict";var l=n("23e7"),i=n("b727").findIndex,r=n("44d2"),o=n("ae40"),u="findIndex",a=!0,s=o(u);u in[]&&Array(1)[u]((function(){a=!1})),l({target:"Array",proto:!0,forced:a||!s},{findIndex:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),r(u)},c7cd:function(t,e,n){"use strict";var l=n("23e7"),i=n("857a"),r=n("af03");l({target:"String",proto:!0,forced:r("fixed")},{fixed:function(){return i(this,"tt","","")}})},c8ba:function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(l){"object"===typeof window&&(n=window)}t.exports=n},c8d2:function(t,e,n){var l=n("d039"),i=n("5899"),r="​᠎";t.exports=function(t){return l((function(){return!!i[t]()||r[t]()!=r||i[t].name!==t}))}},c96a:function(t,e,n){"use strict";var l=n("23e7"),i=n("857a"),r=n("af03");l({target:"String",proto:!0,forced:r("small")},{small:function(){return i(this,"small","","")}})},c975:function(t,e,n){"use strict";var l=n("23e7"),i=n("4d64").indexOf,r=n("a640"),o=n("ae40"),u=[].indexOf,a=!!u&&1/[1].indexOf(1,-0)<0,s=r("indexOf"),c=o("indexOf",{ACCESSORS:!0,1:0});l({target:"Array",proto:!0,forced:a||!s||!c},{indexOf:function(t){return a?u.apply(this,arguments)||0:i(this,t,arguments.length>1?arguments[1]:void 0)}})},c995:function(t,e,n){"use strict";n("a9e3");var l=n("ade3"),i=n("2b0e");e["a"]=i["a"].extend({name:"elevatable",props:{elevation:[Number,String]},computed:{computedElevation:function(){return this.elevation},elevationClasses:function(){var t=this.computedElevation;return null==t||isNaN(parseInt(t))?{}:Object(l["a"])({},"elevation-".concat(this.elevation),!0)}}})},ca71:function(t,e,n){},ca84:function(t,e,n){var l=n("5135"),i=n("fc6a"),r=n("4d64").indexOf,o=n("d012");t.exports=function(t,e){var n,u=i(t),a=0,s=[];for(n in u)!l(o,n)&&l(u,n)&&s.push(n);while(e.length>a)l(u,n=e[a++])&&(~r(s,n)||s.push(n));return s}},ca91:function(t,e,n){"use strict";var l=n("ebb5"),i=n("d58f").left,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("reduce",(function(t){return i(r(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)}))},caad:function(t,e,n){"use strict";var l=n("23e7"),i=n("4d64").includes,r=n("44d2"),o=n("ae40"),u=o("indexOf",{ACCESSORS:!0,1:0});l({target:"Array",proto:!0,forced:!u},{includes:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),r("includes")},cb29:function(t,e,n){var l=n("23e7"),i=n("81d5"),r=n("44d2");l({target:"Array",proto:!0},{fill:i}),r("fill")},cc12:function(t,e,n){var l=n("da84"),i=n("861d"),r=l.document,o=i(r)&&i(r.createElement);t.exports=function(t){return o?r.createElement(t):{}}},cc20:function(t,e,n){"use strict";n("4de4"),n("4160");var l=n("3835"),i=n("5530"),r=(n("8adc"),n("58df")),o=n("0789"),u=n("9d26"),a=n("a9ad"),s=n("4e82"),c=n("7560"),h=n("f2e7"),d=n("1c87"),f=n("af2b"),p=n("d9bd");e["a"]=Object(r["a"])(a["a"],f["a"],d["a"],c["a"],Object(s["a"])("chipGroup"),Object(h["b"])("inputValue")).extend({name:"v-chip",props:{active:{type:Boolean,default:!0},activeClass:{type:String,default:function(){return this.chipGroup?this.chipGroup.activeClass:""}},close:Boolean,closeIcon:{type:String,default:"$delete"},closeLabel:{type:String,default:"$vuetify.close"},disabled:Boolean,draggable:Boolean,filter:Boolean,filterIcon:{type:String,default:"$complete"},label:Boolean,link:Boolean,outlined:Boolean,pill:Boolean,tag:{type:String,default:"span"},textColor:String,value:null},data:function(){return{proxyClass:"v-chip--active"}},computed:{classes:function(){return Object(i["a"])(Object(i["a"])(Object(i["a"])(Object(i["a"])({"v-chip":!0},d["a"].options.computed.classes.call(this)),{},{"v-chip--clickable":this.isClickable,"v-chip--disabled":this.disabled,"v-chip--draggable":this.draggable,"v-chip--label":this.label,"v-chip--link":this.isLink,"v-chip--no-color":!this.color,"v-chip--outlined":this.outlined,"v-chip--pill":this.pill,"v-chip--removable":this.hasClose},this.themeClasses),this.sizeableClasses),this.groupClasses)},hasClose:function(){return Boolean(this.close)},isClickable:function(){return Boolean(d["a"].options.computed.isClickable.call(this)||this.chipGroup)}},created:function(){var t=this,e=[["outline","outlined"],["selected","input-value"],["value","active"],["@input","@active.sync"]];e.forEach((function(e){var n=Object(l["a"])(e,2),i=n[0],r=n[1];t.$attrs.hasOwnProperty(i)&&Object(p["a"])(i,r,t)}))},methods:{click:function(t){this.$emit("click",t),this.chipGroup&&this.toggle()},genFilter:function(){var t=[];return this.isActive&&t.push(this.$createElement(u["a"],{staticClass:"v-chip__filter",props:{left:!0}},this.filterIcon)),this.$createElement(o["b"],t)},genClose:function(){var t=this;return this.$createElement(u["a"],{staticClass:"v-chip__close",props:{right:!0,size:18},attrs:{"aria-label":this.$vuetify.lang.t(this.closeLabel)},on:{click:function(e){e.stopPropagation(),e.preventDefault(),t.$emit("click:close"),t.$emit("update:active",!1)}}},this.closeIcon)},genContent:function(){return this.$createElement("span",{staticClass:"v-chip__content"},[this.filter&&this.genFilter(),this.$slots.default,this.hasClose&&this.genClose()])}},render:function(t){var e=[this.genContent()],n=this.generateRouteLink(),l=n.tag,r=n.data;r.attrs=Object(i["a"])(Object(i["a"])({},r.attrs),{},{draggable:this.draggable?"true":void 0,tabindex:this.chipGroup&&!this.disabled?0:r.attrs.tabindex}),r.directives.push({name:"show",value:this.active}),r=this.setBackgroundColor(this.color,r);var o=this.textColor||this.outlined&&this.color;return t(l,this.setTextColor(o,r),e)}})},cca6:function(t,e,n){var l=n("23e7"),i=n("60da");l({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},cd26:function(t,e,n){"use strict";var l=n("ebb5"),i=l.aTypedArray,r=l.exportTypedArrayMethod,o=Math.floor;r("reverse",(function(){var t,e=this,n=i(e).length,l=o(n/2),r=0;while(r<l)t=e[r],e[r++]=e[--n],e[n]=t;return e}))},cdf9:function(t,e,n){var l=n("825a"),i=n("861d"),r=n("f069");t.exports=function(t,e){if(l(t),i(e)&&e.constructor===t)return e;var n=r.f(t),o=n.resolve;return o(e),n.promise}},ce4e:function(t,e,n){var l=n("da84"),i=n("9112");t.exports=function(t,e){try{i(l,t,e)}catch(n){l[t]=e}return e}},cf36:function(t,e,n){},d012:function(t,e){t.exports={}},d039:function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},d066:function(t,e,n){var l=n("428f"),i=n("da84"),r=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?r(l[t])||r(i[t]):l[t]&&l[t][e]||i[t]&&i[t][e]}},d139:function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").find,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("find",(function(t){return i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},d191:function(t,e,n){},d1e7:function(t,e,n){"use strict";var l={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,r=i&&!l.call({1:2},1);e.f=r?function(t){var e=i(this,t);return!!e&&e.enumerable}:l},d28b:function(t,e,n){var l=n("746f");l("iterator")},d2bb:function(t,e,n){var l=n("825a"),i=n("3bbe");t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set,t.call(n,[]),e=n instanceof Array}catch(r){}return function(n,r){return l(n),i(r),e?t.call(n,r):n.__proto__=r,n}}():void 0)},d3b7:function(t,e,n){var l=n("00ee"),i=n("6eeb"),r=n("b041");l||i(Object.prototype,"toString",r,{unsafe:!0})},d44e:function(t,e,n){var l=n("9bf2").f,i=n("5135"),r=n("b622"),o=r("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,o)&&l(t,o,{configurable:!0,value:e})}},d4ec:function(t,e,n){"use strict";function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}n.d(e,"a",(function(){return l}))},d58f:function(t,e,n){var l=n("1c0b"),i=n("7b0b"),r=n("44ad"),o=n("50c4"),u=function(t){return function(e,n,u,a){l(n);var s=i(e),c=r(s),h=o(s.length),d=t?h-1:0,f=t?-1:1;if(u<2)while(1){if(d in c){a=c[d],d+=f;break}if(d+=f,t?d<0:h<=d)throw TypeError("Reduce of empty array with no initial value")}for(;t?d>=0:h>d;d+=f)d in c&&(a=n(a,c[d],d,s));return a}};t.exports={left:u(!1),right:u(!0)}},d5d6:function(t,e,n){"use strict";var l=n("ebb5"),i=n("b727").forEach,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("forEach",(function(t){i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},d784:function(t,e,n){"use strict";n("ac1f");var l=n("6eeb"),i=n("d039"),r=n("b622"),o=n("9263"),u=n("9112"),a=r("species"),s=!i((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),c=function(){return"$0"==="a".replace(/./,"$0")}(),h=r("replace"),d=function(){return!!/./[h]&&""===/./[h]("a","$0")}(),f=!i((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));t.exports=function(t,e,n,h){var p=r(t),m=!i((function(){var e={};return e[p]=function(){return 7},7!=""[t](e)})),v=m&&!i((function(){var e=!1,n=/a/;return"split"===t&&(n={},n.constructor={},n.constructor[a]=function(){return n},n.flags="",n[p]=/./[p]),n.exec=function(){return e=!0,null},n[p](""),!e}));if(!m||!v||"replace"===t&&(!s||!c||d)||"split"===t&&!f){var g=/./[p],y=n(p,""[t],(function(t,e,n,l,i){return e.exec===o?m&&!i?{done:!0,value:g.call(e,n,l)}:{done:!0,value:t.call(n,e,l)}:{done:!1}}),{REPLACE_KEEPS_$0:c,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),b=y[0],x=y[1];l(String.prototype,t,b),l(RegExp.prototype,p,2==e?function(t,e){return x.call(t,this,e)}:function(t){return x.call(t,this)})}h&&u(RegExp.prototype[p],"sham",!0)}},d81d:function(t,e,n){"use strict";var l=n("23e7"),i=n("b727").map,r=n("1dde"),o=n("ae40"),u=r("map"),a=o("map");l({target:"Array",proto:!0,forced:!u||!a},{map:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},d9bd:function(t,e,n){"use strict";n.d(e,"c",(function(){return r})),n.d(e,"b",(function(){return o})),n.d(e,"d",(function(){return u})),n.d(e,"a",(function(){return a})),n.d(e,"e",(function(){return s}));n("99af"),n("caad"),n("a15b"),n("d81d"),n("b0c0"),n("ac1f"),n("2532"),n("466d"),n("38cf"),n("5319");var l=n("f309");function i(t,e,n){if(!l["a"].config.silent){if(n&&(e={_isVue:!0,$parent:n,$options:e}),e){if(e.$_alreadyWarned=e.$_alreadyWarned||[],e.$_alreadyWarned.includes(t))return;e.$_alreadyWarned.push(t)}return"[Vuetify] ".concat(t)+(e?f(e):"")}}function r(t,e,n){var l=i(t,e,n);null!=l&&console.warn(l)}function o(t,e,n){var l=i(t,e,n);null!=l&&console.error(l)}function u(t,e,n,l){r("[UPGRADE] '".concat(t,"' is deprecated, use '").concat(e,"' instead."),n,l)}function a(t,e,n,l){o("[BREAKING] '".concat(t,"' has been removed, use '").concat(e,"' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide"),n,l)}function s(t,e,n){r("[REMOVED] '".concat(t,"' has been removed. You can safely omit it."),e,n)}var c=/(?:^|[-_])(\w)/g,h=function(t){return t.replace(c,(function(t){return t.toUpperCase()})).replace(/[-_]/g,"")};function d(t,e){if(t.$root===t)return"<Root>";var n="function"===typeof t&&null!=t.cid?t.options:t._isVue?t.$options||t.constructor.options:t||{},l=n.name||n._componentTag,i=n.__file;if(!l&&i){var r=i.match(/([^/\\]+)\.vue$/);l=r&&r[1]}return(l?"<".concat(h(l),">"):"<Anonymous>")+(i&&!1!==e?" at ".concat(i):"")}function f(t){if(t._isVue&&t.$parent){var e=[],n=0;while(t){if(e.length>0){var l=e[e.length-1];if(l.constructor===t.constructor){n++,t=t.$parent;continue}n>0&&(e[e.length-1]=[l,n],n=0)}e.push(t),t=t.$parent}return"\n\nfound in\n\n"+e.map((function(t,e){return"".concat(0===e?"---\x3e ":" ".repeat(5+2*e)).concat(Array.isArray(t)?"".concat(d(t[0]),"... (").concat(t[1]," recursive calls)"):d(t))})).join("\n")}return"\n\n(found in ".concat(d(t),")")}},d9f7:function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return d}));n("99af"),n("b64b"),n("ac1f"),n("1276"),n("498a");var l=n("5530"),i=n("3835"),r=n("b85c"),o=n("80d2"),u={styleList:/;(?![^(]*\))/g,styleProp:/:(.*)/};function a(t){var e,n={},l=Object(r["a"])(t.split(u.styleList));try{for(l.s();!(e=l.n()).done;){var a=e.value,s=a.split(u.styleProp),c=Object(i["a"])(s,2),h=c[0],d=c[1];h=h.trim(),h&&("string"===typeof d&&(d=d.trim()),n[Object(o["c"])(h)]=d)}}catch(f){l.e(f)}finally{l.f()}return n}function s(){var t,e={},n=arguments.length;while(n--)for(var i=0,r=Object.keys(arguments[n]);i<r.length;i++)switch(t=r[i],t){case"class":case"directives":arguments[n][t]&&(e[t]=h(e[t],arguments[n][t]));break;case"style":arguments[n][t]&&(e[t]=c(e[t],arguments[n][t]));break;case"staticClass":if(!arguments[n][t])break;void 0===e[t]&&(e[t]=""),e[t]&&(e[t]+=" "),e[t]+=arguments[n][t].trim();break;case"on":case"nativeOn":arguments[n][t]&&(e[t]=d(e[t],arguments[n][t]));break;case"attrs":case"props":case"domProps":case"scopedSlots":case"staticStyle":case"hook":case"transition":if(!arguments[n][t])break;e[t]||(e[t]={}),e[t]=Object(l["a"])(Object(l["a"])({},arguments[n][t]),e[t]);break;default:e[t]||(e[t]=arguments[n][t])}return e}function c(t,e){return t?e?(t=Object(o["A"])("string"===typeof t?a(t):t),t.concat("string"===typeof e?a(e):e)):t:e}function h(t,e){return e?t&&t?Object(o["A"])(t).concat(e):e:t}function d(){if(!(arguments.length<=0?void 0:arguments[0]))return arguments.length<=1?void 0:arguments[1];if(!(arguments.length<=1?void 0:arguments[1]))return arguments.length<=0?void 0:arguments[0];for(var t={},e=2;e--;){var n=e<0||arguments.length<=e?void 0:arguments[e];for(var l in n)n[l]&&(t[l]?t[l]=[].concat(n[l],t[l]):t[l]=n[l])}return t}},da13:function(t,e,n){"use strict";var l=n("5530"),i=(n("61d2"),n("a9ad")),r=n("1c87"),o=n("4e82"),u=n("7560"),a=n("f2e7"),s=n("5607"),c=n("80d2"),h=n("d9bd"),d=n("58df"),f=Object(d["a"])(i["a"],r["a"],u["a"],Object(o["a"])("listItemGroup"),Object(a["b"])("inputValue"));e["a"]=f.extend().extend({name:"v-list-item",directives:{Ripple:s["a"]},inject:{isInGroup:{default:!1},isInList:{default:!1},isInMenu:{default:!1},isInNav:{default:!1}},inheritAttrs:!1,props:{activeClass:{type:String,default:function(){return this.listItemGroup?this.listItemGroup.activeClass:""}},dense:Boolean,inactive:Boolean,link:Boolean,selectable:{type:Boolean},tag:{type:String,default:"div"},threeLine:Boolean,twoLine:Boolean,value:null},data:function(){return{proxyClass:"v-list-item--active"}},computed:{classes:function(){return Object(l["a"])(Object(l["a"])({"v-list-item":!0},r["a"].options.computed.classes.call(this)),{},{"v-list-item--dense":this.dense,"v-list-item--disabled":this.disabled,"v-list-item--link":this.isClickable&&!this.inactive,"v-list-item--selectable":this.selectable,"v-list-item--three-line":this.threeLine,"v-list-item--two-line":this.twoLine},this.themeClasses)},isClickable:function(){return Boolean(r["a"].options.computed.isClickable.call(this)||this.listItemGroup)}},created:function(){this.$attrs.hasOwnProperty("avatar")&&Object(h["e"])("avatar",this)},methods:{click:function(t){t.detail&&this.$el.blur(),this.$emit("click",t),this.to||this.toggle()},genAttrs:function(){var t=Object(l["a"])({"aria-disabled":!!this.disabled||void 0,tabindex:this.isClickable&&!this.disabled?0:-1},this.$attrs);return this.$attrs.hasOwnProperty("role")||this.isInNav||(this.isInGroup?(t.role="listitem",t["aria-selected"]=String(this.isActive)):this.isInMenu?(t.role=this.isClickable?"menuitem":void 0,t.id=t.id||"list-item-".concat(this._uid)):this.isInList&&(t.role="listitem")),t}},render:function(t){var e=this,n=this.generateRouteLink(),i=n.tag,r=n.data;r.attrs=Object(l["a"])(Object(l["a"])({},r.attrs),this.genAttrs()),r[this.to?"nativeOn":"on"]=Object(l["a"])(Object(l["a"])({},r[this.to?"nativeOn":"on"]),{},{keydown:function(t){t.keyCode===c["t"].enter&&e.click(t),e.$emit("keydown",t)}}),this.inactive&&(i="div"),this.inactive&&this.to&&(r.on=r.nativeOn,delete r.nativeOn);var o=this.$scopedSlots.default?this.$scopedSlots.default({active:this.isActive,toggle:this.toggle}):this.$slots.default;return t(i,this.setTextColor(this.color,r),o)}})},da84:function(t,e,n){(function(e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e&&e)||function(){return this}()||Function("return this")()}).call(this,n("c8ba"))},db42:function(t,e,n){},dbb4:function(t,e,n){var l=n("23e7"),i=n("83ab"),r=n("56ef"),o=n("fc6a"),u=n("06cf"),a=n("8418");l({target:"Object",stat:!0,sham:!i},{getOwnPropertyDescriptors:function(t){var e,n,l=o(t),i=u.f,s=r(l),c={},h=0;while(s.length>h)n=i(l,e=s[h++]),void 0!==n&&a(c,e,n);return c}})},dc22:function(t,e,n){"use strict";function l(t,e){var n=e.value,l=e.options||{passive:!0};window.addEventListener("resize",n,l),t._onResize={callback:n,options:l},e.modifiers&&e.modifiers.quiet||n()}function i(t){if(t._onResize){var e=t._onResize,n=e.callback,l=e.options;window.removeEventListener("resize",n,l),delete t._onResize}}var r={inserted:l,unbind:i};e["a"]=r},dca8:function(t,e,n){var l=n("23e7"),i=n("bb2f"),r=n("d039"),o=n("861d"),u=n("f183").onFreeze,a=Object.freeze,s=r((function(){a(1)}));l({target:"Object",stat:!0,forced:s,sham:!i},{freeze:function(t){return a&&o(t)?a(u(t)):t}})},ddb0:function(t,e,n){var l=n("da84"),i=n("fdbc"),r=n("e260"),o=n("9112"),u=n("b622"),a=u("iterator"),s=u("toStringTag"),c=r.values;for(var h in i){var d=l[h],f=d&&d.prototype;if(f){if(f[a]!==c)try{o(f,a,c)}catch(m){f[a]=c}if(f[s]||o(f,s,h),i[h])for(var p in r)if(f[p]!==r[p])try{o(f,p,r[p])}catch(m){f[p]=r[p]}}}},df75:function(t,e,n){var l=n("ca84"),i=n("7839");t.exports=Object.keys||function(t){return l(t,i)}},df7c:function(t,e,n){(function(t){function n(t,e){for(var n=0,l=t.length-1;l>=0;l--){var i=t[l];"."===i?t.splice(l,1):".."===i?(t.splice(l,1),n++):n&&(t.splice(l,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function l(t){"string"!==typeof t&&(t+="");var e,n=0,l=-1,i=!0;for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!i){n=e+1;break}}else-1===l&&(i=!1,l=e+1);return-1===l?"":t.slice(n,l)}function i(t,e){if(t.filter)return t.filter(e);for(var n=[],l=0;l<t.length;l++)e(t[l],l,t)&&n.push(t[l]);return n}e.resolve=function(){for(var e="",l=!1,r=arguments.length-1;r>=-1&&!l;r--){var o=r>=0?arguments[r]:t.cwd();if("string"!==typeof o)throw new TypeError("Arguments to path.resolve must be strings");o&&(e=o+"/"+e,l="/"===o.charAt(0))}return e=n(i(e.split("/"),(function(t){return!!t})),!l).join("/"),(l?"/":"")+e||"."},e.normalize=function(t){var l=e.isAbsolute(t),o="/"===r(t,-1);return t=n(i(t.split("/"),(function(t){return!!t})),!l).join("/"),t||l||(t="."),t&&o&&(t+="/"),(l?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(i(t,(function(t,e){if("string"!==typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))},e.relative=function(t,n){function l(t){for(var e=0;e<t.length;e++)if(""!==t[e])break;for(var n=t.length-1;n>=0;n--)if(""!==t[n])break;return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var i=l(t.split("/")),r=l(n.split("/")),o=Math.min(i.length,r.length),u=o,a=0;a<o;a++)if(i[a]!==r[a]){u=a;break}var s=[];for(a=u;a<i.length;a++)s.push("..");return s=s.concat(r.slice(u)),s.join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){if("string"!==typeof t&&(t+=""),0===t.length)return".";for(var e=t.charCodeAt(0),n=47===e,l=-1,i=!0,r=t.length-1;r>=1;--r)if(e=t.charCodeAt(r),47===e){if(!i){l=r;break}}else i=!1;return-1===l?n?"/":".":n&&1===l?"/":t.slice(0,l)},e.basename=function(t,e){var n=l(t);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){"string"!==typeof t&&(t+="");for(var e=-1,n=0,l=-1,i=!0,r=0,o=t.length-1;o>=0;--o){var u=t.charCodeAt(o);if(47!==u)-1===l&&(i=!1,l=o+1),46===u?-1===e?e=o:1!==r&&(r=1):-1!==e&&(r=-1);else if(!i){n=o+1;break}}return-1===e||-1===l||0===r||1===r&&e===l-1&&e===n+1?"":t.slice(e,l)};var r="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(this,n("4362"))},df86:function(t,e,n){},e01a:function(t,e,n){"use strict";var l=n("23e7"),i=n("83ab"),r=n("da84"),o=n("5135"),u=n("861d"),a=n("9bf2").f,s=n("e893"),c=r.Symbol;if(i&&"function"==typeof c&&(!("description"in c.prototype)||void 0!==c().description)){var h={},d=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new c(t):void 0===t?c():c(t);return""===t&&(h[e]=!0),e};s(d,c);var f=d.prototype=c.prototype;f.constructor=d;var p=f.toString,m="Symbol(test)"==String(c("test")),v=/^Symbol\((.*)\)[^)]+$/;a(f,"description",{configurable:!0,get:function(){var t=u(this)?this.valueOf():this,e=p.call(t);if(o(h,t))return"";var n=m?e.slice(7,-1):e.replace(v,"$1");return""===n?void 0:n}}),l({global:!0,forced:!0},{Symbol:d})}},e0c7:function(t,e,n){"use strict";var l=n("5530"),i=(n("0bc6"),n("7560")),r=n("58df");e["a"]=Object(r["a"])(i["a"]).extend({name:"v-subheader",props:{inset:Boolean},render:function(t){return t("div",{staticClass:"v-subheader",class:Object(l["a"])({"v-subheader--inset":this.inset},this.themeClasses),attrs:this.$attrs,on:this.$listeners},this.$slots.default)}})},e163:function(t,e,n){var l=n("5135"),i=n("7b0b"),r=n("f772"),o=n("e177"),u=r("IE_PROTO"),a=Object.prototype;t.exports=o?Object.getPrototypeOf:function(t){return t=i(t),l(t,u)?t[u]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},e177:function(t,e,n){var l=n("d039");t.exports=!l((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},e260:function(t,e,n){"use strict";var l=n("fc6a"),i=n("44d2"),r=n("3f8c"),o=n("69f3"),u=n("7dd0"),a="Array Iterator",s=o.set,c=o.getterFor(a);t.exports=u(Array,"Array",(function(t,e){s(this,{type:a,target:l(t),index:0,kind:e})}),(function(){var t=c(this),e=t.target,n=t.kind,l=t.index++;return!e||l>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:l,done:!1}:"values"==n?{value:e[l],done:!1}:{value:[l,e[l]],done:!1}}),"values"),r.Arguments=r.Array,i("keys"),i("values"),i("entries")},e2cc:function(t,e,n){var l=n("6eeb");t.exports=function(t,e,n){for(var i in e)l(t,i,e[i],n);return t}},e439:function(t,e,n){var l=n("23e7"),i=n("d039"),r=n("fc6a"),o=n("06cf").f,u=n("83ab"),a=i((function(){o(1)})),s=!u||a;l({target:"Object",stat:!0,forced:s,sham:!u},{getOwnPropertyDescriptor:function(t,e){return o(r(t),e)}})},e449:function(t,e,n){"use strict";n("99af"),n("7db0"),n("a630"),n("caad"),n("c975"),n("a9e3"),n("2532"),n("3ca3"),n("498a");var l=n("ade3"),i=n("2909"),r=n("5530"),o=(n("ee6f"),n("480e")),u=n("4ad4"),a=n("16b7"),s=n("b848"),c=n("75eb"),h=n("f573"),d=n("e4d3"),f=n("a236"),p=n("f2e7"),m=n("7560"),v=n("a293"),g=n("dc22"),y=n("58df"),b=n("d9bd"),x=n("80d2"),w=Object(y["a"])(s["a"],a["a"],c["a"],h["a"],d["a"],f["a"],p["a"],m["a"]);e["a"]=w.extend({name:"v-menu",directives:{ClickOutside:v["a"],Resize:g["a"]},provide:function(){return{isInMenu:!0,theme:this.theme}},props:{auto:Boolean,closeOnClick:{type:Boolean,default:!0},closeOnContentClick:{type:Boolean,default:!0},disabled:Boolean,disableKeys:Boolean,maxHeight:{type:[Number,String],default:"auto"},offsetX:Boolean,offsetY:Boolean,openOnClick:{type:Boolean,default:!0},openOnHover:Boolean,origin:{type:String,default:"top left"},transition:{type:[Boolean,String],default:"v-menu-transition"}},data:function(){return{calculatedTopAuto:0,defaultOffset:8,hasJustFocused:!1,listIndex:-1,resizeTimeout:0,selectedIndex:null,tiles:[]}},computed:{activeTile:function(){return this.tiles[this.listIndex]},calculatedLeft:function(){var t=Math.max(this.dimensions.content.width,parseFloat(this.calculatedMinWidth));return this.auto?Object(x["f"])(this.calcXOverflow(this.calcLeftAuto(),t))||"0":this.calcLeft(t)||"0"},calculatedMaxHeight:function(){var t=this.auto?"200px":Object(x["f"])(this.maxHeight);return t||"0"},calculatedMaxWidth:function(){return Object(x["f"])(this.maxWidth)||"0"},calculatedMinWidth:function(){if(this.minWidth)return Object(x["f"])(this.minWidth)||"0";var t=Math.min(this.dimensions.activator.width+Number(this.nudgeWidth)+(this.auto?16:0),Math.max(this.pageWidth-24,0)),e=isNaN(parseInt(this.calculatedMaxWidth))?t:parseInt(this.calculatedMaxWidth);return Object(x["f"])(Math.min(e,t))||"0"},calculatedTop:function(){var t=this.auto?Object(x["f"])(this.calcYOverflow(this.calculatedTopAuto)):this.calcTop();return t||"0"},hasClickableTiles:function(){return Boolean(this.tiles.find((function(t){return t.tabIndex>-1})))},styles:function(){return{maxHeight:this.calculatedMaxHeight,minWidth:this.calculatedMinWidth,maxWidth:this.calculatedMaxWidth,top:this.calculatedTop,left:this.calculatedLeft,transformOrigin:this.origin,zIndex:this.zIndex||this.activeZIndex}}},watch:{isActive:function(t){t||(this.listIndex=-1)},isContentActive:function(t){this.hasJustFocused=t},listIndex:function(t,e){if(t in this.tiles){var n=this.tiles[t];n.classList.add("v-list-item--highlighted"),this.$refs.content.scrollTop=n.offsetTop-n.clientHeight}e in this.tiles&&this.tiles[e].classList.remove("v-list-item--highlighted")}},created:function(){this.$attrs.hasOwnProperty("full-width")&&Object(b["e"])("full-width",this)},mounted:function(){this.isActive&&this.callActivate()},methods:{activate:function(){var t=this;this.updateDimensions(),requestAnimationFrame((function(){t.startTransition().then((function(){t.$refs.content&&(t.calculatedTopAuto=t.calcTopAuto(),t.auto&&(t.$refs.content.scrollTop=t.calcScrollPosition()))}))}))},calcScrollPosition:function(){var t=this.$refs.content,e=t.querySelector(".v-list-item--active"),n=t.scrollHeight-t.offsetHeight;return e?Math.min(n,Math.max(0,e.offsetTop-t.offsetHeight/2+e.offsetHeight/2)):t.scrollTop},calcLeftAuto:function(){return parseInt(this.dimensions.activator.left-2*this.defaultOffset)},calcTopAuto:function(){var t=this.$refs.content,e=t.querySelector(".v-list-item--active");if(e||(this.selectedIndex=null),this.offsetY||!e)return this.computedTop;this.selectedIndex=Array.from(this.tiles).indexOf(e);var n=e.offsetTop-this.calcScrollPosition(),l=t.querySelector(".v-list-item").offsetTop;return this.computedTop-n-l-1},changeListIndex:function(t){if(this.getTiles(),this.isActive&&this.hasClickableTiles)if(t.keyCode!==x["t"].tab){if(t.keyCode===x["t"].down)this.nextTile();else if(t.keyCode===x["t"].up)this.prevTile();else if(t.keyCode===x["t"].end)this.lastTile();else if(t.keyCode===x["t"].home)this.firstTile();else{if(t.keyCode!==x["t"].enter||-1===this.listIndex)return;this.tiles[this.listIndex].click()}t.preventDefault()}else this.isActive=!1},closeConditional:function(t){var e=t.target;return this.isActive&&!this._isDestroyed&&this.closeOnClick&&!this.$refs.content.contains(e)},genActivatorAttributes:function(){var t=u["a"].options.methods.genActivatorAttributes.call(this);return this.activeTile&&this.activeTile.id?Object(r["a"])(Object(r["a"])({},t),{},{"aria-activedescendant":this.activeTile.id}):t},genActivatorListeners:function(){var t=h["a"].options.methods.genActivatorListeners.call(this);return this.disableKeys||(t.keydown=this.onKeyDown),t},genTransition:function(){var t=this.genContent();return this.transition?this.$createElement("transition",{props:{name:this.transition}},[t]):t},genDirectives:function(){var t=this,e=[{name:"show",value:this.isContentActive}];return!this.openOnHover&&this.closeOnClick&&e.push({name:"click-outside",value:{handler:function(){t.isActive=!1},closeConditional:this.closeConditional,include:function(){return[t.$el].concat(Object(i["a"])(t.getOpenDependentElements()))}}}),e},genContent:function(){var t=this,e={attrs:Object(r["a"])(Object(r["a"])({},this.getScopeIdAttrs()),{},{role:"role"in this.$attrs?this.$attrs.role:"menu"}),staticClass:"v-menu__content",class:Object(r["a"])(Object(r["a"])(Object(r["a"])({},this.rootThemeClasses),this.roundedClasses),{},Object(l["a"])({"v-menu__content--auto":this.auto,"v-menu__content--fixed":this.activatorFixed,menuable__content__active:this.isActive},this.contentClass.trim(),!0)),style:this.styles,directives:this.genDirectives(),ref:"content",on:{click:function(e){var n=e.target;n.getAttribute("disabled")||t.closeOnContentClick&&(t.isActive=!1)},keydown:this.onKeyDown}};return this.$listeners.scroll&&(e.on=e.on||{},e.on.scroll=this.$listeners.scroll),!this.disabled&&this.openOnHover&&(e.on=e.on||{},e.on.mouseenter=this.mouseEnterHandler),this.openOnHover&&(e.on=e.on||{},e.on.mouseleave=this.mouseLeaveHandler),this.$createElement("div",e,this.getContentSlot())},getTiles:function(){this.$refs.content&&(this.tiles=Array.from(this.$refs.content.querySelectorAll(".v-list-item")))},mouseEnterHandler:function(){var t=this;this.runDelay("open",(function(){t.hasJustFocused||(t.hasJustFocused=!0)}))},mouseLeaveHandler:function(t){var e=this;this.runDelay("close",(function(){e.$refs.content.contains(t.relatedTarget)||requestAnimationFrame((function(){e.isActive=!1,e.callDeactivate()}))}))},nextTile:function(){var t=this.tiles[this.listIndex+1];if(!t){if(!this.tiles.length)return;return this.listIndex=-1,void this.nextTile()}this.listIndex++,-1===t.tabIndex&&this.nextTile()},prevTile:function(){var t=this.tiles[this.listIndex-1];if(!t){if(!this.tiles.length)return;return this.listIndex=this.tiles.length,void this.prevTile()}this.listIndex--,-1===t.tabIndex&&this.prevTile()},lastTile:function(){var t=this.tiles[this.tiles.length-1];t&&(this.listIndex=this.tiles.length-1,-1===t.tabIndex&&this.prevTile())},firstTile:function(){var t=this.tiles[0];t&&(this.listIndex=0,-1===t.tabIndex&&this.nextTile())},onKeyDown:function(t){var e=this;if(t.keyCode===x["t"].esc){setTimeout((function(){e.isActive=!1}));var n=this.getActivator();this.$nextTick((function(){return n&&n.focus()}))}else!this.isActive&&[x["t"].up,x["t"].down].includes(t.keyCode)&&(this.isActive=!0);this.$nextTick((function(){return e.changeListIndex(t)}))},onResize:function(){this.isActive&&(this.$refs.content.offsetWidth,this.updateDimensions(),clearTimeout(this.resizeTimeout),this.resizeTimeout=window.setTimeout(this.updateDimensions,100))}},render:function(t){var e=this,n={staticClass:"v-menu",class:{"v-menu--attached":""===this.attach||!0===this.attach||"attach"===this.attach},directives:[{arg:"500",name:"resize",value:this.onResize}]};return t("div",n,[!this.activator&&this.genActivator(),this.showLazyContent((function(){return[e.$createElement(o["a"],{props:{root:!0,light:e.light,dark:e.dark}},[e.genTransition()])]}))])}})},e4d3:function(t,e,n){"use strict";var l=n("2b0e");e["a"]=l["a"].extend({name:"returnable",props:{returnValue:null},data:function(){return{isActive:!1,originalValue:null}},watch:{isActive:function(t){t?this.originalValue=this.returnValue:this.$emit("update:return-value",this.originalValue)}},methods:{save:function(t){var e=this;this.originalValue=t,setTimeout((function(){e.isActive=!1}))}}})},e538:function(t,e,n){var l=n("b622");e.f=l},e58c:function(t,e,n){"use strict";var l=n("fc6a"),i=n("a691"),r=n("50c4"),o=n("a640"),u=n("ae40"),a=Math.min,s=[].lastIndexOf,c=!!s&&1/[1].lastIndexOf(1,-0)<0,h=o("lastIndexOf"),d=u("indexOf",{ACCESSORS:!0,1:0}),f=c||!h||!d;t.exports=f?function(t){if(c)return s.apply(this,arguments)||0;var e=l(this),n=r(e.length),o=n-1;for(arguments.length>1&&(o=a(o,i(arguments[1]))),o<0&&(o=n+o);o>=0;o--)if(o in e&&e[o]===t)return o||0;return-1}:s},e667:function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(e){return{error:!0,value:e}}}},e6cf:function(t,e,n){"use strict";var l,i,r,o,u=n("23e7"),a=n("c430"),s=n("da84"),c=n("d066"),h=n("fea9"),d=n("6eeb"),f=n("e2cc"),p=n("d44e"),m=n("2626"),v=n("861d"),g=n("1c0b"),y=n("19aa"),b=n("8925"),x=n("2266"),w=n("1c7e"),_=n("4840"),M=n("2cf4").set,S=n("b575"),T=n("cdf9"),E=n("44de"),A=n("f069"),C=n("e667"),O=n("69f3"),L=n("94ca"),P=n("b622"),R=n("605d"),k=n("2d00"),I=P("species"),D="Promise",N=O.get,j=O.set,B=O.getterFor(D),z=h,F=s.TypeError,U=s.document,V=s.process,H=c("fetch"),G=A.f,W=G,$=!!(U&&U.createEvent&&s.dispatchEvent),q="function"==typeof PromiseRejectionEvent,X="unhandledrejection",Y="rejectionhandled",Z=0,J=1,K=2,Q=1,tt=2,et=L(D,(function(){var t=b(z)!==String(z);if(!t){if(66===k)return!0;if(!R&&!q)return!0}if(a&&!z.prototype["finally"])return!0;if(k>=51&&/native code/.test(z))return!1;var e=z.resolve(1),n=function(t){t((function(){}),(function(){}))},l=e.constructor={};return l[I]=n,!(e.then((function(){}))instanceof n)})),nt=et||!w((function(t){z.all(t)["catch"]((function(){}))})),lt=function(t){var e;return!(!v(t)||"function"!=typeof(e=t.then))&&e},it=function(t,e){if(!t.notified){t.notified=!0;var n=t.reactions;S((function(){var l=t.value,i=t.state==J,r=0;while(n.length>r){var o,u,a,s=n[r++],c=i?s.ok:s.fail,h=s.resolve,d=s.reject,f=s.domain;try{c?(i||(t.rejection===tt&&at(t),t.rejection=Q),!0===c?o=l:(f&&f.enter(),o=c(l),f&&(f.exit(),a=!0)),o===s.promise?d(F("Promise-chain cycle")):(u=lt(o))?u.call(o,h,d):h(o)):d(l)}catch(p){f&&!a&&f.exit(),d(p)}}t.reactions=[],t.notified=!1,e&&!t.rejection&&ot(t)}))}},rt=function(t,e,n){var l,i;$?(l=U.createEvent("Event"),l.promise=e,l.reason=n,l.initEvent(t,!1,!0),s.dispatchEvent(l)):l={promise:e,reason:n},!q&&(i=s["on"+t])?i(l):t===X&&E("Unhandled promise rejection",n)},ot=function(t){M.call(s,(function(){var e,n=t.facade,l=t.value,i=ut(t);if(i&&(e=C((function(){R?V.emit("unhandledRejection",l,n):rt(X,n,l)})),t.rejection=R||ut(t)?tt:Q,e.error))throw e.value}))},ut=function(t){return t.rejection!==Q&&!t.parent},at=function(t){M.call(s,(function(){var e=t.facade;R?V.emit("rejectionHandled",e):rt(Y,e,t.value)}))},st=function(t,e,n){return function(l){t(e,l,n)}},ct=function(t,e,n){t.done||(t.done=!0,n&&(t=n),t.value=e,t.state=K,it(t,!0))},ht=function(t,e,n){if(!t.done){t.done=!0,n&&(t=n);try{if(t.facade===e)throw F("Promise can't be resolved itself");var l=lt(e);l?S((function(){var n={done:!1};try{l.call(e,st(ht,n,t),st(ct,n,t))}catch(i){ct(n,i,t)}})):(t.value=e,t.state=J,it(t,!1))}catch(i){ct({done:!1},i,t)}}};et&&(z=function(t){y(this,z,D),g(t),l.call(this);var e=N(this);try{t(st(ht,e),st(ct,e))}catch(n){ct(e,n)}},l=function(t){j(this,{type:D,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:Z,value:void 0})},l.prototype=f(z.prototype,{then:function(t,e){var n=B(this),l=G(_(this,z));return l.ok="function"!=typeof t||t,l.fail="function"==typeof e&&e,l.domain=R?V.domain:void 0,n.parent=!0,n.reactions.push(l),n.state!=Z&&it(n,!1),l.promise},catch:function(t){return this.then(void 0,t)}}),i=function(){var t=new l,e=N(t);this.promise=t,this.resolve=st(ht,e),this.reject=st(ct,e)},A.f=G=function(t){return t===z||t===r?new i(t):W(t)},a||"function"!=typeof h||(o=h.prototype.then,d(h.prototype,"then",(function(t,e){var n=this;return new z((function(t,e){o.call(n,t,e)})).then(t,e)}),{unsafe:!0}),"function"==typeof H&&u({global:!0,enumerable:!0,forced:!0},{fetch:function(t){return T(z,H.apply(s,arguments))}}))),u({global:!0,wrap:!0,forced:et},{Promise:z}),p(z,D,!1,!0),m(D),r=c(D),u({target:D,stat:!0,forced:et},{reject:function(t){var e=G(this);return e.reject.call(void 0,t),e.promise}}),u({target:D,stat:!0,forced:a||et},{resolve:function(t){return T(a&&this===r?z:this,t)}}),u({target:D,stat:!0,forced:nt},{all:function(t){var e=this,n=G(e),l=n.resolve,i=n.reject,r=C((function(){var n=g(e.resolve),r=[],o=0,u=1;x(t,(function(t){var a=o++,s=!1;r.push(void 0),u++,n.call(e,t).then((function(t){s||(s=!0,r[a]=t,--u||l(r))}),i)})),--u||l(r)}));return r.error&&i(r.value),n.promise},race:function(t){var e=this,n=G(e),l=n.reject,i=C((function(){var i=g(e.resolve);x(t,(function(t){i.call(e,t).then(n.resolve,l)}))}));return i.error&&l(i.value),n.promise}})},e893:function(t,e,n){var l=n("5135"),i=n("56ef"),r=n("06cf"),o=n("9bf2");t.exports=function(t,e){for(var n=i(e),u=o.f,a=r.f,s=0;s<n.length;s++){var c=n[s];l(t,c)||u(t,c,a(e,c))}}},e8b5:function(t,e,n){var l=n("c6b6");t.exports=Array.isArray||function(t){return"Array"==l(t)}},e91f:function(t,e,n){"use strict";var l=n("ebb5"),i=n("4d64").indexOf,r=l.aTypedArray,o=l.exportTypedArrayMethod;o("indexOf",(function(t){return i(r(this),t,arguments.length>1?arguments[1]:void 0)}))},e95a:function(t,e,n){var l=n("b622"),i=n("3f8c"),r=l("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||o[r]===t)}},e9b1:function(t,e,n){},ebb5:function(t,e,n){"use strict";var l,i=n("a981"),r=n("83ab"),o=n("da84"),u=n("861d"),a=n("5135"),s=n("f5df"),c=n("9112"),h=n("6eeb"),d=n("9bf2").f,f=n("e163"),p=n("d2bb"),m=n("b622"),v=n("90e3"),g=o.Int8Array,y=g&&g.prototype,b=o.Uint8ClampedArray,x=b&&b.prototype,w=g&&f(g),_=y&&f(y),M=Object.prototype,S=M.isPrototypeOf,T=m("toStringTag"),E=v("TYPED_ARRAY_TAG"),A=i&&!!p&&"Opera"!==s(o.opera),C=!1,O={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},L={BigInt64Array:8,BigUint64Array:8},P=function(t){if(!u(t))return!1;var e=s(t);return"DataView"===e||a(O,e)||a(L,e)},R=function(t){if(!u(t))return!1;var e=s(t);return a(O,e)||a(L,e)},k=function(t){if(R(t))return t;throw TypeError("Target is not a typed array")},I=function(t){if(p){if(S.call(w,t))return t}else for(var e in O)if(a(O,l)){var n=o[e];if(n&&(t===n||S.call(n,t)))return t}throw TypeError("Target is not a typed array constructor")},D=function(t,e,n){if(r){if(n)for(var l in O){var i=o[l];i&&a(i.prototype,t)&&delete i.prototype[t]}_[t]&&!n||h(_,t,n?e:A&&y[t]||e)}},N=function(t,e,n){var l,i;if(r){if(p){if(n)for(l in O)i=o[l],i&&a(i,t)&&delete i[t];if(w[t]&&!n)return;try{return h(w,t,n?e:A&&g[t]||e)}catch(u){}}for(l in O)i=o[l],!i||i[t]&&!n||h(i,t,e)}};for(l in O)o[l]||(A=!1);if((!A||"function"!=typeof w||w===Function.prototype)&&(w=function(){throw TypeError("Incorrect invocation")},A))for(l in O)o[l]&&p(o[l],w);if((!A||!_||_===M)&&(_=w.prototype,A))for(l in O)o[l]&&p(o[l].prototype,_);if(A&&f(x)!==_&&p(x,_),r&&!a(_,T))for(l in C=!0,d(_,T,{get:function(){return u(this)?this[E]:void 0}}),O)o[l]&&c(o[l],E,l);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:A,TYPED_ARRAY_TAG:C&&E,aTypedArray:k,aTypedArrayConstructor:I,exportTypedArrayMethod:D,exportTypedArrayStaticMethod:N,isView:P,isTypedArray:R,TypedArray:w,TypedArrayPrototype:_}},ec29:function(t,e,n){},ee6f:function(t,e,n){},f069:function(t,e,n){"use strict";var l=n("1c0b"),i=function(t){var e,n;this.promise=new t((function(t,l){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=l})),this.resolve=l(e),this.reject=l(n)};t.exports.f=function(t){return new i(t)}},f183:function(t,e,n){var l=n("d012"),i=n("861d"),r=n("5135"),o=n("9bf2").f,u=n("90e3"),a=n("bb2f"),s=u("meta"),c=0,h=Object.isExtensible||function(){return!0},d=function(t){o(t,s,{value:{objectID:"O"+ ++c,weakData:{}}})},f=function(t,e){if(!i(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!r(t,s)){if(!h(t))return"F";if(!e)return"E";d(t)}return t[s].objectID},p=function(t,e){if(!r(t,s)){if(!h(t))return!0;if(!e)return!1;d(t)}return t[s].weakData},m=function(t){return a&&v.REQUIRED&&h(t)&&!r(t,s)&&d(t),t},v=t.exports={REQUIRED:!1,fastKey:f,getWeakData:p,onFreeze:m};l[s]=!0},f2e7:function(t,e,n){"use strict";n.d(e,"b",(function(){return r}));var l=n("ade3"),i=n("2b0e");function r(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"value",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"input";return i["a"].extend({name:"toggleable",model:{prop:e,event:n},props:Object(l["a"])({},e,{required:!1}),data:function(){return{isActive:!!this[e]}},watch:(t={},Object(l["a"])(t,e,(function(t){this.isActive=!!t})),Object(l["a"])(t,"isActive",(function(t){!!t!==this[e]&&this.$emit(n,t)})),t)})}var o=r();e["a"]=o},f309:function(t,e,n){"use strict";var l={};n.r(l),n.d(l,"linear",(function(){return C})),n.d(l,"easeInQuad",(function(){return O})),n.d(l,"easeOutQuad",(function(){return L})),n.d(l,"easeInOutQuad",(function(){return P})),n.d(l,"easeInCubic",(function(){return R})),n.d(l,"easeOutCubic",(function(){return k})),n.d(l,"easeInOutCubic",(function(){return I})),n.d(l,"easeInQuart",(function(){return D})),n.d(l,"easeOutQuart",(function(){return N})),n.d(l,"easeInOutQuart",(function(){return j})),n.d(l,"easeInQuint",(function(){return B})),n.d(l,"easeOutQuint",(function(){return z})),n.d(l,"easeInOutQuint",(function(){return F}));n("4160"),n("caad"),n("2532"),n("159b");var i=n("d4ec"),r=n("bee2"),o=n("2b0e"),u=n("d9bd");function a(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!a.installed){a.installed=!0,o["a"]!==t&&Object(u["b"])("Multiple instances of Vue detected\nSee https://github.com/vuetifyjs/vuetify/issues/4068\n\nIf you're seeing \"$attrs is readonly\", it's caused by this");var n=e.components||{},l=e.directives||{};for(var i in l){var r=l[i];t.directive(i,r)}(function e(n){if(n){for(var l in n){var i=n[l];i&&!e(i.$_vuetify_subcomponents)&&t.component(l,i)}return!0}return!1})(n),t.$_vuetify_installed||(t.$_vuetify_installed=!0,t.mixin({beforeCreate:function(){var e=this.$options;e.vuetify?(e.vuetify.init(this,this.$ssrContext),this.$vuetify=t.observable(e.vuetify.framework)):this.$vuetify=e.parent&&e.parent.$vuetify||this},beforeMount:function(){this.$options.vuetify&&this.$el&&this.$el.hasAttribute("data-server-rendered")&&(this.$vuetify.isHydrating=!0,this.$vuetify.breakpoint.update(!0))},mounted:function(){this.$options.vuetify&&this.$vuetify.isHydrating&&(this.$vuetify.isHydrating=!1,this.$vuetify.breakpoint.update())}}))}}n("a4d3"),n("c975"),n("b64b");function s(t,e){if(null==t)return{};var n,l,i={},r=Object.keys(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||(i[n]=t[n]);return i}function c(t,e){if(null==t)return{};var n,l,i=s(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}function h(t,e){return h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},h(t,e)}function d(t,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}n("4ae1"),n("3410");function f(t){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},f(t)}n("d3b7"),n("25f0");function p(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}var m=n("53ca");function v(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function g(t,e){return!e||"object"!==Object(m["a"])(e)&&"function"!==typeof e?v(t):e}function y(t){var e=p();return function(){var n,l=f(t);if(e){var i=f(this).constructor;n=Reflect.construct(l,arguments,i)}else n=l.apply(this,arguments);return g(this,n)}}n("95ed");var b={badge:"Badge",close:"Close",dataIterator:{noResultsText:"No matching records found",loadingText:"Loading items..."},dataTable:{itemsPerPageText:"Rows per page:",ariaLabel:{sortDescending:"Sorted descending.",sortAscending:"Sorted ascending.",sortNone:"Not sorted.",activateNone:"Activate to remove sorting.",activateDescending:"Activate to sort descending.",activateAscending:"Activate to sort ascending."},sortBy:"Sort by"},dataFooter:{itemsPerPageText:"Items per page:",itemsPerPageAll:"All",nextPage:"Next page",prevPage:"Previous page",firstPage:"First page",lastPage:"Last page",pageText:"{0}-{1} of {2}"},datePicker:{itemsSelected:"{0} selected",nextMonthAriaLabel:"Next month",nextYearAriaLabel:"Next year",prevMonthAriaLabel:"Previous month",prevYearAriaLabel:"Previous year"},noDataText:"No data available",carousel:{prev:"Previous visual",next:"Next visual",ariaLabel:{delimiter:"Carousel slide {0} of {1}"}},calendar:{moreEvents:"{0} more"},fileInput:{counter:"{0} files",counterSize:"{0} files ({1} in total)"},timePicker:{am:"AM",pm:"PM"},pagination:{ariaLabel:{wrapper:"Pagination Navigation",next:"Next page",previous:"Previous page",page:"Goto Page {0}",currentPage:"Current Page, Page {0}"}},rating:{ariaLabel:{icon:"Rating {0} of {1}"}}},x={breakpoint:{mobileBreakpoint:1264,scrollBarWidth:16,thresholds:{xs:600,sm:960,md:1280,lg:1920}},icons:{iconfont:"mdi",values:{}},lang:{current:"en",locales:{en:b},t:void 0},rtl:!1,theme:{dark:!1,default:"light",disable:!1,options:{cspNonce:void 0,customProperties:void 0,minifyTheme:void 0,themeCache:void 0,variations:!0},themes:{light:{primary:"#1976D2",secondary:"#424242",accent:"#82B1FF",error:"#FF5252",info:"#2196F3",success:"#4CAF50",warning:"#FB8C00"},dark:{primary:"#2196F3",secondary:"#424242",accent:"#FF4081",error:"#FF5252",info:"#2196F3",success:"#4CAF50",warning:"#FB8C00"}}}},w=n("80d2"),_=function(){function t(){Object(i["a"])(this,t),this.framework={}}return Object(r["a"])(t,[{key:"init",value:function(t,e){}}]),t}(),M=function(t){d(n,t);var e=y(n);function n(t,l){var r;Object(i["a"])(this,n),r=e.call(this);var o=Object(w["v"])({},x),a=l.userPreset,s=a.preset,h=void 0===s?{}:s,d=c(a,["preset"]);return null!=h.preset&&Object(u["c"])("Global presets do not support the **preset** option, it can be safely omitted"),l.preset=Object(w["v"])(Object(w["v"])(o,h),d),r}return n}(_);M.property="presets";n("13d5"),n("07ac");var S=n("ade3"),T=function(t){d(n,t);var e=y(n);function n(){var t;return Object(i["a"])(this,n),t=e.apply(this,arguments),t.bar=0,t.top=0,t.left=0,t.insetFooter=0,t.right=0,t.bottom=0,t.footer=0,t.application={bar:{},top:{},left:{},insetFooter:{},right:{},bottom:{},footer:{}},t}return Object(r["a"])(n,[{key:"register",value:function(t,e,n){this.application[e]=Object(S["a"])({},t,n),this.update(e)}},{key:"unregister",value:function(t,e){null!=this.application[e][t]&&(delete this.application[e][t],this.update(e))}},{key:"update",value:function(t){this[t]=Object.values(this.application[t]).reduce((function(t,e){return t+e}),0)}}]),n}(_);T.property="application";n("b0c0");var E=function(t){d(n,t);var e=y(n);function n(t){var l;Object(i["a"])(this,n),l=e.call(this),l.xs=!1,l.sm=!1,l.md=!1,l.lg=!1,l.xl=!1,l.xsOnly=!1,l.smOnly=!1,l.smAndDown=!1,l.smAndUp=!1,l.mdOnly=!1,l.mdAndDown=!1,l.mdAndUp=!1,l.lgOnly=!1,l.lgAndDown=!1,l.lgAndUp=!1,l.xlOnly=!1,l.name="xs",l.height=0,l.width=0,l.mobile=!0,l.resizeTimeout=0;var r=t[n.property],o=r.mobileBreakpoint,u=r.scrollBarWidth,a=r.thresholds;return l.mobileBreakpoint=o,l.scrollBarWidth=u,l.thresholds=a,l}return Object(r["a"])(n,[{key:"init",value:function(){this.update(),"undefined"!==typeof window&&window.addEventListener("resize",this.onResize.bind(this),{passive:!0})}},{key:"update",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=t?0:this.getClientHeight(),n=t?0:this.getClientWidth(),l=n<this.thresholds.xs,i=n<this.thresholds.sm&&!l,r=n<this.thresholds.md-this.scrollBarWidth&&!(i||l),o=n<this.thresholds.lg-this.scrollBarWidth&&!(r||i||l),u=n>=this.thresholds.lg-this.scrollBarWidth;switch(this.height=e,this.width=n,this.xs=l,this.sm=i,this.md=r,this.lg=o,this.xl=u,this.xsOnly=l,this.smOnly=i,this.smAndDown=(l||i)&&!(r||o||u),this.smAndUp=!l&&(i||r||o||u),this.mdOnly=r,this.mdAndDown=(l||i||r)&&!(o||u),this.mdAndUp=!(l||i)&&(r||o||u),this.lgOnly=o,this.lgAndDown=(l||i||r||o)&&!u,this.lgAndUp=!(l||i||r)&&(o||u),this.xlOnly=u,!0){case l:this.name="xs";break;case i:this.name="sm";break;case r:this.name="md";break;case o:this.name="lg";break;default:this.name="xl";break}if("number"!==typeof this.mobileBreakpoint){var a={xs:0,sm:1,md:2,lg:3,xl:4},s=a[this.name],c=a[this.mobileBreakpoint];this.mobile=s<=c}else this.mobile=n<parseInt(this.mobileBreakpoint,10)}},{key:"onResize",value:function(){clearTimeout(this.resizeTimeout),this.resizeTimeout=window.setTimeout(this.update.bind(this),200)}},{key:"getClientWidth",value:function(){return"undefined"===typeof document?0:Math.max(document.documentElement.clientWidth,window.innerWidth||0)}},{key:"getClientHeight",value:function(){return"undefined"===typeof document?0:Math.max(document.documentElement.clientHeight,window.innerHeight||0)}}]),n}(_);E.property="breakpoint";var A=n("5530"),C=function(t){return t},O=function(t){return Math.pow(t,2)},L=function(t){return t*(2-t)},P=function(t){return t<.5?2*Math.pow(t,2):(4-2*t)*t-1},R=function(t){return Math.pow(t,3)},k=function(t){return Math.pow(--t,3)+1},I=function(t){return t<.5?4*Math.pow(t,3):(t-1)*(2*t-2)*(2*t-2)+1},D=function(t){return Math.pow(t,4)},N=function(t){return 1-Math.pow(--t,4)},j=function(t){return t<.5?8*t*t*t*t:1-8*--t*t*t*t},B=function(t){return Math.pow(t,5)},z=function(t){return 1+Math.pow(--t,5)},F=function(t){return t<.5?16*Math.pow(t,5):1+16*Math.pow(--t,5)};function U(t){if("number"===typeof t)return t;var e=G(t);if(!e)throw"string"===typeof t?new Error('Target element "'.concat(t,'" not found.')):new TypeError("Target must be a Number/Selector/HTMLElement/VueComponent, received ".concat(H(t)," instead."));var n=0;while(e)n+=e.offsetTop,e=e.offsetParent;return n}function V(t){var e=G(t);if(e)return e;throw"string"===typeof t?new Error('Container element "'.concat(t,'" not found.')):new TypeError("Container must be a Selector/HTMLElement/VueComponent, received ".concat(H(t)," instead."))}function H(t){return null==t?t:t.constructor.name}function G(t){return"string"===typeof t?document.querySelector(t):t&&t._isVue?t.$el:t instanceof HTMLElement?t:null}function W(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Object(A["a"])({container:document.scrollingElement||document.body||document.documentElement,duration:500,offset:0,easing:"easeInOutCubic",appOffset:!0},e),i=V(n.container);if(n.appOffset&&W.framework.application){var r=i.classList.contains("v-navigation-drawer"),o=i.classList.contains("v-navigation-drawer--clipped"),u=W.framework.application,a=u.bar,s=u.top;n.offset+=a,r&&!o||(n.offset+=s)}var c,h=performance.now();c="number"===typeof t?U(t)-n.offset:U(t)-U(i)-n.offset;var d=i.scrollTop;if(c===d)return Promise.resolve(c);var f="function"===typeof n.easing?n.easing:l[n.easing];if(!f)throw new TypeError('Easing function "'.concat(n.easing,'" not found.'));return new Promise((function(t){return requestAnimationFrame((function e(l){var r=l-h,o=Math.abs(n.duration?Math.min(r/n.duration,1):1);i.scrollTop=Math.floor(d+(c-d)*f(o));var u=i===document.body?document.documentElement.clientHeight:i.clientHeight;if(1===o||u+i.scrollTop===i.scrollHeight)return t(c);requestAnimationFrame(e)}))}))}W.framework={},W.init=function(){};var $=function(t){d(n,t);var e=y(n);function n(){var t;return Object(i["a"])(this,n),t=e.call(this),g(t,W)}return n}(_);$.property="goTo";n("ddb0"),n("dca8");var q={complete:"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z",cancel:"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z",close:"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z",delete:"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z",clear:"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z",success:"M12,2C17.52,2 22,6.48 22,12C22,17.52 17.52,22 12,22C6.48,22 2,17.52 2,12C2,6.48 6.48,2 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z",info:"M13,9H11V7H13M13,17H11V11H13M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z",warning:"M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z",error:"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z",prev:"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z",next:"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z",checkboxOn:"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z",checkboxOff:"M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z",checkboxIndeterminate:"M17,13H7V11H17M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z",delimiter:"M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z",sort:"M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z",expand:"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z",menu:"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z",subgroup:"M7,10L12,15L17,10H7Z",dropdown:"M7,10L12,15L17,10H7Z",radioOn:"M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2M12,7C9.24,7 7,9.24 7,12C7,14.76 9.24,17 12,17C14.76,17 17,14.76 17,12C17,9.24 14.76,7 12,7Z",radioOff:"M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z",edit:"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z",ratingEmpty:"M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z",ratingFull:"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z",ratingHalf:"M12,15.4V6.1L13.71,10.13L18.09,10.5L14.77,13.39L15.76,17.67M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z",loading:"M19,8L15,12H18C18,15.31 15.31,18 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20C16.42,20 20,16.42 20,12H23M6,12C6,8.69 8.69,6 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4C7.58,4 4,7.58 4,12H1L5,16L9,12",first:"M18.41,16.59L13.82,12L18.41,7.41L17,6L11,12L17,18L18.41,16.59M6,6H8V18H6V6Z",last:"M5.59,7.41L10.18,12L5.59,16.59L7,18L13,12L7,6L5.59,7.41M16,6H18V18H16V6Z",unfold:"M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z",file:"M16.5,6V17.5C16.5,19.71 14.71,21.5 12.5,21.5C10.29,21.5 8.5,19.71 8.5,17.5V5C8.5,3.62 9.62,2.5 11,2.5C12.38,2.5 13.5,3.62 13.5,5V15.5C13.5,16.05 13.05,16.5 12.5,16.5C11.95,16.5 11.5,16.05 11.5,15.5V6H10V15.5C10,16.88 11.12,18 12.5,18C13.88,18 15,16.88 15,15.5V5C15,2.79 13.21,1 11,1C8.79,1 7,2.79 7,5V17.5C7,20.54 9.46,23 12.5,23C15.54,23 18,20.54 18,17.5V6H16.5Z",plus:"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z",minus:"M19,13H5V11H19V13Z"},X=q,Y={complete:"check",cancel:"cancel",close:"close",delete:"cancel",clear:"clear",success:"check_circle",info:"info",warning:"priority_high",error:"warning",prev:"chevron_left",next:"chevron_right",checkboxOn:"check_box",checkboxOff:"check_box_outline_blank",checkboxIndeterminate:"indeterminate_check_box",delimiter:"fiber_manual_record",sort:"arrow_upward",expand:"keyboard_arrow_down",menu:"menu",subgroup:"arrow_drop_down",dropdown:"arrow_drop_down",radioOn:"radio_button_checked",radioOff:"radio_button_unchecked",edit:"edit",ratingEmpty:"star_border",ratingFull:"star",ratingHalf:"star_half",loading:"cached",first:"first_page",last:"last_page",unfold:"unfold_more",file:"attach_file",plus:"add",minus:"remove"},Z=Y,J={complete:"mdi-check",cancel:"mdi-close-circle",close:"mdi-close",delete:"mdi-close-circle",clear:"mdi-close",success:"mdi-check-circle",info:"mdi-information",warning:"mdi-exclamation",error:"mdi-alert",prev:"mdi-chevron-left",next:"mdi-chevron-right",checkboxOn:"mdi-checkbox-marked",checkboxOff:"mdi-checkbox-blank-outline",checkboxIndeterminate:"mdi-minus-box",delimiter:"mdi-circle",sort:"mdi-arrow-up",expand:"mdi-chevron-down",menu:"mdi-menu",subgroup:"mdi-menu-down",dropdown:"mdi-menu-down",radioOn:"mdi-radiobox-marked",radioOff:"mdi-radiobox-blank",edit:"mdi-pencil",ratingEmpty:"mdi-star-outline",ratingFull:"mdi-star",ratingHalf:"mdi-star-half-full",loading:"mdi-cached",first:"mdi-page-first",last:"mdi-page-last",unfold:"mdi-unfold-more-horizontal",file:"mdi-paperclip",plus:"mdi-plus",minus:"mdi-minus"},K=J,Q={complete:"fas fa-check",cancel:"fas fa-times-circle",close:"fas fa-times",delete:"fas fa-times-circle",clear:"fas fa-times-circle",success:"fas fa-check-circle",info:"fas fa-info-circle",warning:"fas fa-exclamation",error:"fas fa-exclamation-triangle",prev:"fas fa-chevron-left",next:"fas fa-chevron-right",checkboxOn:"fas fa-check-square",checkboxOff:"far fa-square",checkboxIndeterminate:"fas fa-minus-square",delimiter:"fas fa-circle",sort:"fas fa-sort-up",expand:"fas fa-chevron-down",menu:"fas fa-bars",subgroup:"fas fa-caret-down",dropdown:"fas fa-caret-down",radioOn:"far fa-dot-circle",radioOff:"far fa-circle",edit:"fas fa-edit",ratingEmpty:"far fa-star",ratingFull:"fas fa-star",ratingHalf:"fas fa-star-half",loading:"fas fa-sync",first:"fas fa-step-backward",last:"fas fa-step-forward",unfold:"fas fa-arrows-alt-v",file:"fas fa-paperclip",plus:"fas fa-plus",minus:"fas fa-minus"},tt=Q,et={complete:"fa fa-check",cancel:"fa fa-times-circle",close:"fa fa-times",delete:"fa fa-times-circle",clear:"fa fa-times-circle",success:"fa fa-check-circle",info:"fa fa-info-circle",warning:"fa fa-exclamation",error:"fa fa-exclamation-triangle",prev:"fa fa-chevron-left",next:"fa fa-chevron-right",checkboxOn:"fa fa-check-square",checkboxOff:"fa fa-square-o",checkboxIndeterminate:"fa fa-minus-square",delimiter:"fa fa-circle",sort:"fa fa-sort-up",expand:"fa fa-chevron-down",menu:"fa fa-bars",subgroup:"fa fa-caret-down",dropdown:"fa fa-caret-down",radioOn:"fa fa-dot-circle-o",radioOff:"fa fa-circle-o",edit:"fa fa-pencil",ratingEmpty:"fa fa-star-o",ratingFull:"fa fa-star",ratingHalf:"fa fa-star-half-o",loading:"fa fa-refresh",first:"fa fa-step-backward",last:"fa fa-step-forward",unfold:"fa fa-angle-double-down",file:"fa fa-paperclip",plus:"fa fa-plus",minus:"fa fa-minus"},nt=et;n("ac1f"),n("1276");function lt(t,e){var n={};for(var l in e)n[l]={component:t,props:{icon:e[l].split(" fa-")}};return n}var it=lt("font-awesome-icon",tt),rt=Object.freeze({mdiSvg:X,md:Z,mdi:K,fa:tt,fa4:nt,faSvg:it}),ot=function(t){d(n,t);var e=y(n);function n(t){var l;Object(i["a"])(this,n),l=e.call(this);var r=t[n.property],o=r.iconfont,u=r.values,a=r.component;return l.component=a,l.iconfont=o,l.values=Object(w["v"])(rt[o],u),l}return n}(_);ot.property="icons";n("e01a"),n("99af"),n("5319"),n("2ca0");var ut="$vuetify.",at=Symbol("Lang fallback");function st(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3?arguments[3]:void 0,i=e.replace(ut,""),r=Object(w["m"])(t,i,at);return r===at&&(n?(Object(u["b"])('Translation key "'.concat(i,'" not found in fallback')),r=e):(Object(u["c"])('Translation key "'.concat(i,'" not found, falling back to default')),r=st(l,e,!0,l))),r}var ct=function(t){d(n,t);var e=y(n);function n(t){var l;Object(i["a"])(this,n),l=e.call(this),l.defaultLocale="en";var r=t[n.property],o=r.current,u=r.locales,a=r.t;return l.current=o,l.locales=u,l.translator=a||l.defaultTranslator,l}return Object(r["a"])(n,[{key:"currentLocale",value:function(t){var e=this.locales[this.current],n=this.locales[this.defaultLocale];return st(e,t,!1,n)}},{key:"t",value:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),l=1;l<e;l++)n[l-1]=arguments[l];return t.startsWith(ut)?this.translator.apply(this,[t].concat(n)):this.replace(t,n)}},{key:"defaultTranslator",value:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),l=1;l<e;l++)n[l-1]=arguments[l];return this.replace(this.currentLocale(t),n)}},{key:"replace",value:function(t,e){return t.replace(/\{(\d+)\}/g,(function(t,n){return String(e[+n])}))}}]),n}(_);ct.property="lang";n("7db0"),n("18a5");var ht=n("3835"),dt=n("7bc6"),ft=n("8da5"),pt=(n("3ea3"),.20689655172413793),mt=function(t){return t>Math.pow(pt,3)?Math.cbrt(t):t/(3*Math.pow(pt,2))+4/29},vt=function(t){return t>pt?Math.pow(t,3):3*Math.pow(pt,2)*(t-4/29)};function gt(t){var e=mt,n=e(t[1]);return[116*n-16,500*(e(t[0]/.95047)-n),200*(n-e(t[2]/1.08883))]}function yt(t){var e=vt,n=(t[0]+16)/116;return[.95047*e(n+t[1]/500),e(n),1.08883*e(n-t[2]/200)]}function bt(t){for(var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=t.anchor,i=c(t,["anchor"]),r=Object.keys(i),o={},u=0;u<r.length;++u){var a=r[u],s=t[a];null!=s&&(n?e?("base"===a||a.startsWith("lighten")||a.startsWith("darken"))&&(o[a]=Object(dt["a"])(s)):"object"===Object(m["a"])(s)?o[a]=bt(s,!0,n):o[a]=Tt(a,Object(dt["b"])(s)):o[a]={base:Object(dt["c"])(Object(dt["b"])(s))})}return e||(o.anchor=l||o.base||o.primary.base),o}var xt=function(t,e){return"\n.v-application .".concat(t," {\n  background-color: ").concat(e," !important;\n  border-color: ").concat(e," !important;\n}\n.v-application .").concat(t,"--text {\n  color: ").concat(e," !important;\n  caret-color: ").concat(e," !important;\n}")},wt=function(t,e,n){var l=e.split(/(\d)/,2),i=Object(ht["a"])(l,2),r=i[0],o=i[1];return"\n.v-application .".concat(t,".").concat(r,"-").concat(o," {\n  background-color: ").concat(n," !important;\n  border-color: ").concat(n," !important;\n}\n.v-application .").concat(t,"--text.text--").concat(r,"-").concat(o," {\n  color: ").concat(n," !important;\n  caret-color: ").concat(n," !important;\n}")},_t=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"base";return"--v-".concat(t,"-").concat(e)},Mt=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"base";return"var(".concat(_t(t,e),")")};function St(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=t.anchor,l=c(t,["anchor"]),i=Object.keys(l);if(!i.length)return"";var r="",o="",u=e?Mt("anchor"):n;o+=".v-application a { color: ".concat(u,"; }"),e&&(r+="  ".concat(_t("anchor"),": ").concat(n,";\n"));for(var a=0;a<i.length;++a){var s=i[a],h=t[s];o+=xt(s,e?Mt(s):h.base),e&&(r+="  ".concat(_t(s),": ").concat(h.base,";\n"));for(var d=Object.keys(h),f=0;f<d.length;++f){var p=d[f],m=h[p];"base"!==p&&(o+=wt(s,p,e?Mt(s,p):m),e&&(r+="  ".concat(_t(s,p),": ").concat(m,";\n")))}}return e&&(r=":root {\n".concat(r,"}\n\n")),r+o}function Tt(t,e){for(var n={base:Object(dt["c"])(e)},l=5;l>0;--l)n["lighten".concat(l)]=Object(dt["c"])(Et(e,l));for(var i=1;i<=4;++i)n["darken".concat(i)]=Object(dt["c"])(At(e,i));return n}function Et(t,e){var n=gt(ft["b"](t));return n[0]=n[0]+10*e,ft["a"](yt(n))}function At(t,e){var n=gt(ft["b"](t));return n[0]=n[0]-10*e,ft["a"](yt(n))}var Ct=function(t){d(n,t);var e=y(n);function n(t){var l;Object(i["a"])(this,n),l=e.call(this),l.disabled=!1,l.isDark=null,l.unwatch=null,l.vueMeta=null;var r=t[n.property],o=r.dark,u=r.disable,a=r.options,s=r.themes;return l.dark=Boolean(o),l.defaults=l.themes=s,l.options=a,u?(l.disabled=!0,g(l)):(l.themes={dark:l.fillVariant(s.dark,!0),light:l.fillVariant(s.light,!1)},l)}return Object(r["a"])(n,[{key:"applyTheme",value:function(){if(this.disabled)return this.clearCss();this.css=this.generatedStyles}},{key:"clearCss",value:function(){this.css=""}},{key:"init",value:function(t,e){this.disabled||(t.$meta?this.initVueMeta(t):e&&this.initSSR(e),this.initTheme(t))}},{key:"setTheme",value:function(t,e){this.themes[t]=Object.assign(this.themes[t],e),this.applyTheme()}},{key:"resetThemes",value:function(){this.themes.light=Object.assign({},this.defaults.light),this.themes.dark=Object.assign({},this.defaults.dark),this.applyTheme()}},{key:"checkOrCreateStyleElement",value:function(){return this.styleEl=document.getElementById("vuetify-theme-stylesheet"),!!this.styleEl||(this.genStyleElement(),Boolean(this.styleEl))}},{key:"fillVariant",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0,n=this.themes[e?"dark":"light"];return Object.assign({},n,t)}},{key:"genStyleElement",value:function(){"undefined"!==typeof document&&(this.styleEl=document.createElement("style"),this.styleEl.type="text/css",this.styleEl.id="vuetify-theme-stylesheet",this.options.cspNonce&&this.styleEl.setAttribute("nonce",this.options.cspNonce),document.head.appendChild(this.styleEl))}},{key:"initVueMeta",value:function(t){var e=this;if(this.vueMeta=t.$meta(),this.isVueMeta23)t.$nextTick((function(){e.applyVueMeta23()}));else{var n="function"===typeof this.vueMeta.getOptions?this.vueMeta.getOptions().keyName:"metaInfo",l=t.$options[n]||{};t.$options[n]=function(){l.style=l.style||[];var t=l.style.find((function(t){return"vuetify-theme-stylesheet"===t.id}));return t?t.cssText=e.generatedStyles:l.style.push({cssText:e.generatedStyles,type:"text/css",id:"vuetify-theme-stylesheet",nonce:(e.options||{}).cspNonce}),l}}}},{key:"applyVueMeta23",value:function(){var t=this.vueMeta.addApp("vuetify"),e=t.set;e({style:[{cssText:this.generatedStyles,type:"text/css",id:"vuetify-theme-stylesheet",nonce:this.options.cspNonce}]})}},{key:"initSSR",value:function(t){var e=this.options.cspNonce?' nonce="'.concat(this.options.cspNonce,'"'):"";t.head=t.head||"",t.head+='<style type="text/css" id="vuetify-theme-stylesheet"'.concat(e,">").concat(this.generatedStyles,"</style>")}},{key:"initTheme",value:function(t){var e=this;"undefined"!==typeof document&&(this.unwatch&&(this.unwatch(),this.unwatch=null),t.$once("hook:created",(function(){var n=o["a"].observable({themes:e.themes});e.unwatch=t.$watch((function(){return n.themes}),(function(){return e.applyTheme()}),{deep:!0})})),this.applyTheme())}},{key:"css",set:function(t){this.vueMeta?this.isVueMeta23&&this.applyVueMeta23():this.checkOrCreateStyleElement()&&(this.styleEl.innerHTML=t)}},{key:"dark",set:function(t){var e=this.isDark;this.isDark=t,null!=e&&this.applyTheme()},get:function(){return Boolean(this.isDark)}},{key:"currentTheme",get:function(){var t=this.dark?"dark":"light";return this.themes[t]}},{key:"generatedStyles",get:function(){var t,e=this.parsedTheme,n=this.options||{};return null!=n.themeCache&&(t=n.themeCache.get(e),null!=t)||(t=St(e,n.customProperties),null!=n.minifyTheme&&(t=n.minifyTheme(t)),null!=n.themeCache&&n.themeCache.set(e,t)),t}},{key:"parsedTheme",get:function(){return bt(this.currentTheme||{},void 0,Object(w["l"])(this.options,["variations"],!0))}},{key:"isVueMeta23",get:function(){return"function"===typeof this.vueMeta.addApp}}]),n}(_);Ct.property="theme",n.d(e,"a",(function(){return Ot}));var Ot=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object(i["a"])(this,t),this.framework={isHydrating:!1},this.installed=[],this.preset={},this.userPreset={},this.userPreset=e,this.use(M),this.use(T),this.use(E),this.use($),this.use(ot),this.use(ct),this.use(Ct)}return Object(r["a"])(t,[{key:"init",value:function(t,e){var n=this;this.installed.forEach((function(l){var i=n.framework[l];i.framework=n.framework,i.init(t,e)})),this.framework.rtl=Boolean(this.preset.rtl)}},{key:"use",value:function(t){var e=t.property;this.installed.includes(e)||(this.framework[e]=new t(this.preset,this),this.installed.push(e))}}]),t}();Ot.install=a,Ot.installed=!1,Ot.version="2.4.2",Ot.config={silent:!1}},f573:function(t,e,n){"use strict";n("a9e3"),n("d3b7");var l=n("5530"),i=n("fe6c"),r=n("21be"),o=n("4ad4"),u=n("58df"),a=n("80d2"),s=Object(u["a"])(r["a"],i["a"],o["a"]);e["a"]=s.extend().extend({name:"menuable",props:{allowOverflow:Boolean,light:Boolean,dark:Boolean,maxWidth:{type:[Number,String],default:"auto"},minWidth:[Number,String],nudgeBottom:{type:[Number,String],default:0},nudgeLeft:{type:[Number,String],default:0},nudgeRight:{type:[Number,String],default:0},nudgeTop:{type:[Number,String],default:0},nudgeWidth:{type:[Number,String],default:0},offsetOverflow:Boolean,openOnClick:Boolean,positionX:{type:Number,default:null},positionY:{type:Number,default:null},zIndex:{type:[Number,String],default:null}},data:function(){return{absoluteX:0,absoluteY:0,activatedBy:null,activatorFixed:!1,dimensions:{activator:{top:0,left:0,bottom:0,right:0,width:0,height:0,offsetTop:0,scrollHeight:0,offsetLeft:0},content:{top:0,left:0,bottom:0,right:0,width:0,height:0,offsetTop:0,scrollHeight:0}},hasJustFocused:!1,hasWindow:!1,inputActivator:!1,isContentActive:!1,pageWidth:0,pageYOffset:0,stackClass:"v-menu__content--active",stackMinZIndex:6}},computed:{computedLeft:function(){var t=this.dimensions.activator,e=this.dimensions.content,n=(!1!==this.attach?t.offsetLeft:t.left)||0,l=Math.max(t.width,e.width),i=0;if(i+=this.left?n-(l-t.width):n,this.offsetX){var r=isNaN(Number(this.maxWidth))?t.width:Math.min(t.width,Number(this.maxWidth));i+=this.left?-r:t.width}return this.nudgeLeft&&(i-=parseInt(this.nudgeLeft)),this.nudgeRight&&(i+=parseInt(this.nudgeRight)),i},computedTop:function(){var t=this.dimensions.activator,e=this.dimensions.content,n=0;return this.top&&(n+=t.height-e.height),!1!==this.attach?n+=t.offsetTop:n+=t.top+this.pageYOffset,this.offsetY&&(n+=this.top?-t.height:t.height),this.nudgeTop&&(n-=parseInt(this.nudgeTop)),this.nudgeBottom&&(n+=parseInt(this.nudgeBottom)),n},hasActivator:function(){return!!this.$slots.activator||!!this.$scopedSlots.activator||!!this.activator||!!this.inputActivator}},watch:{disabled:function(t){t&&this.callDeactivate()},isActive:function(t){this.disabled||(t?this.callActivate():this.callDeactivate())},positionX:"updateDimensions",positionY:"updateDimensions"},beforeMount:function(){this.hasWindow="undefined"!==typeof window},methods:{absolutePosition:function(){return{offsetTop:0,offsetLeft:0,scrollHeight:0,top:this.positionY||this.absoluteY,bottom:this.positionY||this.absoluteY,left:this.positionX||this.absoluteX,right:this.positionX||this.absoluteX,height:0,width:0}},activate:function(){},calcLeft:function(t){return Object(a["f"])(!1!==this.attach?this.computedLeft:this.calcXOverflow(this.computedLeft,t))},calcTop:function(){return Object(a["f"])(!1!==this.attach?this.computedTop:this.calcYOverflow(this.computedTop))},calcXOverflow:function(t,e){var n=t+e-this.pageWidth+12;return t=(!this.left||this.right)&&n>0?Math.max(t-n,0):Math.max(t,12),t+this.getOffsetLeft()},calcYOverflow:function(t){var e=this.getInnerHeight(),n=this.pageYOffset+e,l=this.dimensions.activator,i=this.dimensions.content.height,r=t+i,o=n<r;return o&&this.offsetOverflow&&l.top>i?t=this.pageYOffset+(l.top-i):o&&!this.allowOverflow?t=n-i-12:t<this.pageYOffset&&!this.allowOverflow&&(t=this.pageYOffset+12),t<12?12:t},callActivate:function(){this.hasWindow&&this.activate()},callDeactivate:function(){this.isContentActive=!1,this.deactivate()},checkForPageYOffset:function(){this.hasWindow&&(this.pageYOffset=this.activatorFixed?0:this.getOffsetTop())},checkActivatorFixed:function(){if(!1===this.attach){var t=this.getActivator();while(t){if("fixed"===window.getComputedStyle(t).position)return void(this.activatorFixed=!0);t=t.offsetParent}this.activatorFixed=!1}},deactivate:function(){},genActivatorListeners:function(){var t=this,e=o["a"].options.methods.genActivatorListeners.call(this),n=e.click;return e.click=function(e){t.openOnClick&&n&&n(e),t.absoluteX=e.clientX,t.absoluteY=e.clientY},e},getInnerHeight:function(){return this.hasWindow?window.innerHeight||document.documentElement.clientHeight:0},getOffsetLeft:function(){return this.hasWindow?window.pageXOffset||document.documentElement.scrollLeft:0},getOffsetTop:function(){return this.hasWindow?window.pageYOffset||document.documentElement.scrollTop:0},getRoundedBoundedClientRect:function(t){var e=t.getBoundingClientRect();return{top:Math.round(e.top),left:Math.round(e.left),bottom:Math.round(e.bottom),right:Math.round(e.right),width:Math.round(e.width),height:Math.round(e.height)}},measure:function(t){if(!t||!this.hasWindow)return null;var e=this.getRoundedBoundedClientRect(t);if(!1!==this.attach){var n=window.getComputedStyle(t);e.left=parseInt(n.marginLeft),e.top=parseInt(n.marginTop)}return e},sneakPeek:function(t){var e=this;requestAnimationFrame((function(){var n=e.$refs.content;n&&"none"===n.style.display?(n.style.display="inline-block",t(),n.style.display="none"):t()}))},startTransition:function(){var t=this;return new Promise((function(e){return requestAnimationFrame((function(){t.isContentActive=t.hasJustFocused=t.isActive,e()}))}))},updateDimensions:function(){var t=this;this.hasWindow="undefined"!==typeof window,this.checkActivatorFixed(),this.checkForPageYOffset(),this.pageWidth=document.documentElement.clientWidth;var e={activator:Object(l["a"])({},this.dimensions.activator),content:Object(l["a"])({},this.dimensions.content)};if(!this.hasActivator||this.absolute)e.activator=this.absolutePosition();else{var n=this.getActivator();if(!n)return;e.activator=this.measure(n),e.activator.offsetLeft=n.offsetLeft,!1!==this.attach?e.activator.offsetTop=n.offsetTop:e.activator.offsetTop=0}this.sneakPeek((function(){t.$refs.content&&(e.content=t.measure(t.$refs.content)),t.dimensions=e}))}}})},f5df:function(t,e,n){var l=n("00ee"),i=n("c6b6"),r=n("b622"),o=r("toStringTag"),u="Arguments"==i(function(){return arguments}()),a=function(t,e){try{return t[e]}catch(n){}};t.exports=l?i:function(t){var e,n,l;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=a(e=Object(t),o))?n:u?i(e):"Object"==(l=i(e))&&"function"==typeof e.callee?"Arguments":l}},f6c4:function(t,e,n){"use strict";n("bd0c");var l=n("2b0e"),i=l["a"].extend({name:"ssr-bootable",data:function(){return{isBooted:!1}},mounted:function(){var t=this;window.requestAnimationFrame((function(){t.$el.setAttribute("data-booted","true"),t.isBooted=!0}))}});e["a"]=i.extend({name:"v-main",props:{tag:{type:String,default:"main"}},computed:{styles:function(){var t=this.$vuetify.application,e=t.bar,n=t.top,l=t.right,i=t.footer,r=t.insetFooter,o=t.bottom,u=t.left;return{paddingTop:"".concat(n+e,"px"),paddingRight:"".concat(l,"px"),paddingBottom:"".concat(i+r+o,"px"),paddingLeft:"".concat(u,"px")}}},render:function(t){var e={staticClass:"v-main",style:this.styles,ref:"main"};return t(this.tag,e,[t("div",{staticClass:"v-main__wrap"},this.$slots.default)])}})},f748:function(t,e){t.exports=Math.sign||function(t){return 0==(t=+t)||t!=t?t:t<0?-1:1}},f772:function(t,e,n){var l=n("5692"),i=n("90e3"),r=l("keys");t.exports=function(t){return r[t]||(r[t]=i(t))}},f8cd:function(t,e,n){var l=n("a691");t.exports=function(t){var e=l(t);if(e<0)throw RangeError("The argument can't be less than 0");return e}},fb6a:function(t,e,n){"use strict";var l=n("23e7"),i=n("861d"),r=n("e8b5"),o=n("23cb"),u=n("50c4"),a=n("fc6a"),s=n("8418"),c=n("b622"),h=n("1dde"),d=n("ae40"),f=h("slice"),p=d("slice",{ACCESSORS:!0,0:0,1:2}),m=c("species"),v=[].slice,g=Math.max;l({target:"Array",proto:!0,forced:!f||!p},{slice:function(t,e){var n,l,c,h=a(this),d=u(h.length),f=o(t,d),p=o(void 0===e?d:e,d);if(r(h)&&(n=h.constructor,"function"!=typeof n||n!==Array&&!r(n.prototype)?i(n)&&(n=n[m],null===n&&(n=void 0)):n=void 0,n===Array||void 0===n))return v.call(h,f,p);for(l=new(void 0===n?Array:n)(g(p-f,0)),c=0;f<p;f++,c++)f in h&&s(l,c,h[f]);return l.length=c,l}})},fc6a:function(t,e,n){var l=n("44ad"),i=n("1d80");t.exports=function(t){return l(i(t))}},fdbc:function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},fdbf:function(t,e,n){var l=n("4930");t.exports=l&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},fe09:function(t,e,n){"use strict";n.d(e,"b",(function(){return u}));n("4de4"),n("45fc"),n("d3b7"),n("25f0");var l=n("c37a"),i=n("5311"),r=n("8547"),o=n("58df");function u(t){t.preventDefault()}e["a"]=Object(o["a"])(l["a"],i["a"],r["a"]).extend({name:"selectable",model:{prop:"inputValue",event:"change"},props:{id:String,inputValue:null,falseValue:null,trueValue:null,multiple:{type:Boolean,default:null},label:String},data:function(){return{hasColor:this.inputValue,lazyValue:this.inputValue}},computed:{computedColor:function(){if(this.isActive)return this.color?this.color:this.isDark&&!this.appIsDark?"white":"primary"},isMultiple:function(){return!0===this.multiple||null===this.multiple&&Array.isArray(this.internalValue)},isActive:function(){var t=this,e=this.value,n=this.internalValue;return this.isMultiple?!!Array.isArray(n)&&n.some((function(n){return t.valueComparator(n,e)})):void 0===this.trueValue||void 0===this.falseValue?e?this.valueComparator(e,n):Boolean(n):this.valueComparator(n,this.trueValue)},isDirty:function(){return this.isActive},rippleState:function(){return this.isDisabled||this.validationState?this.validationState:void 0}},watch:{inputValue:function(t){this.lazyValue=t,this.hasColor=t}},methods:{genLabel:function(){var t=l["a"].options.methods.genLabel.call(this);return t?(t.data.on={click:u},t):t},genInput:function(t,e){return this.$createElement("input",{attrs:Object.assign({"aria-checked":this.isActive.toString(),disabled:this.isDisabled,id:this.computedId,role:t,type:t},e),domProps:{value:this.value,checked:this.isActive},on:{blur:this.onBlur,change:this.onChange,focus:this.onFocus,keydown:this.onKeydown,click:u},ref:"input"})},onBlur:function(){this.isFocused=!1},onClick:function(t){this.onChange(),this.$emit("click",t)},onChange:function(){var t=this;if(this.isInteractive){var e=this.value,n=this.internalValue;if(this.isMultiple){Array.isArray(n)||(n=[]);var l=n.length;n=n.filter((function(n){return!t.valueComparator(n,e)})),n.length===l&&n.push(e)}else n=void 0!==this.trueValue&&void 0!==this.falseValue?this.valueComparator(n,this.trueValue)?this.falseValue:this.trueValue:e?this.valueComparator(n,e)?null:e:!n;this.validate(!0,n),this.internalValue=n,this.hasColor=n}},onFocus:function(){this.isFocused=!0},onKeydown:function(t){}}})},fe6c:function(t,e,n){"use strict";n.d(e,"b",(function(){return o}));var l=n("2b0e"),i=n("80d2"),r={absolute:Boolean,bottom:Boolean,fixed:Boolean,left:Boolean,right:Boolean,top:Boolean};function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return l["a"].extend({name:"positionable",props:t.length?Object(i["k"])(r,t):r})}e["a"]=o()},fea9:function(t,e,n){var l=n("da84");t.exports=l.Promise}}]);
//# sourceMappingURL=chunk-vendors.74315182.js.map